{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","set","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivations","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","_value__WEBPACK_IMPORTED_MODULE_9__","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_constants__WEBPACK_IMPORTED_MODULE_4__","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","generateRowDiffset","lastInsertedValue","li","selectHelper","selectFn","newRowDiffSet","rejRowDiffSet","lastInsertedValueRej","selectorHelperFn","checker","passFn","cloneWithAllFields","clonedDm","getKey","len","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","modelFieldsConfig","dataModel","keyFn","dataObj","dimensions","keys","dLen","indices","measures","fieldsSpace","v","valuesMap","present","every","some","cloneWithSelect","selectConfig","cloneConfig","cloned","_selectHelper","_selectHelper2","oDm","rejCloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","validateUnitSchema","supportedMeasureSubTypes","supportedDimSubTypes","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","valueObjects","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","fieldInSchema","getDerivationArguments","derivation","applyExistingOperationOnModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","getRootGroupByModel","find","getRootDataModel","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_constants__WEBPACK_IMPORTED_MODULE_1__","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","_enums__WEBPACK_IMPORTED_MODULE_2__","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","defaultReducerName","getFieldArr","getReducerObj","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_dataObjects","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","require","_containerManager2","slLib","init","doc","win","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","dep","seed","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","props","fnSpec","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","entries","repeatHead","resetPropagationOverride","_this4","qnames","update","resolved","resolveDependencyOrder","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","dependencies","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","list","placedIndex","preArr","postArr","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","typeChecker","_propInfo$","sanitization","preset","onset","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortFieldByType","subType","sortOrder","firstVal","secondVal","sortOrderType","getAppropriateSortingFn","localeCompare","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","depProps","registerListener","callBack","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","removePropValue","sns","commit","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","savedCommits","disabled","sanitizedVal","registerChangeListener","registerImmediateListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","store_typeof","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","nf","FieldType","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","defColorStyle","fillOpacity","shapes","sizes","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","console","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","graph","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","temporalFields","filteredFields","_ref5","_ref6","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","fieldsSorted","allFacetsFields","includes","facetName","facetField","facetSortOrder","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","formattedKeys","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","formattedColKeys","rawFormat","formattedRowKeys","transposedColKeys","valueCellsCreator","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIgjD,gCCESqX,gBAZK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIgjD,gCCESqX,kBAZK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIgjD,gCCASqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,gBAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,gBAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIgjD,gCCESqX,cAVK,IAAI30D,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAz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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    let newRowDiffSet = [];\n    const rejRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let lastInsertedValueRej = -1;\n    let { mode } = config;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        fields[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    const checker = mode === FilteringMode.INVERSE ? index => !selectorHelperFn(index) :\n        index => selectorHelperFn(index);\n\n    const passFn = (i) => {\n        if (checker(i)) {\n            generateRowDiffset(newRowDiffSet, i, lastInsertedValue);\n            lastInsertedValue = i;\n            return true;\n        }\n        return false;\n    };\n\n    if (mode === FilteringMode.ALL) {\n        rowDiffsetIterator(rowDiffset, (i) => {\n            if (!passFn(i)) {\n                generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n                lastInsertedValueRej = i;\n            }\n        });\n        return [newRowDiffSet.join(','), rejRowDiffSet.join(',')];\n    }\n\n    rowDiffsetIterator(rowDiffset, passFn);\n    return [newRowDiffSet.join(',')];\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const [rowDiffset, rejRowDiffSet] = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace()._cachedValueObjects,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    let oDm = cloned;\n    if (selectConfig.mode === FilteringMode.ALL) {\n        const rejCloned = sourceDm.clone(cloneConfig.saveChild);\n        rejCloned._rowDiffset = rejRowDiffSet;\n        rejCloned.__calculateFieldspace().calculateFieldsConfig();\n        persistDerivations(\n            sourceDm,\n            rejCloned,\n            DM_DERIVATIVES.SELECT,\n             { config: selectConfig },\n              selectFn\n        );\n        oDm = [cloned, rejCloned];\n    }\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n\n    return oDm;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._dataObjects = this._parent._dataObjects;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__fn = fn.__callBack;\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","const sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updatedata;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updatedata = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let currentData;\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const { sanitization, preset, onset } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === DATA_TYPE.STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Returns the sort function based on the type of field\n * @param {number|string} a first value\n * @param {number|string} b second value\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {string} subType Field subtype\n * @return {Function} Sort function\n */\nconst getAppropriateSortingFn = (a, b, sortOrder, subType) => {\n    if (typeof sortOrder === DATA_TYPE.FUNCTION) {\n        return sortOrder(a, b);\n    }\n    if (subType === DimensionSubtype.TEMPORAL) {\n        return sortOrder === SORT_ORDER_ASCENDING ? a - b : b - a;\n    }\n    return sortOrder === SORT_ORDER_ASCENDING ? a.localeCompare(b) : b.localeCompare(a);\n};\n\n/**\n * Sort field based on it's subtype and sorting order\n * @param {string} subType Field subtype\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {Array} firstVal First sort parameter\n * @param {number} secondVal Second sort parameter\n * @return {Function|null} Sorting function\n*/\nconst sortFieldByType = (subType, sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType !== DATA_TYPE.STRING && sortOrderType !== DATA_TYPE.FUNCTION) {\n        return null;\n    }\n    if (sortOrderType === DATA_TYPE.STRING &&\n        sortOrder !== SORT_ORDER_ASCENDING &&\n        sortOrder !== SORT_ORDER_DESCENDING) {\n        return null;\n    }\n    if (subType === DimensionSubtype.TEMPORAL || subType === DimensionSubtype.CATEGORICAL) {\n        return getAppropriateSortingFn(firstVal, secondVal, sortOrder, subType);\n    }\n    return null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\nimport { DATA_TYPE } from './enums';\n\nconst initProp = (obj, props, val) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val ? val() : {};\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => {\n    return params.map((param, i) => {\n        const prop = propNames[i];\n        return param.map((val) => (val === undefined || val === null ? val : val[deps[prop]]));\n    });\n};\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    if (namespace) {\n        !context._listeners.get(namespace) && (context._listeners.set(namespace, new Map()));\n        const listeners = context._listeners.get(namespace);\n\n        if (!key) {\n            key = listeners.size;\n        }\n        listeners.set(key, fn);\n    } else {\n        key = key || context._listeners.size;\n        context._listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n        fns++;\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, config) => {\n    const { callBack, instantCall, namespaceInf, props } = config;\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some((prop) => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        if (fnInf.fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fnInf.fns--;\n                        }\n\n                        if (fnInf.fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst types = ['next', 'on'];\n\nconst removePropValue = (context, map, sns, prop) => {\n    if (map.has(sns)) {\n        const value = context.get(prop);\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n            context.commit(prop, value, undefined, true);\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        this.lockModel();\n        const commitsObj = this._commits;\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n                if (propName in queuedProps) {\n                    this.commit(propName, queuedProps[propName][namespace], namespace);\n                } else {\n                    this.commit(propName, value, namespace);\n                }\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = types.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        let sanitizedVal = value;\n        if (namespace) {\n            if (this._locked) {\n                initProp(this._queuedProps, [propName]);\n                this._queuedProps[propName][namespace] = value;\n                sanitizedVal = this._queuedProps[propName];\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            types.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        registerListener(this, 'next', {\n            namespaceInf,\n            callBack,\n            instantCall,\n            props\n        });\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        registerListener(this, 'on', {\n            namespaceInf,\n            props,\n            callBack,\n            instantCall\n        });\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listeners = this._listeners.get(id);\n        if (key) {\n            const fn = this._listeners.get(key);\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            this._listeners.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const { _registeredListeners: listenerMap, _contextMap: contextMap } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], subNamespace, prop);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n                    removePropValue(this, snsMap, subNamespace, prop);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            let nameSpaceProp;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n``\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === DATA_TYPE.STRING) {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const fieldObj = fieldsConfig[field];\n    const index = fieldObj.index;\n    const interval = fieldObj.def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const nf = fieldObj.def.type === FieldType.MEASURE ? fieldspace.fieldsObj()[field].numberFormat() : val => val;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(nf, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const layers = this.firebolt.context.layers().filter(layer => layer.config().groupId === formalName);\n            layers.forEach((layer) => {\n                const linkedLayer = this.firebolt.context.getLayerByName(layer.config().owner);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                layer.data(transformedDataModel);\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (data && encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                        context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        // this.data(data);\n        this.axes(axes);\n        // this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return (() => ({\n            transform: {\n                type: 'identity'\n            }\n        }))();\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace } = this.metaInf();\n        this.store().removeSubNamespace(namespace, BaseLayer.formalName());\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n});\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n});\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n});\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortFieldByType\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        console.log('unionDomain');\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n                    const subType = fieldsObj[axisType][key].subtype();\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortFieldByType(subType, sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n    const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    const { data, schema } = propModel.getData();\n    let rejectionModel;\n    const entryRowIds = [];\n    const exitRowIds = [];\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                o.props = o.props.map(prop => `${unitNs[1]}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        }\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const throwback = this._dependencies.throwback;\n            const metaInf = this.metaInf();\n            store.addSubNamespace(metaInf.namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(metaInf.namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: metaInf.namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName =  this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach((layer) => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, sortFieldByType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const fieldsSorted = Object.keys(config.sort);\n    const allFacetsFields = facets.map(facet => `${facet}`);\n    const validFacets = fieldsSorted.filter(field => allFacetsFields.includes(field));\n\n    validFacets.forEach((facetName) => {\n        const facetField = facets.find(facet => `${facet}` === facetName);\n        const facetSortOrder = config.sort[facetName];\n        const subType = facetField.subtype();\n        const index = facets.indexOf(facetField);\n\n        facetSortOrder && keys.sort((a, b) => sortFieldByType(subType, facetSortOrder, a[index], b[index]));\n    });\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        sortFacetFields(rowFacets, rowKeys, globalConfig);\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        sortFacetFields(colFacets, columnKeys, globalConfig);\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    const formattedColKeys = formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n                    formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        })\n\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}