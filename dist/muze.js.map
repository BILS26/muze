{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","description","homepage","version","license","main","keywords","author","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","build:dev","build:prod","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","TypeError","defReducer","entries","_this","he","reducer","_this2","__unregister","Function","reducerStore","ye","iterator","u","done","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","je","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Le","CategoricalParser","isInvalid","getInvalidType","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","qe","dataFormat","DSVArr","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","inferColumns","rows","columnSet","row","column","width","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","N","I","eof","eol","j","slice","preformatBody","formatValue","formatRow","formatDate","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","convert","concat","formatBody","formatRows","csv","dsv","tsv","DSVStr","Auto","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","converters","prepareSelectionData","resp","_iteratorNormalCompletion","persistDerivations","sourceDm","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","selectHelper","clonedDm","selectFn","cachedStore","cloneProvider","getPartialFieldspace","getKey","fn","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","clone","partialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","keyFn","dataObj","dataModel","propModel","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","select","saveChild","some","addDiffsetToClonedDm","selectConfig","cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","updateData","relation","defaultConfig","converterFn","converter","ht","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_cachedValueObjects","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","getNormalizedProFields","fieldConfig","normalizedProjField","constructor","search","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","Lt","_fieldspace","updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","cloneConfig","extraCloneDm","setOfRowDiffsets","setParent","_fieldConfig","fieldObj","def","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","Yt","fill","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","reducerObj","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","splitWithSelect","splitRowDiffset","dimensionMap","dimensionSet","rowSplitDiffsetIterator","clonedDMs","uniqueFields","commonFields","normalizedProjFieldSets","fieldSet","projFieldSet","projFields","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","_len","_key","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len3","measureFieldNames","_key3","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","_len2","_key2","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","_len4","_key4","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","_len5","_key5","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","nf","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref5","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","UnitFireBolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrder","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","facetNames","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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DACA,sEACAjU,IAAIwyC,gCCESyW,gBAZK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAjU,IAAIwyC,gCCESyW,kBAZK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAjU,IAAIwyC,gCCASyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,gBAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,gBAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,cAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAjU,IAAIwyC,gCCESyW,gBAVK,IAAIroD,MAAM,GAAGqT,OAC/B,qBACA,2BACA,iCACA,u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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].value === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const fieldObj = fieldsConfig[field];\n    const { index, def } = fieldObj;\n    const interval = def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const nf = def.type === FieldType.MEASURE ? fieldspace.fieldsObj()[field].numberFormat() : val => val;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(nf, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const context = this.firebolt.context;\n            const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n            layers.forEach((layer) => {\n                const linkedLayer = context.getLayerByName(layer.config().owner);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n\n                layer.data(transformedDataModel);\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        const facetSortConfig = sortConfig[name];\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).sort(sortInfo, { saveChild: false }).getData().data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, LAYOUT_ALIGN, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}