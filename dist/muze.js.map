{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","keywords","author","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","group_by_functions","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","C","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","reducer_store_ReducerStore","entries","_this","ve","reducer","_this2","__unregister","delete","Function","reducer_store","ge","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","Se","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ve","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","$e","dataFormat","Qe","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","it","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","ct","fieldSeparator","dsv","dsv_arr","ft","insertionIndex","lt","converters","FlatJSON","DSVStr","DSVArr","resp","persistDerivations","sourceDm","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","generateRowDiffset","lastInsertedValue","li","getKey","fn","helper_filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","dataModel","keyFn","dataObj","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","propModel","select","saveChild","some","helper_cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","st","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_iteratorNormalCompletion","_cachedValueObjects","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_dataObjects","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","selectFn","defConfig","cloneConfig","helper_cloneWithSelect","selectConfig","_selectHelper","newRowDiffSet","rejRowDiffSet","lastInsertedValueRej","cachedStore","cloneProvider","selectorHelperFn","checker","passFn","oDm","rejCloned","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldObj","def","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","Dt","fill","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","reducerObj","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","DataFormat","FilteringMode","enums_namespaceObject","Gt","Rt","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","_utils__WEBPACK_IMPORTED_MODULE_0__","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","_len","dep","_key","seed","_toConsumableArray","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","props","fnSpec","_ref","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","_len2","qnames","_key2","update","resolved","resolveDependencyOrder","__webpack_exports__","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","_utils__WEBPACK_IMPORTED_MODULE_1__","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","_len3","_key3","list","placedIndex","preArr","postArr","_len4","_key4","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","count","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","initObject","registerListener","registeredListeners","_registeredListeners","callBack","namespaceInf","namespace","subNamespace","callbackFn","propNames","namespaceVal","retCallBack","listenersObj","commits","_savedCommits","contextMap","_contextMap","propListenerMap","_propListenerMap","contextsObj","commitsObj","nm","fnInf","propObj","_didIteratorError","_iteratorError","_step","_iterator","contextInst","deps","depProps","err","_loop2","_contextsObj$key","__callBack","subNamespaces","allProps","oriFns","addListenerToNamespace","_listeners","types","Store","_commits","_lockCommit","_queuedProps","lock","_modelLocked","unlock","queuedProps","_params","propName","_params2","commit","sns","_loop3","propFns","nsObj","retrieveNamespaces","sanitizedVal","on","calculatedProp","_this$model","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","propsMap","listenerMap","_loop4","_loop5","snsMap","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","_propInfo$","onset","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","retrieveNearestGroupByReducers","_len5","measureFieldNames","_key5","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortFieldByType","subType","sortOrder","firstVal","secondVal","sortOrderType","getAppropriateSortingFn","localeCompare","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","FieldType","containsDetailField","getTabularData","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","console","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","registerComponent","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","removeFromNamespace","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_ref4","_context$metaInf","base_layer_defineProperty","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","defColorStyle","fillOpacity","shapes","sizes","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","lockModel","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","unlockModel","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","fieldsSorted","allFacetsFields","includes","facetName","facetField","facetSortOrder","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","graph","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","temporalFields","filteredFields","_ref5","_ref6","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_layerDeps","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","trackerClassName","arcLayerClassName","sideEffectClassName","src_props_defineProperty","_PROPS","registerListeners","registerChangeListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","formattedKeys","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","formattedColKeys","rawFormat","formattedRowKeys","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","lockCommits","updateModel","unlockCommits","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","getState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","getListeners","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","_loop6","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","registerImmediateListener","listenerFn","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,sbClFA,SAAAC,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAO,EAAAX,GAGA,GAAAI,EAAAJ,GACA,OAAAI,EAAAJ,GAAAtB,QAGA,IAAA4C,EAAAlB,EAAAJ,IACAd,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGA2C,EAAA5C,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAAT,EAAAS,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAApB,EAAAJ,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAE,KAAAF,EAAAT,EAAAnB,EAAAQ,EAAAsB,EAAA,SAAAlB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAV,GAIAhB,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIA2B,IAAAQ,EAAA,GDxEA,ECwEA,SAAAC,KAAA1C,SAAAe,KAAA,YAAA+B,YAAA,4DAAAC,SAAA,wCAAAC,QAAA,QAAAC,QAAA,MAAAC,KAAA,oBAAAC,UAAA,uGAAAC,OAAA,mCAAAC,YAAAC,KAAA,MAAAC,IAAA,6CAAAC,eAAAzC,KAAA,gBAAA0C,MAAA,8BAAA1C,KAAA,mBAAAA,KAAA,aAAA0C,MAAA,yBAAAF,IAAA,sBAAAxC,KAAA,oBAAA0C,MAAA,6BAAAC,cAAAC,SAAA,UAAAC,iBAAAC,YAAA,SAAAC,aAAA,UAAAC,eAAA,QAAAC,eAAA,SAAAC,iCAAA,UAAAC,mBAAA,SAAAC,sBAAA,UAAAC,oBAAA,UAAAC,KAAA,QAAAC,YAAA,SAAAC,OAAA,SAAAC,uBAAA,SAAAC,uBAAA,QAAAC,yBAAA,QAAAC,sBAAA,QAAAC,+BAAA,SAAAC,MAAA,QAAAC,UAAA,SAAAC,MAAA,QAAAC,aAAA,QAAAC,wBAAA,QAAAC,mCAAA,SAAAC,cAAA,QAAAC,sBAAA,SAAAC,gBAAA,QAAAC,OAAA,SAAAC,MAAA,QAAAC,gBAAA,QAAAC,oBAAA,QAAAC,QAAA,UAAAC,cAAA,SAAAC,qBAAA,UAAAC,SAAAC,KAAA,6BAAAC,GAAA,4BAAAC,IAAA,kEAAAC,MAAA,4BAAAC,MAAA,8EAAAC,KAAA,eAAAC,cAAA,uBAAAC,KAAA,oEAAA3D,EAAAhB,EAAAO,GClFA,IAAMqE,EAAYhG,EAAQ,GAE1BL,EAAOD,QAAUsG,EAAUzD,QAAUyD,EAAUzD,QAAUyD,qxBCKzD,IAOeC,GANXC,UAAW,WACXC,QAAS,SACTC,QAAS,SACTC,KAAM,QCEKC,GANXC,YAAa,cACbC,SAAU,WACVC,IAAK,MACLC,OAAQ,UCAGC,GAHXC,WAAY,cCKDC,GAJXC,QAAS,UACTC,UAAW,aCGAC,GALXC,OAAQ,SACRC,QAAS,UACTC,IAAK,OCQMC,GAVXC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,OCRT,SAASC,EAAqBC,GAC1B,OAAIA,aAAgBC,KACTD,EAGJ,IAAIC,KAAKD,GASpB,SAASE,EAAKrG,GACV,OAAQA,EAAI,GAAL,IAAgBA,EAAOA,EA8BP,SAASsG,EAAmBC,GACnDC,KAAKD,OAASA,EACdC,KAAKC,gBACLD,KAAKE,kBAfTC,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAKC,QAAQ,2BAA4B,SAkBpDR,EAAkBS,aAAe,IAIjCT,EAAkBU,yBACdC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAUjBjB,EAAkBkB,oBAAsB,SAAUC,GAC9C,OAAO,SAAUC,GACb,IAAIC,EACJ,OAAIC,SAASD,EAAYE,SAASH,EAAK,KAC5BC,EAGJF,IAYfnB,EAAkBwB,mBAAqB,SAAUC,EAAON,GACpD,OAAO,SAACC,GACJ,IACIlJ,EADAD,SAGJ,IAAKmJ,EAAO,OAAOD,EAEnB,IAAMO,EAAON,EAAIO,cAEjB,IAAK1J,EAAI,EAAGC,EAAIuJ,EAAMG,OAAQ3J,EAAIC,EAAGD,IACjC,GAAIwJ,EAAMxJ,GAAG0J,gBAAkBD,EAC3B,OAAOzJ,EAIf,gBAAIA,EACOkJ,EAEJ,OAqBfnB,EAAkB6B,oBAAsB,WACpC,IAAMC,GACFC,OACI,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,SACA,SACA,UACA,YACA,WACA,SACA,aAGFC,GACFF,OACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAsPR,OAjPIE,GAEI1J,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAGP,OAFUxB,EAAoBwB,GAErBmB,WAAWC,aAG5BtK,GAEIM,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GACP,IACMqB,EADI7C,EAAoBwB,GACdmB,WAAa,GAE7B,OAAkB,IAAVE,EAAc,GAAKA,GAAOD,aAG1CvI,GAEIzB,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCG,GAEIlK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCI,GAEInK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACfwB,gBAKvBC,GAEIrK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACZ0B,gBAK1BC,GAEIvK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACjB4B,kBAEHR,aAGlBnI,GAEI7B,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQC,MAAMkB,KAAK,KAA9B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQC,OACrDO,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQC,MAAMmB,GAAMV,aAGpCY,GAEI5K,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQE,KAAKiB,KAAK,KAA7B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQE,MACrDM,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQE,KAAKkB,GAAMV,aAGnCrI,GAEI3B,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GAChBiC,UAEHb,aAGnBjK,GAEIC,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GAChBiC,aAKtBC,GAEI9K,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUF,MAAMkB,KAAK,KAAhC,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUF,OACvDO,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUF,MAAMwB,GAAQf,aAGxCiB,GAEIjL,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUD,KAAKiB,KAAK,KAA/B,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUD,MACvDM,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUD,KAAKuB,GAAQf,aAGvCnK,GAEIG,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OALD,SAAAA,OAKSjB,GAAO,OAAOpB,wBAAwCoB,GAAO,GACrEkB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACdoC,WAEG,KAG3BE,GAEIlL,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OALD,SAAAA,OAKSjB,GACJ,IAAIuC,SACJ,GAAIvC,EAAK,CACL,IAAMlJ,EAAIkJ,EAAIQ,OACdR,EAAMA,EAAIwC,UAAU1L,EAAI,EAAGA,GAE/B,IAAImJ,EAAYrB,wBAAwCoB,GACpDyC,EAAc,IAAI/D,KAClBgE,EAAcC,KAAKC,MAAOH,EAAYI,cAAiB,KAO3D,OAHIrE,EAFJ+D,KAAYG,EAAczC,GAEM4C,cAAgBJ,EAAYI,gBACxDN,MAAYG,EAAc,GAAIzC,GAE3BzB,EAAoB+D,GAAQM,eAEvC3B,UAtBD,SAAAA,UAsBYlB,GACP,IACI8C,EADMtE,EAAoBwB,GACjB6C,cAAczB,WACvBtK,SAOJ,OALIgM,IACAhM,EAAIgM,EAAKtC,OACTsC,EAAOA,EAAKN,UAAU1L,EAAI,EAAGA,IAG1BgM,IAGfC,GAEI3L,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACf6C,cAAczB,eAgB7CxC,EAAkBoE,oBAAsB,WACpC,IAAMC,EAAcrE,EAAkB6B,sBAEtC,OACIf,KAAMuD,EAAYnC,EAClBoC,QAASD,EAAYnM,EACrBqM,eAAgBF,EAAYpK,EAC5BuK,eAAgBH,EAAY3B,EAC5B3B,OAAQsD,EAAY1B,EACpB3B,OAAQqD,EAAYxB,EACpB4B,UAAWJ,EAAYhK,EACvBqK,SAAUL,EAAYjB,EACtBuB,aAAcN,EAAYlK,EAC1ByK,4BAA6BP,EAAY9L,EACzCsM,YAAaR,EAAYf,EACzBwB,WAAYT,EAAYZ,EACxBsB,cAAeV,EAAYhM,EAC3B2M,WAAYX,EAAYX,EACxBuB,UAAWZ,EAAYF,IAW/BnE,EAAkBkF,cAAgB,WAC9B,IAAMb,EAAcrE,EAAkB6B,sBAChCsD,EAAkB,SAAAhM,IAMpB,IALA,IAAIlB,EAAI,EACJmN,SACAC,SACEnN,EAAIoN,UAAK1D,OAER3J,EAAIC,EAAGD,IACVmN,oBAAWnN,SAAXmN,UAAWnN,IACXqN,kBAASrN,SAATqN,UAASrN,MACLoN,EAAcD,GAItB,OAAKC,EAEEA,EAAY,GAAGhD,OAAOgD,EAAY,IAFd,MAK/B,OACI1E,MAAO0D,EAAYX,EAAGW,EAAYF,EAC9BgB,GAEJvE,OAAQyD,EAAYf,EAAGe,EAAYZ,EAAGY,EAAYhM,EAC9C8M,GAEJtE,KAAMwD,EAAYhK,EAAGgK,EAAYjB,EAAGiB,EAAYlK,EAAGkK,EAAY9L,EAC3D4M,GAEJrE,MAAOuD,EAAYnC,EAAGmC,EAAYnM,EAAGmM,EAAYpK,EAAGoK,EAAY3B,EAC5D,SAAU6C,EAAcC,EAAcC,EAAWC,GAC7C,IAAIL,SACAM,SACAC,SACAxE,SAcJ,OAZIoE,IAAiBG,EAAUF,GAAaC,IACJ,OAAhCC,EAAO,GAAGtD,OAAOsD,EAAO,MACxBC,MAGJP,EAAcG,GAEdH,EADOG,GAGOD,EAGbF,GAELjE,EAAMiE,EAAY,GAAGhD,OAAOgD,EAAY,IACpCO,IACAxE,GAAO,IAEJA,GANoB,OASnCL,QAASsD,EAAY1B,EACjBwC,GAEJnE,QAASqD,EAAYxB,EACjBsC,KAUZnF,EAAkB6F,WAAa,SAAU5F,GAQrC,IAPA,IAAM6F,EAAc9F,EAAkBS,aAChC4D,EAAcrE,EAAkB6B,sBAChCkE,EAAgBpN,OAAOqN,KAAK3B,GAC5B4B,KACFhO,SACAiO,UAEIjO,EAAIgI,EAAOkG,QAAQL,EAAa7N,EAAI,KAAO,GAC/CiO,EAAcjG,EAAOhI,EAAI,IACmB,IAAxC8N,EAAcI,QAAQD,IAE1BD,EAAWG,MACPjE,MAAOlK,EACPoO,MAAOH,IAIf,OAAOD,GASXjG,EAAkBsG,SAAW,SAAUzG,EAAMI,GACzC,IAQI/H,EAREqO,EAAQ3G,EAAoBC,GAC5BoG,EAAajG,EAAkB6F,WAAW5F,GAC1CoE,EAAcrE,EAAkB6B,sBAClC2E,EAAeC,OAAOxG,GACpB6F,EAAc9F,EAAkBS,aAClC4F,SACAK,SACAzO,SAGJ,IAAKA,EAAI,EAAGC,EAAI+N,EAAWrE,OAAQ3J,EAAIC,EAAGD,IAEtCyO,EAAerC,EADfgC,EAAQJ,EAAWhO,GAAGoO,OACY/D,UAAUiE,GAC5CC,EAAeA,EAAahG,QAAQ,IAAIH,OAAOyF,EAAcO,EAAO,KAAMK,GAG9E,OAAOF,GAQXxG,EAAkBjG,UAAU4M,MAAQ,SAAUC,EAAeC,GACzD,IAAM3B,EAAgBlF,EAAkBkF,gBAClC/E,EAAWD,KAAK4G,kBAAkBF,GAClCG,EAAa/G,EAAkBU,wBAC/BsG,EAAUH,GAAWA,EAAQG,QAC7BC,KACAC,KACFC,SACAC,SACAC,SACAjG,SACAnJ,SACAqP,SACAC,SACArP,SACAyL,KAEJ,IAAKwD,KAAejC,EAChB,MAAQlL,eAAe5B,KAAK8M,EAAeiC,GAA3C,CAMA,IAJAD,EAAKtF,OAAS,EAEdyF,GADAD,EAAiBlC,EAAciC,IACHK,OAAOJ,EAAexF,OAAS,EAAG,GAAG,GAE5D3J,EAAI,EAAGC,EAAIkP,EAAexF,OAAQ3J,EAAIC,EAAGD,cAE1CmJ,EAAMjB,GADNmH,EAAQF,EAAenP,IACFO,OAGjB0O,EAAKd,KAAK,MAEVc,EAAKd,MAAMkB,EAAOlG,IAM1B,cAFAmG,EAAcF,EAAWI,MAAMvH,KAAMgH,KAEa,OAAhBK,KAA0BP,EACxD,MAGJC,EAAWF,EAAWI,IAAgBI,EAU1C,OAPIN,EAAWrF,QAAU1B,KAAKwH,gBAAgBT,EAAWrF,QAErD+B,EAAOgE,QAAQV,EAAW,GAAI,EAAG,GAEjCtD,EAAOgE,QAAPhE,QAAkBsD,GAGftD,GAQX3D,EAAkBjG,UAAU+M,kBAAoB,SAAUF,GACtD,IAYI1O,EAZE+H,EAASC,KAAKD,OACdoE,EAAcrE,EAAkB6B,sBAChCiE,EAAc9F,EAAkBS,aAChCwF,EAAajG,EAAkB6F,WAAW5F,GAC1C2H,KAEFC,SACAC,SACAC,SACAC,SACAC,SAGAhQ,SAEJgQ,EAAcxB,OAAOxG,GAErB,IAAMiI,EAAWjC,EAAWkC,IAAI,SAAAhO,GAAA,OAAOiO,EAAI/B,QACrCgC,EAAmBpC,EAAWrE,OACpC,IAAK3J,EAAIoQ,EAAmB,EAAGpQ,GAAK,EAAGA,KACnC8P,EAAW9B,EAAWhO,GAAGkK,OAEV,IAAM8F,EAAYrG,OAAS,YAKtCiG,IACAA,EAAsBI,EAAYrG,QAGtCoG,EAAaC,EAAYrE,UAAUmE,EAAW,EAAGF,GACjDI,EAAcA,EAAYrE,UAAU,EAAGmE,EAAW,GAC9C1H,OAAOC,OAAO0H,GACdC,EAAYrE,UAAUiE,EAAqBI,EAAYrG,QAE3DiG,EAAsBE,GAblBF,EAAsBE,EAgB9B,IAAK9P,EAAI,EAAGA,EAAIoQ,EAAkBpQ,IAC9B6P,EAAS7B,EAAWhO,GACpBgQ,EAAcA,EAAYzH,QAAQsF,EAAcgC,EAAOzB,MAAOhC,EAAYyD,EAAOzB,OAAOjE,WAG5F,IAAMkG,EAAgB1B,EAAc2B,MAAM,IAAIlI,OAAO4H,QAGrD,IAFAK,EAAcE,QAETvQ,EAAI,EAAGC,EAAIgQ,EAAStG,OAAQ3J,EAAIC,EAAGD,IACpC2P,EAASM,EAASjQ,IAAMqQ,EAAcrQ,GAE1C,OAAO2P,GAQX5H,EAAkBjG,UAAU0O,cAAgB,SAAU7B,GAClD,IAAI/G,EAAO,KACX,GAAI6I,OAAOpH,SAASsF,GAChB/G,EAAO,IAAIC,KAAK8G,QACb,IAAK1G,KAAKD,QAAUH,KAAK6G,MAAMC,GAClC/G,EAAO,IAAIC,KAAK8G,OAEf,CACD,IAAMzG,EAAWD,KAAKC,SAAWD,KAAKyG,MAAMC,GACxCzG,EAASyB,SACT1B,KAAKE,WAALF,kCAAsBJ,MAAtBI,oIAA8BC,MAC9BN,EAAOK,KAAKE,YAGpB,OAAOP,GAGXG,EAAkBjG,UAAU2N,gBAAkB,SAASiB,GACnD,OAAe,IAARA,GAAazI,KAAKD,OAAOsI,MAAM,QAAQ3G,QASlD5B,EAAkBjG,UAAUuM,SAAW,SAAUrG,EAAQ2G,GACrD,IAAIxG,SAQJ,OANIwG,EACAxG,EAAaF,KAAKE,WAAaF,KAAKuI,cAAc7B,IACzCxG,EAAaF,KAAKE,cAC3BA,EAAaF,KAAKuI,cAAc7B,IAG7B5G,EAAkBsG,SAASlG,EAAYH,ICruBnC,IAAA2I,EAAA,SAAAA,EAACC,GACZ,IAAI5Q,EAAI,EACR,OAAO,WAAe,QAAAyB,EAAA4L,UAAA1D,OAAXkH,EAAWC,MAAArP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAXyO,EAAWzO,GAAAiL,UAAAjL,GAClByO,EAAOE,QAAQ,SAAC5H,EAAK6H,GACXJ,EAAMI,aAAuBF,QAC/BF,EAAMI,GAAcF,MAAMG,MAAOtH,OAAQ3J,KAE7C4Q,EAAMI,GAAY7C,KAAKhF,KAE3BnJ,wNCdFkR,EAAe,SACfC,EAAgBzQ,OAAOoB,UAAUyI,SACjC6G,EAAc,kBACdC,EAAa,iBAEnB,SAASC,EAAenB,EAAKoB,GAIzB,IAHA,IAAIvR,EAAIuR,EAAU5H,OACd6H,GAAU,EAEPxR,GAAG,CACN,GAAImQ,IAAQoB,EAAUvR,GAElB,OADSA,EAGbA,GAAK,EAGT,OAAOwR,EA2GX,SAASC,EAASC,EAAMC,EAAMC,GAE1B,gBAAWF,EAAP,YAAAtR,EAAOsR,MAASR,aAAuBS,EAAP,YAAAvR,EAAOuR,MAAST,EACzC,eAGAS,EAAP,YAAAvR,EAAOuR,MAAST,GAAyB,OAATS,EACzBD,aAGAA,EAAP,YAAAtR,EAAOsR,MAASR,IAChBQ,EAAOC,aAAgBb,aAnH/B,SAASe,EAAMH,EAAMC,EAAMC,EAAWE,EAAQC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EAcJ,GATKL,GAKDD,EAAO3D,KAAKuD,GACZK,EAAO5D,KAAKwD,KALZG,GAAUJ,GACVK,GAAUJ,IAOVA,aAAgBb,MAChB,IAAKkB,EAAO,EAAGA,EAAOL,EAAKhI,OAAQqI,GAAQ,EAAG,CAC1C,IACIC,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO9P,GACH,mBAGOgQ,EAAP,YAAA9R,EAAO8R,MAAWhB,EACZU,YAAaM,IACfR,EAAKM,GAAQE,IAIF,OAAXD,aAA0BA,EAAP,YAAA7R,EAAO6R,MAAWf,IACrCe,EAASP,EAAKM,GAAQE,aAAkBpB,cAG9B,KADdsB,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,SAMrD,IAAKC,KAAQL,EAAM,CACf,IACIM,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO9P,GACH,SAGJ,GAAe,OAAXgQ,aAA0BA,EAAP,YAAA9R,EAAO8R,MAAWhB,GAKrCiB,EAAMhB,EAAchR,KAAK+R,MACbd,GACO,OAAXa,aAA0BA,EAAP,YAAA7R,EAAO6R,MAAWf,IACrCe,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAGxCI,IAAQd,GACE,OAAXY,GAAqBA,aAAkBnB,QACvCmB,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAI7CL,EAAKM,GAAQE,MAGhB,CACD,GAAIN,YAAaM,EACb,SAEJR,EAAKM,GAAQE,GAIzB,OAAOR,EApGX,CAqHUA,EAAMC,EAAMC,GACXF,GCnIJ,SAASW,EAASlJ,GACrB,OAAO2H,MAAMuB,QAAQlJ,GA6BlB,SAASmJ,EAAYnJ,GACxB,MAAsB,mBAARA,EAaX,IAAMoJ,EAAc,SAAdA,IAAc,aAAY,IAAI1K,MAAO2K,UAAY1G,KAAK2G,MAAsB,IAAhB3G,KAAK4G,WASvE,SAASC,EAAWC,EAAMC,GAC7B,IAAKR,EAAQO,KAAUP,EAAQQ,GAC3B,OAAOD,IAASC,EAGpB,GAAID,EAAKjJ,SAAWkJ,EAAKlJ,OACrB,SAGJ,IAAK,IAAI3J,EAAI,EAAGA,EAAI4S,EAAKjJ,OAAQ3J,IAC7B,GAAI4S,EAAK5S,KAAO6S,EAAK7S,GACjB,SAIR,SASG,SAAS8S,EAAa3J,GACzB,OAAOA,EASJ,IAAM4J,EAAmB,SAAnBA,EAAoBC,GAC7B,OApEG,SAAmB7J,GACtB,MAAsB,iBAARA,EADX,CAoEU6J,GACFjN,EAAWE,QACXoM,EAAQW,IAASX,EAAQW,EAAK,IAC9BjN,EAAWG,QACXmM,EAAQW,KAA0B,IAAhBA,EAAKrJ,QAlF/B,SAAmBR,GACtB,OAAOA,IAAQzI,OAAOyI,GADnB,CAkFwD6J,EAAK,KACrDjN,EAAWC,UAEf,MChDIiN,GAnDXD,QAEAE,gBAHe,SAAAA,gBAGEC,EAAU5S,GACvB,IAAM6S,EAAS7S,GAAQgS,IA4CvB,OA1CAtK,KAAK+K,KAAKI,IACN7S,KAAM6S,EACNvC,OAAQsC,EAERE,UAJgB,SAAAA,YAKZ,IAAIA,EAAYpL,KAAKqL,iBAQrB,OANKD,IACDA,EAAYpL,KAAKqL,oBACjBrL,KAAK4I,OAAOE,QAAQ,SAACwC,GACjBF,EAAUE,EAAMhT,QAAUgT,KAG3BF,GAEXG,WAfgB,SAAAA,aAgBZ,IAAIC,EAAgBxL,KAAKyL,eAUzB,OARKD,IACDA,EAAgBxL,KAAKyL,kBACrBzL,KAAK4I,OAAOE,QAAQ,SAACwC,GACbA,EAAMI,SAAS7Q,OAAS6D,EAAUC,UAClC6M,EAAcF,EAAMhT,QAAUgT,MAInCE,GAEXG,aA5BgB,SAAAA,eA6BZ,IAAIC,EAAkB5L,KAAK6L,iBAU3B,OARK7L,KAAK6L,mBACND,EAAkB5L,KAAK6L,oBACvB7L,KAAK4I,OAAOE,QAAQ,SAACwC,GACbA,EAAMI,SAAS7Q,OAAS6D,EAAUE,YAClCgN,EAAgBN,EAAMhT,QAAUgT,MAIrCM,IAGR5L,KAAK+K,KAAKI,0PCKVW,aA1CX,SAAA7R,EAAaiH,EAAKoK,iGAAOS,QACrBtT,OAAOC,eAAesH,KAAM,UACxBrH,cACAqT,gBACAC,YACAjT,MAAOkI,IAGXlB,KAAKsL,MAAQA,qDAoBb,OAAO/E,OAAOvG,KAAKhH,+CAUnB,OAAOgH,KAAKhH,wCArBZ,OAAOgH,KAAKkM,aAyBLJ,GCjDR,SAASK,EAAoBC,EAAYC,GACxCD,EAAW1K,OAAS,GACD0K,EAAWE,MAAM,KACzBxD,QAAQ,SAACyD,GAChB,IAAMC,EAAaD,EAAQD,MAAM,KAC3B7O,GAAU+O,EAAW,GACrBC,IAAQD,EAAW,IAAMA,EAAW,IAC1C,GAAIC,GAAOhP,EACP,IAAK,IAAI1F,EAAI0F,EAAO1F,GAAK0U,EAAK1U,GAAK,EAC/BsU,EAAStU,8PCVvB2U,aAqBF,SAAAzS,EAAajB,iGAAO2T,QAChB3M,KAAKkM,OAASlT,gEAdO4T,GACrB,OAAKA,EAGEnU,OAAOoU,OAAOH,EAAkBI,qBAAsBF,GAFlDF,EAAkBI,kEAsB7B,OAAO9M,KAAKkM,gDAUZ,OAAO3F,OAAOvG,KAAKkM,kDAGNhL,GACb,OAAQA,aAAewL,KAAwBA,EAAkBK,mBAAmB7L,gDAGlEA,GAClB,OAAOA,aAAewL,EAAoBxL,EAAMwL,EAAkBK,mBAAmB7L,SAlDvFwL,GAyDNA,EAAkBM,KAAO,IAAIN,EAAkB,QAC/CA,EAAkBO,GAAK,IAAIP,EAAkB,MAC7CA,EAAkBQ,IAAM,IAAIR,EAAkB,OAO9CA,EAAkBI,sBACdK,QAAST,EAAkBO,GAC3BG,IAAKV,EAAkBQ,IACvBG,KAAMX,EAAkBM,KACxBM,UAAWZ,EAAkBO,IAGlB,ICpBRjL,EDoBQuL,EAAA9K,EAAA+K,EAAA,SAAAvT,EAAAhB,GAAA,GAAA4P,MAAAuB,QAAAnQ,GAAA,OAAAA,EAAA,GAAAnB,OAAA2U,YAAAhV,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAAkV,EAAAzT,EAAAnB,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,QAAApU,EAAA0M,KAAA1N,EAAAQ,QAAAC,GAAAO,EAAAkI,SAAAzI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAA6U,EAAAG,QAAAH,EAAAG,SAAA,WAAA1T,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAA6U,UAAA,yDEjEFC,GACTC,OAAQ,SACRC,QAAS,UACTC,QAAS,QACTC,QAAS,UACTC,QAAS,qBACTC,IAAK,MACLC,KAAM,QAGGC,GACTC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTC,UAAW,aCrBR,SAASC,EAAiBC,EAAKC,GAClC,IAAMC,KACAC,KASN,OARAH,EAAIlG,OAAOE,QAAQ,SAACwC,GAChB2D,EAAO/I,KAAKoF,EAAMI,SAASpT,QAE/ByW,EAAInG,OAAOE,QAAQ,SAACwC,IAC6B,IAAzC2D,EAAOhJ,QAAQqF,EAAMI,SAASpT,OAC9B0W,EAAO9I,KAAKoF,EAAMI,SAASpT,QAG5B0W,ECRX,SAASE,IAAoB,SAYtB,SAASC,EAAcC,EAAKC,EAAKC,GAA+D,IAArDC,EAAqDnK,UAAA1D,OAAA,YAAA0D,UAAA,IAAAA,UAAA,GAAxBoK,EAAwBpK,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAbmJ,EAAMC,MACtF9C,KACAX,KACA0E,EAAqBH,GAAYJ,EACjCQ,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBE,EAAoBH,EAAcpX,KAClCwX,EAAoBF,EAActX,KAClCA,EAAUoX,EAAcpX,KAAxBA,IAAgCsX,EAActX,KAC9CyX,EAAmBlB,EAAgBa,EAAeE,GAExD,GAAIC,IAAsBC,EACtB,MAAM,IAAIE,MAAM,8CA+EpB,OA5EAN,EAAc9G,OAAOE,QAAQ,SAACwC,GAC1B,IAAM2E,EAAYzG,KAAY8B,EAAMI,WACc,IAA9CqE,EAAiB9J,QAAQgK,EAAU3X,OAAiBiX,IACpDU,EAAU3X,KAAUoX,EAAcpX,KAAlC2X,IAA0CA,EAAU3X,MAExDoT,EAAOxF,KAAK+J,KAEhBL,EAAchH,OAAOE,QAAQ,SAACwC,GAC1B,IAAM2E,EAAYzG,KAAY8B,EAAMI,WACc,IAA9CqE,EAAiB9J,QAAQgK,EAAU3X,MAC9BiX,IACDU,EAAU3X,KAAUsX,EAActX,KAAlC2X,IAA0CA,EAAU3X,KACpDoT,EAAOxF,KAAK+J,IAGhBvE,EAAOxF,KAAK+J,KAKpB9D,EAAmBiD,EAAIc,YAAa,SAACnY,GACjC,IAAIoY,KACAC,SACJjE,EAAmBkD,EAAIa,YAAa,SAACG,GACjC,IAAMC,KACAC,KACNA,EAAQV,MACRU,EAAQT,MACRJ,EAAc9G,OAAOE,QAAQ,SAACwC,GAC1BgF,EAAMpK,KAAKoF,EAAMkF,aAAazF,KAAKhT,IACnCwY,EAAQV,GAAmBvE,EAAMhT,QAAUgT,EAAMkF,aAAazF,KAAKhT,KAEvE6X,EAAchH,OAAOE,QAAQ,SAACwC,IAC+B,IAAnDyE,EAAiB9J,QAAQqF,EAAMI,SAASpT,OAAgBiX,GAC1De,EAAMpK,KAAKoF,EAAMkF,aAAazF,KAAKsF,IAEvCE,EAAQT,GAAmBxE,EAAMhT,QAAUgT,EAAMkF,aAAazF,KAAKsF,KAGvE,IAIMI,EAAYC,GAAgBH,EAAQV,IACpCc,EAAYD,GAAgBH,EAAQT,IAC1C,GAAIL,EAAmBgB,EAAWE,EALb,kBAAMvB,EAAIwB,gBACV,kBAAMvB,EAAIuB,oBAI4D,CACvF,IAAMC,KACNP,EAAMxH,QAAQ,SAACgI,EAASC,GACpBF,EAASnF,EAAOqF,GAAKzY,MAAQwY,IAE7BX,GAAY5B,EAAMC,QAAUgB,EAC5BzE,EAAKqF,GAAeS,GAGpB9F,EAAK7E,KAAK2K,GACVV,KACAC,EAAcrY,QAEf,IAAKyX,IAAajB,EAAME,WAAae,IAAajB,EAAMG,cAAgByB,EAAU,CACrF,IAAMU,KACFpI,EAAMiH,EAAc9G,OAAOlH,OAAS,EACxC4O,EAAMxH,QAAQ,SAACgI,EAASC,GAEhBF,EAASnF,EAAOqF,GAAKzY,MADrByY,GAAOtI,EACsBqI,EAGA,OAGrCX,KACAC,EAAcrY,EACdgT,EAAK7E,KAAK2K,QAKf,IAAIG,GAAUjG,EAAMW,GAAUpT,SC3GzC,SAAS2Y,EAAW9W,EAAGiJ,GACnB,IAAM8N,KAAQ/W,EACRgX,KAAQ/N,EACd,OAAI8N,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,EAqEJ,SAASC,EAAWC,GAAyB,IAApBC,EAAoBlM,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAX6L,EAIrC,OAHII,EAAI3P,OAAS,GArBrB,SAAS6P,EAAMF,EAAKG,EAAIC,EAAIH,GACxB,GAAIG,IAAOD,EAAM,OAAOH,EAExB,IAAMK,EAAMF,EAAK3N,KAAK8N,OAAOF,EAAKD,GAAM,GAKxC,OAJAD,EAAKF,EAAKG,EAAIE,EAAKJ,GACnBC,EAAKF,EAAKK,EAAM,EAAGD,EAAIH,GAzC3B,SAAgBD,EAAKG,EAAIE,EAAKD,EAAIH,GAG9B,IAFA,IAAMM,EAAUP,EACVQ,KACG9Z,EAAIyZ,EAAIzZ,GAAK0Z,EAAI1Z,GAAK,EAC3B8Z,EAAO9Z,GAAK6Z,EAAQ7Z,GAKxB,IAHA,IAAIoC,EAAIqX,EACJpO,EAAIsO,EAAM,EAEL3Z,EAAIyZ,EAAIzZ,GAAK0Z,EAAI1Z,GAAK,EACvBoC,EAAIuX,GACJE,EAAQ7Z,GAAK8Z,EAAOzO,GACpBA,GAAK,GACEA,EAAIqO,GACXG,EAAQ7Z,GAAK8Z,EAAO1X,GACpBA,GAAK,GACEmX,EAAOO,EAAO1X,GAAI0X,EAAOzO,KAAO,GACvCwO,EAAQ7Z,GAAK8Z,EAAO1X,GACpBA,GAAK,IAELyX,EAAQ7Z,GAAK8Z,EAAOzO,GACpBA,GAAK,GArBjB,CA0CUiO,EAAKG,EAAIE,EAAKD,EAAIH,GAEjBD,EARX,CAsBaA,EAAK,EAAGA,EAAI3P,OAAS,EAAG4P,GAE1BD,0HC3EX,SAASS,EAAWC,EAAUC,EAAU/P,GACpC,IAAIgQ,SACJ,OAAQF,GACR,KAAKvT,EAAeC,WACpB,KAAKN,EAAiBE,SAEd4T,EADa,SAAbD,EACU,SAAC7X,EAAGiJ,GAAJ,OAAUA,EAAEnB,GAAS9H,EAAE8H,IAEvB,SAAC9H,EAAGiJ,GAAJ,OAAUjJ,EAAE8H,GAASmB,EAAEnB,IAErC,MACJ,QACIgQ,EAAU,SAAApZ,EAACsB,EAAGiJ,IACV,IAAM8N,KAAQ/W,EAAE8H,GACVkP,KAAQ/N,GAAEnB,GAChB,OAAIiP,EAAKC,EACe,SAAba,EAAsB,GAAK,EAElCd,EAAKC,EACe,SAAba,GAAuB,EAAI,EAE/B,GAGf,OAAOC,EAUX,SAASC,EAAUnH,EAAMhC,GACrB,IAAMoJ,EAAU,IAAIC,IACdC,KAYN,OAVAtH,EAAKjC,QAAQ,SAACwJ,GACV,IAAMC,EAAWD,EAAMvJ,GACnBoJ,EAAQK,IAAID,GACZF,EAAYF,EAAQvZ,IAAI2Z,IAAW,GAAGrM,KAAKoM,IAE3CD,EAAYnM,MAAMqM,GAAWD,KAC7BH,EAAQM,IAAIF,EAAUF,EAAY3Q,OAAS,MAI5C2Q,EAYX,SAASK,EAAmBC,EAAcC,EAAcC,GACpD,IAAM3N,GACF4N,MAAOH,EAAa,IAQxB,OALAC,EAAaG,OAAO,SAACC,EAAKrF,EAAMsF,GAE5B,OADAD,EAAIrF,GAAQgF,EAAa,GAAG1K,IAAI,SAAAhO,GAAA,OAASqY,EAAMO,EAAmBI,GAAKhR,SAChE+Q,GACR9N,GAEIA,ECtEJ,SAASgO,EAAY9D,EAAKC,GAC7B,IAAM8D,KACAzH,KACA0H,KACArI,KACA2E,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAActE,YACtCkI,EAAwB1D,EAAcxE,YACtC9S,EAAUoX,EAAcpX,KAAxBA,UAAsCsX,EAActX,KAG1D,IAAKoS,EAAW0E,EAAImE,eAAejH,MAAM,KAAKkH,OAAQnE,EAAIkE,eAAejH,MAAM,KAAKkH,QAChF,OAAO,KAiBX,SAASC,EAAkBC,EAAItI,EAAWuI,GACtCxH,EAAmBuH,EAAGxD,YAAa,SAACnY,GAChC,IAAMuY,KACFsD,EAAW,GACfR,EAActK,QAAQ,SAAC+K,GACnB,IAAM7a,EAAQoS,EAAUyI,GAAYrD,aAAazF,KAAKhT,GACtD6b,OAAgB5a,EAChBsX,EAAMuD,GAAc7a,IAEnBma,EAAUS,KACPD,GAAW5I,EAAK7E,KAAKoK,GACzB6C,EAAUS,SAStB,OAjCCxE,EAAImE,eAAejH,MAAM,KAAMxD,QAAQ,SAACgL,GACrC,IAAMxI,EAAQ+H,EAAsBS,GACpCpI,EAAOxF,KAAKsD,KAAY8B,EAAMI,WAC9B0H,EAAclN,KAAKoF,EAAMI,SAASpT,QA2BtCmb,EAAkBpE,EAAKiE,MACvBG,EAAkBrE,EAAKiE,MAEhB,IAAIrC,GAAUjG,EAAMW,GAAUpT,+PC5DjC4G,GAAgDD,EAAhDC,IAAKC,GAA2CF,EAA3CE,IAAKG,GAAsCL,EAAtCK,MAAOC,GAA+BN,EAA/BM,KAAMC,GAAyBP,EAAzBO,MAAOC,GAAkBR,EAAlBQ,IAAKL,GAAaH,EAAbG,IAAKC,GAAQJ,EAARI,IAEhD,SAAS0U,GAAkB1C,GACvB,OAAOA,EAAI2C,OAAO,SAAA/Z,GAAA,QAAU8P,aAAgBkK,KAShD,SAASC,GAAK7C,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAC5C,IAAMsL,EAAiBJ,GAAkB1C,GAIzC,OAHiB8C,EAAezS,OACZyS,EAAepB,OAAO,SAACC,EAAKoB,GAAN,OAAepB,EAAMoB,GAAM,GAC/CH,EAAkBjH,KAG5C,OAAOiH,EAAkBjH,KAU7B,SAASqH,GAAKhD,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAC5C,IAAMyL,EAAWJ,GAAI7C,GACf5I,EAAM4I,EAAI3P,QAAU,EAC1B,OAAQ8G,OAAO+L,MAAMD,IAAaA,aAAoBL,EAC7CA,EAAkBjH,KAAOsH,EAAW7L,EAEjD,OAAOwL,EAAkBjH,KAgG7B,IAAMwH,YACDtV,GAAMgV,IADLM,KAEDrV,GAAMkV,IAFLG,KAGDpV,GAzFL,SAAciS,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAE5C,IAAM4L,EAAiBV,GAAkB1C,GAEzC,OAAQoD,EAAe/S,OAAUmC,KAAK6Q,IAAL7Q,cAAY4Q,IAAkBR,EAAkBjH,KAErF,OAAOiH,EAAkBjH,OA+EvBwH,KAIDnV,GAzEL,SAAcgS,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAE5C,IAAM4L,EAAiBV,GAAkB1C,GAEzC,OAAQoD,EAAe/S,OAAUmC,KAAK8Q,IAAL9Q,cAAY4Q,IAAkBR,EAAkBjH,KAErF,OAAOiH,EAAkBjH,OA8DvBwH,KAKDlV,GAzDL,SAAgB+R,GACZ,OAAOA,EAAI,KAmDTmD,KAMDjV,GA/CL,SAAe8R,GACX,OAAOA,EAAIA,EAAI3P,OAAS,KAwCtB8S,KAODhV,GArCL,SAAgB6R,GACZ,OAAIjH,EAAQiH,GACDA,EAAI3P,OAERuS,EAAkBjH,OA0BvBwH,KAQD/U,GAbL,SAAc4R,GACV,OAAOxN,KAAK+Q,KAbhB,SAAmBvD,GACf,IAAIwD,EAAOR,GAAIhD,GACf,OAAOgD,GAAIhD,EAAIpJ,IAAI,SAAAhO,GAAA,OAAA4J,KAAAiR,IAAQC,EAAMF,EAAS,MAF9C,CAa8BxD,MAIxBmD,GAWAQ,GAAqB9V,yPC1IrB+V,cACF,SAAAhb,IAAe,IAAAhB,EAAA+G,MAAA,SAAA/F,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAA9N,KAAA/F,GACX+F,KAAK2I,MAAQ,IAAIyJ,IACjBpS,KAAK2I,MAAM8J,IAAI,aAAcyB,IAE7Bzb,OAAOyc,QAAQV,IAAQ1L,QAAQ,SAACxP,GAC5B6b,EAAKxM,MAAM8J,IAAInZ,EAAI,GAAIA,EAAI,aAAA8b,GAAAnb,IAAAX,IAAA,iBAAAN,MAAA,SAAAA,QAc/B,IAAKoM,UAAO1D,OACR,OAAO1B,KAAK2I,MAAM/P,IAAI,cAG1B,IAAIyc,0CAEJ,GAAuB,mBAAZA,EACPrV,KAAK2I,MAAM8J,IAAI,aAAc4C,OAC1B,CAEH,GADAA,EAAU9O,OAAO8O,IAC6B,IAA1C5c,OAAOqN,KAAK0O,IAAQvO,QAAQoP,GAG5B,MAAM,IAAIrF,MAAJ,WAAqBqF,EAArB,0BAFNrV,KAAK2I,MAAM8J,IAAI,aAAc+B,GAAOa,IAK5C,OAAOrV,4CAmCD1H,EAAM+c,GAAS,IAAA7b,EAAAwG,KACrB,GAAuB,mBAAZqV,EACP,MAAM,IAAIrF,MAAM,gCAMpB,OAHA1X,EAAOiO,OAAOjO,GACd0H,KAAK2I,MAAM8J,IAAIna,EAAM+c,GAEd,WAAQC,EAAKC,aAAajd,+CAGvBA,GACN0H,KAAK2I,MAAM6J,IAAIla,IACf0H,KAAK2I,MAAM6M,OAAOld,yCAIjBA,GACL,OAAIA,aAAgBmd,SACTnd,EAEJ0H,KAAK2I,MAAM/P,IAAIN,SA5FxB2c,GA4GSS,GAZO,WAClB,IAAI/M,EAAQ,KAQZ,OALkB,OAAVA,IACAA,EAAQ,IAAIsM,IAETtM,EAPO,GAAAgN,GAAA,SAAA1b,EAAAhB,GAAA,GAAA4P,MAAAuB,QAAAnQ,GAAA,OAAAA,EAAA,GAAAnB,OAAA2U,YAAAhV,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAAkV,EAAAzT,EAAAnB,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,QAAApU,EAAA0M,KAAA1N,EAAAQ,QAAAC,GAAAO,EAAAkI,SAAAzI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAA6U,EAAAG,QAAAH,EAAAG,SAAA,WAAA1T,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAA6U,UAAA,yDC/Ff,SAAS8H,GAAmBxG,EAAKC,GACpC,IAIMwG,EAAkBhH,EAJFO,EAAIO,gBACJN,EAAIM,iBAK1B,OAAO,SAACc,EAAWE,GACf,IAAImF,KASJ,OARAD,EAAgB/M,QAAQ,SAACgL,GAGjBgC,IAFArF,EAAUqD,GAAW9a,QACrB2X,EAAUmD,GAAW9a,QAAS8c,KAM/BA,GCjBR,SAASC,GAAO3G,EAAKC,GACxB,IAAM8D,KACAzH,KACA0H,KACArI,KACA2E,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAActE,YACtCkI,EAAwB1D,EAAcxE,YACtC9S,EAAUoX,EAAcpX,KAAxBA,UAAsCsX,EAActX,KAG1D,IAAKoS,EAAW0E,EAAImE,eAAejH,MAAM,KAAKkH,OAAQnE,EAAIkE,eAAejH,MAAM,KAAKkH,QAChF,OAAO,KAgBX,SAASC,EAAmBC,EAAItI,GAC5Be,EAAmBuH,EAAGxD,YAAa,SAACnY,GAChC,IAAMuY,KACFsD,EAAW,GACfR,EAActK,QAAQ,SAAC+K,GACnB,IAAM7a,EAAQoS,EAAUyI,GAAYrD,aAAazF,KAAKhT,GACtD6b,OAAgB5a,EAChBsX,EAAMuD,GAAc7a,IAEnBma,EAAUS,KACX7I,EAAK7E,KAAKoK,GACV6C,EAAUS,SAStB,OAhCCxE,EAAImE,eAAejH,MAAM,KAAMxD,QAAQ,SAACgL,GACrC,IAAMxI,EAAQ+H,EAAsBS,GACpCpI,EAAOxF,KAAKsD,KAAY8B,EAAMI,WAC9B0H,EAAclN,KAAKoF,EAAMI,SAASpT,QA0BtCmb,EAAkBrE,EAAKiE,GACvBI,EAAkBpE,EAAKiE,GAEhB,IAAI0C,GAAUjL,EAAMW,GAAUpT,SCvDlC,SAAS2d,GAAeC,EAAYC,EAAY7G,GACnD,OAAOH,EAAa+G,EAAYC,EAAY7G,KAAiBf,EAAME,WAGhE,SAAS2H,GAAgBF,EAAYC,EAAY7G,GACpD,OAAOH,EAAagH,EAAYD,EAAY5G,KAAiBf,EAAMG,sQCWlD2H,cAQjB,SAAApc,EAAauW,EAAcpE,iGAAYkK,QACnCtW,KAAKwQ,aAAeA,EACpBxQ,KAAKoM,WAAaA,oDAUlB,MAAM,IAAI4D,MAAM,0BAAA1W,IAAA,SAAAN,MAAA,SAAAA,QAUhB,OAAOgH,KAAKwQ,aAAa9E,4CAUzB,OAAO1L,KAAKwQ,aAAalY,0CAUzB,OAAO0H,KAAKwQ,aAAa9E,OAAO7Q,6CAUhC,OAAOmF,KAAKwQ,aAAa9E,OAAO6K,oDAUhC,OAAOvW,KAAKwQ,aAAa9E,OAAOrR,wDAUhC,OAAO2F,KAAKwQ,aAAa9E,OAAO8K,aAAexW,KAAKwQ,aAAa9E,OAAOpT,0CASpE,IAAA2B,EAAA+F,KACE+K,KAIN,OAHAoB,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjCgT,EAAK7E,KAAKiP,EAAK3E,aAAazF,KAAKhT,MAE9BgT,gDAUP,MAAM,IAAIiF,MAAM,2BAAA/V,EAxGHoc,GAwGGI,GAAA,oBAAAxc,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAyI,OAAAlI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCpHHyd,qrBAAkBL,+CAY/B,OAHKrW,KAAK2W,gBACN3W,KAAK2W,cAAgB3W,KAAK4W,uBAEvB5W,KAAK2W,kEAUZ,MAAM,IAAI3G,MAAM,0BAAA1W,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOgH,KAAK+K,aAjCC2L,GAiCD3L,sPChCC8L,qrBAAoBH,gDASjC,OAAOvY,EAAiBC,gEAUL,IAAAnE,EAAA+F,KACb8W,EAAO,IAAIC,IACXC,KAUN,OAPA7K,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GAChC+e,EAAKtE,IAAIF,KACVwE,EAAKG,IAAI3E,GACT0E,EAAO9Q,KAAKoM,MAGb0E,QA/BMH,GA+BNG,sPC7BME,eAQjB,SAAAje,EAAauX,EAAcpE,iGAAY+K,yOAC7B3G,EAAcpE,IADe+K,OAGnChC,EAAKiC,eAAiB,KAHaD,uUARLT,4DAqBX,IAAAzc,EAAA+F,KACb8W,EAAO,IAAIC,IACXC,KAYN,OARA7K,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GAChC+e,EAAKtE,IAAIF,KACVwE,EAAKG,IAAI3E,GACT0E,EAAO9Q,KAAKoM,MAIb0E,+DAWP,GAAIhX,KAAKoX,eACL,OAAOpX,KAAKoX,eAUhB,IAPA,IAAMC,EAAarX,KAAK+K,OAAOiJ,OAAO,SAAA/Z,GAAA,QAAU8P,aAAgBkK,KAAoBT,KAAK,SAACrZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IACjGkU,EAAQD,EAAW3V,OACrB6V,EAAU/O,OAAOgP,kBACjBC,SACAC,SACAC,EAAiB,EAEZ5f,EAAI,EAAGA,EAAIuf,EAAOvf,IACvB0f,EAAYJ,EAAWtf,EAAI,IAC3B2f,EAAYL,EAAWtf,MAEL0f,IAIlBF,EAAU1T,KAAK6Q,IAAI6C,EAASG,EAAYL,EAAWtf,EAAI,IACvD4f,KAQJ,OALKA,IACDJ,EAAU,MAEdvX,KAAKoX,eAAiBG,EAEfvX,KAAKoX,sDAUZ,OAAOpX,KAAKwQ,aAAa9E,OAAO3L,qDAUnB,IAAA9F,EAAA+F,KACP+K,KASN,OARAoB,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQsF,EAAKpH,aAAazF,KAAKhT,GACjCua,aAAiB2B,EACjBlJ,EAAK7E,KAAKoM,GAEVvH,EAAK7E,KAAKpG,EAAkBsG,SAASkM,EAAOsF,EAAK7X,aAGlDgL,QAxGMmM,GAwGNnM,sPC3GM8M,qrBAAenB,4DAS5B,IAAMoB,EAAU9X,KAAKwQ,aAAa9E,OAAOqM,KACzC,OAAQD,EAAQ,GAAIA,EAAQA,EAAQpW,OAAS,OAAApI,IAAA,OAAAN,MAAA,SAAAA,QAU7C,OAAOgH,KAAKwQ,aAAa9E,OAAOqM,WApBnBF,GAoBmBE,sPClBnBC,qrBAAgB3B,+CAY7B,OAHKrW,KAAK2W,gBACN3W,KAAK2W,cAAgB3W,KAAK4W,uBAEvB5W,KAAK2W,mDAUZ,OAAO3W,KAAKwQ,aAAa9E,OAAOuM,8CAUhC,OAAOjY,KAAKwQ,aAAa9E,OAAOwM,UAAYlD,gDAShC,IACJmD,EAAiBnY,KAAKwQ,aAAa9E,OAAnCyM,aACR,OAAOA,aAAwB1C,SAAW0C,EAAetN,sDAUzD,MAAM,IAAImF,MAAM,0BAAA1W,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOgH,KAAK+K,aAhECiN,GAgEDjN,sPC/DCqN,qrBAAmBJ,gDAShC,OAAOxZ,EAAeC,+DAUH,IAAAxE,EAAA+F,KACf0U,EAAMlM,OAAOgP,kBACb7C,EAAMnM,OAAO6P,kBAiBjB,OAdAlM,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GACjCua,aAAiB2B,IAIjB3B,EAAQoC,IACRA,EAAMpC,GAENA,EAAQqC,IACRA,EAAMrC,OAINoC,EAAKC,SAtCAyD,GAsCAzD,sPC5CA2D,kLAQb,MAAM,IAAItI,MAAM,2BAAA/V,EARHqe,GAQGC,GAAA,oBAAAte,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAyI,OAAAlI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCJHuf,qrBAA0BF,4CAQpCpX,GAQH,OALK+S,EAAkBwE,UAAUvX,GAGpB+S,EAAkByE,eAAexX,GAFjCqF,OAAOrF,GAAKyX,aAZZH,GAYYG,sPCXZC,eAOjB,SAAA3f,EAAayS,iGAAQmN,kPAEjB1D,EAAKzJ,OAASA,EACdyJ,EAAK2D,KAAO,IAAIhZ,EAAkBqV,EAAKzJ,OAAO3L,QAH7B8Y,uUAPmBP,4CAoBjCpX,GACH,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAI7BuC,EAASwQ,EAAkByE,eAAexX,OAJP,CACnC,IAAIhB,EAAaF,KAAK8Y,KAAKvQ,cAAcrH,GACzCuC,EAASvD,EAAaA,EAAWqK,UAAY0J,EAAkBhH,GAInE,OAAOxJ,QA7BMmV,GA6BNnV,sPC9BMsV,qrBAAqBT,4CAQ/BpX,GAEHA,EAAMqF,OAAOrF,GACb,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAK7BuC,EAASwQ,EAAkByE,eAAexX,OALP,CACnC,IAAI8X,EAAU9X,EAAImH,MALR,2DAMV5E,EAASuV,EAAaxQ,OAAOyQ,WAAWD,EAAQ,IAAvCA,IAA8CxQ,OAAOyQ,WAAWD,EAAQ,IAC9D/E,EAAkBhH,GAIzC,OAAOxJ,QApBMsV,GAoBNtV,sPCpBMyV,qrBAAyBZ,4CAQnCpX,GACH,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAI7BuC,EAASwQ,EAAkByE,eAAexX,OAJP,CACnC,IAAIC,EAAY8X,WAAW/X,EAAK,IAChCuC,EAAS+E,OAAO+L,MAAMpT,GAAa8S,EAAkBhH,GAAK9L,EAI9D,OAAOsC,QAjBMyV,GAiBNzV,sPCnBM0V,cAUjB,SAAAlf,EAAa3B,EAAMyS,EAAMW,EAAQvJ,iGAAQiX,QACrCpZ,KAAK1H,KAAOA,EACZ0H,KAAK0L,OAASA,EACd1L,KAAKmC,OAASA,EACdnC,KAAK+K,KAAO/K,KAAKqZ,UAAUtO,sDAUpBA,GAAM,IAAA9R,EAAA+G,KACb,OAAO+K,EAAK9C,IAAI,SAAAhO,GAAA,OAASkb,EAAKhT,OAAOsE,MAAM6L,WAzB9B6G,GC0Fd,SAASG,GAAaC,EAAY7N,EAAQ8N,GAC7C,IAAMC,KAUN,OARMD,GAAWA,EAAQ9X,SACrB8X,EAAU9N,EAAOzD,IAAI,SAAAhO,GAAA,OAAQ8P,EAAKzR,QAGtCkhB,EAAQ1Q,QAAQ,SAAC4Q,EAAQ3hB,GACrB0hB,EAAWC,GAAU3hB,IAGlB2T,EAAOzD,IAAI,SAAAhP,GAAA,OAzFtB,SAAyB8R,EAAMW,GAC3BX,EAAOA,MACP,IAAIyF,SAEJ,OAAQ9E,EAAO7Q,MACf,KAAK6D,EAAUC,QACX,OAAQ+M,EAAO6K,SACf,KAAK/X,EAAeC,WAGpB,QAEI,OADA+R,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIwN,IACxD,IAAId,GAAW5H,EAAf,MAAkCzF,EAAKrJ,OAAS,IAE/D,KAAKhD,EAAUE,UACX,OAAQ8M,EAAO6K,SACf,KAAKpY,EAAiBC,YAElB,OADAoS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,IAC5D,KAAKvD,EAAiBE,SAElB,OADAmS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIkN,GAAelN,IACvE,IAAIwL,GAAS1G,EAAb,MAAgCzF,EAAKrJ,OAAS,IACzD,KAAKvD,EAAiBI,OAElB,OADAiS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIqN,IACxD,IAAIlB,GAAOrH,EAAX,MAA8BzF,EAAKrJ,OAAS,IACvD,QAEI,OADA8O,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,IAEhE,QAEI,OADA8O,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,KA/BhE,CAyF8C6X,EAAWE,EAAW1P,EAAKzR,OAAQyR,KC3GlE,IAAA4P,IACXC,WAAY9b,EAAWI,MCuCZ2b,GAvBf,SAuBeA,GAvBExI,EAAK1K,GAIlBA,EAAUlO,OAAOoU,WAFbiN,mBAEuCnT,GAE3C,IAAI+S,EACEK,KACA7T,EAAO8T,EAAYD,GAYzB,OAPIL,EAHA/S,EAAQmT,eAGCzI,EAAI/J,OAAO,EAAG,GAAG,MAK9B+J,EAAIvI,QAAQ,SAAA7O,GAAA,OAASiM,sIAAQoF,OAErBoO,EAAQK,ICvChBE,MACAC,MACAC,GAAQ,GACRC,GAAU,GACVC,GAAS,GAEb,SAASC,GAAgBP,GACvB,OAAO,IAAItE,SAAS,IAAK,WAAasE,EAAQ9R,IAAI,SAAS3P,EAAMP,GAC/D,OAAOwiB,KAAKC,UAAUliB,GAAQ,OAASP,EAAI,MAC1CgL,KAAK,KAAO,KA0BF,IAAA0X,GAAA,SAAAA,GAASC,GACtB,IAAIC,EAAW,IAAIxa,OAAO,KAAQua,EAAY,SAC1CE,EAAYF,EAAUG,WAAW,GAWrC,SAASC,EAAUza,EAAM0a,GACvB,IAII9hB,EAJA+hB,KACAC,EAAI5a,EAAKqB,OACT6L,EAAI,EACJ/T,EAAI,EAEJ0hB,EAAMD,GAAK,EACXE,KAMJ,SAAShV,IACP,GAAI+U,EAAK,OAAOhB,GAChB,GAAIiB,EAAK,OAAOA,KAAalB,GAG7B,IAAIliB,EAAUK,EAAPgjB,EAAI7N,EACX,GAAIlN,EAAKwa,WAAWO,KAAOjB,GAAO,CAChC,KAAO5M,IAAM0N,GAAK5a,EAAKwa,WAAWtN,KAAO4M,IAAS9Z,EAAKwa,aAAatN,KAAO4M,KAI3E,OAHKpiB,EAAIwV,IAAM0N,EAAGC,MACR9iB,EAAIiI,EAAKwa,WAAWtN,QAAU6M,GAASe,KACxC/iB,IAAMiiB,KAAUc,KAAgB9a,EAAKwa,WAAWtN,KAAO6M,MAAW7M,GACpElN,EAAKgb,MAAMD,EAAI,EAAGrjB,EAAI,GAAGuI,QAAQ,MAAO,KAIjD,KAAOiN,EAAI0N,GAAG,CACZ,IAAK7iB,EAAIiI,EAAKwa,WAAW9iB,EAAIwV,QAAU6M,GAASe,UAC3C,GAAI/iB,IAAMiiB,GAAUc,KAAgB9a,EAAKwa,WAAWtN,KAAO6M,MAAW7M,OACtE,GAAInV,IAAMwiB,EAAW,SAC1B,OAAOva,EAAKgb,MAAMD,EAAGrjB,GAIvB,OAAOmjB,KAAY7a,EAAKgb,MAAMD,EAAGH,GAGnC,IA7BI5a,EAAKwa,WAAWI,EAAI,KAAOb,MAAWa,EACtC5a,EAAKwa,WAAWI,EAAI,KAAOZ,MAAUY,GA4BjChiB,EAAIkN,OAAa+T,IAAK,CAE5B,IADA,IAAIoB,KACGriB,IAAMghB,IAAOhhB,IAAMihB,IAAKoB,EAAIpV,KAAKjN,GAAIA,EAAIkN,IAC5C4U,GAA4B,OAAtBO,EAAMP,EAAEO,EAAK9hB,OACvBwhB,EAAK9U,KAAKoV,GAGZ,OAAON,EAgBT,SAASO,EAAUD,GACjB,OAAOA,EAAIrT,IAAIuT,GAAazY,KAAK2X,GAGnC,SAASc,EAAYnb,GACnB,OAAe,MAARA,EAAe,GAChBsa,EAAStd,KAAKgD,GAAQ,IAAM,IAAOA,EAAKC,QAAQ,KAAM,MAAU,IAChED,EAGR,OACEoG,MAlFF,SAAAA,MAAepG,EAAM0a,GACnB,IAAIU,EAAS1B,EAASiB,EAAOF,EAAUza,EAAM,SAASib,EAAKvjB,GACzD,GAAI0jB,EAAS,OAAOA,EAAQH,EAAKvjB,EAAI,GACrCgiB,EAAUuB,EAAKG,EAAUV,EA9B/B,SAAyBhB,EAASgB,GAChC,IAAIphB,EAAS2gB,GAAgBP,GAC7B,OAAO,SAASuB,EAAKvjB,GACnB,OAAOgjB,EAAEphB,EAAO2hB,GAAMvjB,EAAGgiB,IAH7B,CA8BmDuB,EAAKP,GAAKT,GAAgBgB,KAGzE,OADAN,EAAKjB,QAAUA,MACRiB,GA6EPF,UAAWA,EACX/a,OA1BF,SAAAA,OAAgBib,EAAMjB,GAEpB,OADe,MAAXA,IAAiBA,EA9EzB,SAAsBiB,GACpB,IAAIU,EAAYjjB,OAAOY,OAAO,MAC1B0gB,KAUJ,OARAiB,EAAKlS,QAAQ,SAASwS,GACpB,IAAK,IAAIK,KAAUL,EACXK,KAAUD,GACd3B,EAAQ7T,KAAKwV,EAAUC,GAAUA,KAKhC5B,EAZT,CA8EgDiB,KACpCjB,EAAQ9R,IAAIuT,GAAazY,KAAK2X,IAAYkB,OAAOZ,EAAK/S,IAAI,SAASqT,GACzE,OAAOvB,EAAQ9R,IAAI,SAAS0T,GAC1B,OAAOH,EAAYF,EAAIK,MACtB5Y,KAAK2X,MACN3X,KAAK,OAqBT8Y,WAlBF,SAAAA,WAAoBb,GAClB,OAAOA,EAAK/S,IAAIsT,GAAWxY,KAAK,SCzGhC+Y,GAAMC,GAAI,KCAVC,IDEkBF,GAAIrV,MACAqV,GAAIhB,UACPgB,GAAI/b,OACA+b,GAAID,WCLrBE,GAAI,OAEQC,GAAIvV,MACAuV,GAAIlB,UACPkB,GAAIjc,OACAic,GAAIH,WC4BhB,IAAAI,GAXf,SAWeA,GAXE/R,EAAKvD,GAKlBA,EAAUlO,OAAOoU,WAHbiN,kBACAoC,eAAgB,KAEuBvV,GAE3C,IAAMwV,EAAMJ,GAAMpV,EAAQuV,gBAC1B,OAAOE,GAAOD,EAAIrB,UAAU5Q,GAAMvD,ICoBvB0V,GAxBf,SAwBeA,GAxBIhL,GACf,IAAMqI,KACF3hB,EAAI,EACJukB,SACEvC,KACA7T,EAAO8T,EAAYD,GAgBzB,OAdA1I,EAAIvI,QAAQ,SAACiB,GACT,IAAMnB,KACN,IAAK,IAAItP,KAAOyQ,EACRzQ,KAAOogB,EACP4C,EAAiB5C,EAAOpgB,IAExBogB,EAAOpgB,GAAOvB,IACdukB,EAAiBvkB,EAAI,GAEzB6Q,EAAO0T,GAAkBvS,EAAKzQ,GAElC4M,eAAQ0C,MAGJnQ,OAAOqN,KAAK4T,GAASK,IC1BlBwC,GAXf,SAWeA,GAXAxR,EAAMpE,GACjB,IAAM6V,GAAeC,YAAUC,UAAQC,WACjC/C,EAAa9O,EAAiBC,GAEpC,IAAK6O,EACD,MAAM,IAAI5J,MAAM,mCAGpB,OAAOwM,EAAW5C,GAAY7O,EAAMpE,4gBCGjC,SAAS+J,GAAiB9H,GAC7B,IAAMgU,KAEN,OADAnkB,OAAOqN,KAAK8C,GAAQE,QAAQ,SAACxP,GAAUsjB,EAAKtjB,GAAO,IAAIwS,EAAMlD,EAAOtP,GAAMA,KACnEsjB,EAGJ,IAwBMC,GAAqB,SAArBA,GAAsBC,EAAUC,EAAOC,IAjBZ,SAACD,EAAOC,GAAuC,IACzCC,EADarQ,EAA4BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAf8X,EAAe9X,UAAA,GAC/E4X,IAAcjP,EAAeI,SAC7B4O,EAAMI,YAAYzb,OAAS,GAC3Bub,IAAME,aAAYjX,KAAlB+W,WAA0BC,KAE1BH,EAAMI,YAAYjX,MACdkX,GAAIJ,EACJK,KAAMzQ,EACN0Q,SAAUJ,IARkB,CAkBXH,EAAOC,EADuD5X,wEAJlD,SAAC0X,EAAUS,GAAU,IAAA/jB,GAC1DgkB,IAAMC,qBAAoBvX,KAA1BsX,WAAkCV,EAASW,qBAA3CD,UAAmEV,EAASK,eADvC,CAMXL,EAAUC,IAGlCW,GAAqB,SAArBA,GAAsBtR,EAAYrU,EAAG4lB,GACvC,IAA2B,IAAvBA,GAA4B5lB,IAAO4lB,EAAoB,EAAI,CAC3D,IAAMC,EAAKxR,EAAW1K,OAAS,EAC/B0K,EAAWwR,GAASxR,EAAWwR,GAAItR,MAAM,KAAK,GAA9CF,IAAoDrU,OAEpDqU,EAAWlG,KAAXkG,GAAmBrU,IA2DrB8lB,GAAS,SAATA,GAAUxM,EAAKtG,EAAM+S,GAEvB,IADA,IAAIxkB,EAAMwkB,EAAGzM,EAAKtG,EAAM,GACfhT,EAAI,EAAG0Q,EAAM4I,EAAI3P,OAAQ3J,EAAI0Q,EAAK1Q,IACvCuB,EAASA,EAATA,IAAgBwkB,EAAGzM,EAAKtG,EAAMhT,GAElC,OAAOuB,GAGEykB,GAAyB,SAAzBA,GAA0BhB,EAAOiB,GAA4B,IAAhBpR,EAAgBxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAClE6Y,KACEjB,EAAYpQ,EAAOoQ,WjCnGpB,MiCoGCkB,EAAkBtR,EAAOsR,oBACzBC,EA1BwB,SAACpB,GAC/B,IAAMqB,EAAWrB,EAAMsB,UACjBC,EAAoBvB,EAAMwB,uBAShC,OARAH,EAAS7K,eAAiB+K,EAAkB1V,OAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,SAAQyK,KAAK,KAG3Eub,EAAkBjT,iBAAmB,KACrCiT,EAAkBzS,iBAAmB,KACrCyS,EAAkB7S,eAAiB,KACnC2S,EAASI,wBAAwBC,wBAE1BL,EAXuB,CA0BSrB,GACjC2B,EAAoBP,EAAYQ,kBAuDtC,OAlDIV,EAHCD,EAAWtc,OAGNsc,EAAW/V,IAAI,SAAAhO,GAAA,OAAc,SAAC2kB,GAChC,IAAIC,SACEC,EAAUF,EAAUG,UACpBC,EAAeJ,EAAUD,kBACzBM,EAAaxmB,OAAOqN,KAAK8Y,EAAUjP,gBAAgBhE,gBACpDqI,OAAO,SAAA/Z,GAAA,OAAK5B,KAAKqmB,IAChBQ,EAAOD,EAAWvd,OAClByd,EAAUF,EAAWhX,IAAI,SAAAhO,GAAA,OAC3B+kB,EAAa3mB,GAAG4J,QACdmd,EAAW3mB,OAAOqN,KAAK8Y,EAAUjP,gBAAgBpE,cAClDyI,OAAO,SAAA/Z,GAAA,OAAK5B,KAAKqmB,IAChBW,EAAcT,EAAUjP,gBAAgBvE,YACxCL,EAAO+T,EAAQ/T,KACfiM,EAASoI,EAASrM,OAAO,SAACC,EAAKtK,GAEjC,OADAsK,EAAItK,GAAK2W,EAAY3W,GAAGsO,SACjBhE,OAELsM,KAWN,OATAT,EAAQ,SAAA5lB,EAACoY,EAAKiK,IAAKrI,GAAX,OAAmBqI,IAAIjK,EAAI4B,KAC/BiM,GACAnU,EAAKjC,QAAQ,SAACwS,GACV,IAAMhiB,EAAMukB,GAAOsB,EAAS7D,EAAKuD,GACjCS,EAAUhmB,GAAO,IAIzBulB,EAAQ,SAAA5lB,EAACoY,EAAKzI,IAAQqK,GAAd,OAAsBrK,IAAOyI,EAAI4B,IAAMja,OACxC+R,EAAKrJ,OAAS,SAACkH,GAClB,IAAM2W,GAAUL,GAAOI,EAAUzB,GAAOoB,EAAYrW,EAAQiW,IAC5D,OAAIX,EACOkB,EAASI,MAAM,SAAAvmB,GAAA,OAAS2P,EAAO0C,GAAOtS,OAASge,EAAO1L,GAAO,IAChE1C,EAAO0C,GAAOtS,OAASge,EAAO1L,GAAO,MAAOiU,EAE7CA,GACP,qBAnC2B,CAoChCE,MAtCI,sBjCzGN,QiCmJDzC,EACgBmB,EAAYuB,OAAO,SAAAzlB,GAAA,OAAUgkB,EAAIuB,MAAM,SAAAvmB,GAAA,OAAM6kB,EAAGlV,OAC5D+W,eAGYxB,EAAYuB,OAAO,SAAAzlB,GAAA,OAAUgkB,EAAI2B,KAAK,SAAA3mB,GAAA,OAAM6kB,EAAGlV,OAC3D+W,gBA2CCE,GAAmB,SAAnBA,GAAoB/C,EAAUgD,EAAWlT,EAAQmT,GAC1D,IAAMC,EAASlD,EAASuB,MAAMzR,EAAO+S,WACjCM,EAAgBH,EAiBpB,OAhBIlT,EAAO1T,OAAS2F,EAAcE,UAC9BkhB,EAAgBF,EAAU/L,OAAO,SAAA/Z,GAAA,OAA+C,IAAlC6lB,EAAU7Z,QAAQ6N,MAIpEkM,EAAOzM,eAAiB0M,EAAcld,KAAK,KAC3Cid,EAAOxB,wBAAwBC,wBAE/B5B,GACIC,EACAkD,EACAjS,EAAeE,SACb6R,YAAWlT,SAAQsT,gBAAiBD,GACtC,MAGGD,GAGEG,GAAqB,SAArBA,GAAsBC,GAO/B,IALAA,EAAa5W,KAAY4W,IACTvlB,OACZulB,EAAWvlB,KAAO6D,EAAUE,YAG3BwhB,EAAW7J,QACZ,OAAQ6J,EAAWvlB,MACnB,KAAK6D,EAAUC,QACXyhB,EAAW7J,QAAU/X,EAAeC,WACpC,MACJ,QACA,KAAKC,EAAUE,UACXwhB,EAAW7J,QAAUpY,EAAiBC,YAK9C,OAAOgiB,GA6BEC,GAA4B,SAA5BA,GAA4BpmB,GAAA,OAAUyR,EAAOzD,IAAI,SAACmY,GAG3D,OA7B8B,SAACA,GAC/B,IAAME,GAA4B9hB,EAAeC,YAC3C8hB,GACFpiB,EAAiBC,YACjBD,EAAiBI,OACjBJ,EAAiBE,SACjBF,EAAiBG,KAEbzD,EAAwBulB,EAAxBvlB,KAAM0b,EAAkB6J,EAAlB7J,QAASje,EAAS8nB,EAAT9nB,KAEvB,OAAQuC,GACR,KAAK6D,EAAUE,UACX,IAA+C,IAA3C2hB,EAAqBta,QAAQsQ,GAC7B,MAAM,IAAIvG,MAAJ,qDAA+DuG,EAA/D,aAAmFje,EAAnF,UAEV,MACJ,KAAKoG,EAAUC,QACX,IAAmD,IAA/C2hB,EAAyBra,QAAQsQ,GACjC,MAAM,IAAIvG,MAAJ,mDAA6DuG,EAA7D,aAAiFje,EAAjF,UAEV,MACJ,QACI,MAAM,IAAI0X,MAAJ,wCAAkDnV,EAAlD,aAAmEvC,EAAnE,WAtBoB,CA2B9B8nB,EAAaD,GAAmBC,IAEzBA,KAeEI,GAAa,SAAbA,GAAcC,EAAU1V,EAAMW,EAAQ/E,GAC/C+E,EAAS2U,GAA0B3U,GACnC/E,EAAUlO,OAAOoU,OAAOpU,OAAOoU,UAAW6T,IAAgB/Z,GAC1D,IAAMga,EAAcC,EAAUja,EAAQiT,YAEtC,IAAM+G,GAAsC,mBAAhBA,EACxB,MAAM,IAAI3Q,MAAJ,mCAA6CrJ,EAAQiT,WAArD,WANiD,IAAAlM,EAS3BiT,EAAY5V,EAAMpE,GATSvO,EAAAyoB,GAAAnT,EAAA,GASpDgM,EAToDthB,EAAA,GAS5C0oB,EAT4C1oB,EAAA,IAZ/B,SAACsT,EAAQqV,GAsBpBrV,EArBV5C,QAAQ,SAACsX,GACZ,IAAMY,EAAcZ,EAAWa,GAC/B,GAAKD,EAAL,CAEA,IAAM/N,EAAM8N,EAAW9a,QAAQma,EAAW9nB,MAC1CyoB,EAAW9N,GAAO+N,EAClBZ,EAAW9nB,KAAO0oB,SACXZ,EAAWa,MARM,CAsBXvV,EAAQgO,GACzB,IAAMxO,EAAWoO,GAAawH,EAAepV,EAAQgO,GAG/CwH,EAAYlW,EAAWC,gBAAgBC,EAAUvE,EAAQrO,MAC/DmoB,EAASU,mBAAqBD,EAG9BT,EAASvQ,YAAc4Q,EAAcpf,QAAUof,EAAc,GAAGpf,OAAzCof,MAAuDA,EAAc,GAAGpf,OAAS,GAAM,GAG9G,IAAM0f,KAQN,OAPAjV,EAAmBsU,EAASvQ,YAAa,SAACnY,GACtCqpB,EAAarpB,GArUrB,SAA+B6Q,EAAQ7Q,GACnC,IAAM6kB,KADgCyE,uBAEtC,QAAA7oB,EAAAkV,EAAkB9E,EAAlB9P,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,MAAA/U,GAAA,EAA0B,KAAjByS,EAAiB9S,EAAAQ,MACtB4jB,EAAKtR,EAAMhT,QAAU,IAAIwT,EAAMR,EAAMkF,aAAazF,KAAKhT,GAAIuT,IAHzB+V,6EAKtC,OAAOzE,EALX,CAqU+CsE,EAAUtY,OAAQ7Q,KAE7DmpB,EAAUI,oBAAsBF,EAEhCX,EAASlN,eAAkB7H,EAAOzD,IAAI,SAAAhO,GAAA,OAAKsnB,EAAEjpB,OAAOyK,OACpD0d,EAASe,YAAc7a,EAAQiT,aAAe9b,EAAWI,KAAO4M,EAAiBC,GAAQpE,EAAQiT,WAC1F6G,GAGEgB,GAAgB,SAAhBA,GAAiB/V,EAAQJ,GAGlC,IAFA,IAAIvT,EAAI,EAEDA,EAAI2T,EAAOhK,SAAU3J,EACxB,GAAIuT,IAAUI,EAAO3T,GAAGO,KACpB,OACIuC,KAAM6Q,EAAO3T,GAAGwe,SAAW7K,EAAO3T,GAAG8C,KACrCoH,MAAOlK,GAInB,OAAO,MA6BL2pB,GAAgC,SAAhCA,GAAiCjC,EAAWb,GAC9C,IACI+C,EAAiBlC,EAerB,OAhBoBb,EAAUgD,iBAGlB9Y,QAAQ,SAAC+Y,GACjB,GAAKA,EAAL,CADgC,IAMjBC,EANiBjpB,EA7BF,SAACgpB,GACnC,IAAIE,KACA/E,SAEJ,OADAA,EAAY6E,EAAWzE,IAEvB,KAAKrP,EAAeC,OAChB+T,GAAUF,EAAWvE,UACrB,MACJ,KAAKvP,EAAeE,QAChB8T,GAAUF,EAAWxE,KAAK6C,iBAC1B,MACJ,KAAKnS,EAAeG,QAChB8O,EAAY,UACZ+E,GAAUF,EAAWxE,KAAK2E,cAAc1V,MAAM,KAAMuV,EAAWvE,UAC/D,MACJ,QACIN,EAAY,KAGhB,OACIA,YACA+E,UArB8B,CAkCuBF,GAA7C7E,EALwBnkB,EAKxBmkB,UAAW+E,EALalpB,EAKbkpB,OACf/E,IACA2E,GAAiBG,KAAe9E,GAAf8E,WAA6BC,GAA7BD,SACbnC,qBAKLgC,GAWLM,GAAuB,SAAvBA,EAAwBrD,EAAWa,GAA8C,IAAnC7S,EAAmCxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAtB8c,EAAsB9c,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7E+c,EAAqBD,EAAaC,mBAClCC,EAAgBF,EAAaE,kBAE/BxD,IAAcuD,MAIAC,EAAc1gB,SAA+C,IAAtC0gB,EAAcnc,QAAQ2Y,KAElDA,EAAUyD,kBAAkB5C,EAAW7S,GAEnCgS,EAAU0D,UAClBxZ,QAAQ,SAACyZ,GACd,IAAMZ,EAAiBD,GAA8BjC,EAAW8C,GAChEN,EAAqBM,EAAOZ,EAAgB/U,EAAQsV,OA0B/CM,GAA2B,SAA3BA,GAA4BC,EAAaC,EAAYC,EAAgB/V,GAC9E,IAAI0Q,SACAmC,SACImD,EAA4CD,EAA5CC,qBAAsBC,EAAsBF,EAAtBE,kBACxBC,EAAsBH,EAAeI,SACrCC,EAA8BpW,EAAOoW,4BAMvCC,KAEJ,GAAoB,OAAhBR,QAAwB7V,EAAOsW,WAC/BD,IACI3F,kBAED,KAAAtjB,EACCmpB,EAAkB1qB,OAAO2qB,OAAOR,EAAqBS,qBACrDR,IACAM,EAAkBA,EAAgBnP,OAAO,SAAA/Z,GAAA,OAAK5B,EAAEuU,OAAOmW,WAAaD,KAGxE,IAAMQ,EAAmBH,EAAgBnP,OAjB5B,SAACuP,GAEd,OADe3W,EAAO0C,UAAa,sBACrBiU,EAAO3W,KAeqC3E,IAAI,SAAAhO,GAAA,OAAUupB,EAAO5W,OAAO0Q,WAEhF8E,KAEN,QAAIS,EAA6B,CAC7B,IAAMY,EAAwBhrB,OAAO2qB,OAAOR,EAAqBS,gBAEjEI,EAAsB3a,QAAQ,SAAC4a,GAC3B,IAAMC,EAAaD,EAAU9W,YACzB+W,EAAWC,eAA2BD,EAAWH,SAAW5W,EAAO4W,QAC/DG,EAAWZ,WAAaD,IAC5BV,EAAclc,KAAKwd,EAAU3G,QAC7BO,EAAWmG,EAAsBzP,OAAO,SAAA/a,GAAA,OAAKZ,IAAMqrB,IAAWzb,IAAI,SAAAhO,GAAA,OAAK5B,EAAEuU,OAAO0Q,YACvE5b,QAAUuhB,EAAU/c,MACzBoX,WACAuG,OAAQH,EAAU3G,MAClB+G,KA/CU,SAAC/G,GAC/B,IADoD,IAAd+G,EAAc1e,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7C2X,EAAMgH,SACTD,EAAK5d,KAAK6W,GACVA,EAAQA,EAAMgH,QAElB,OAAOD,EALuB,CA+CeJ,EAAU3G,YAOnDO,GAAW0G,MAAGpI,OAAHoI,qBAAiBV,IAAkBb,KAAczO,OAAO,SAAA/Z,GAAA,OAAW,OAAN5B,IACxE4qB,EAAU/c,MACNoX,WACA8E,wBAAmBA,EAAnBA,GAAqCxV,EAAOwV,sBAIpD,IAAM6B,EAAYvB,EAAW3F,MAEvBmH,EAAazrB,OAAOoU,QACtBsX,kBAAmB1B,EACnBK,uBACDlW,GAEGwX,EAAmB1B,EAAW2B,aAChCrB,GAA+BoB,IAC/B3E,EAAY1B,GAAuBqG,EAAkB9G,GACjDY,gBAAiB8E,IAErBf,GAAqBmC,EAAkB3E,EAAWyE,IAGtDjB,EAAUna,QAAQ,SAACwb,GACf,IAAMC,EAAmBxG,GAAuBkG,EAAWK,EAAIhH,UACzDwG,EAAOQ,EAAIR,KAEjB,GAAIA,EAAM,CACN,IAAMU,EA1HO,SAAC/E,EAAWqE,GACjC,IAAK,IAAI/rB,EAAI,EAAG0Q,EAAMqb,EAAKpiB,OAAQ3J,EAAI0Q,EAAK1Q,IAAK,CAC7C,IAAMglB,EAAQ+G,EAAK/rB,GACnB0nB,EAAYiC,GAA8BjC,EAAW1C,GAEzD,OAAO0C,EALc,CA0H0B8E,EAAkBT,EAAKW,WAC9DH,EAAIT,OAAOxB,kBAAkBmC,EAAeN,QAE5CjC,GAAqBgC,EAAWM,EAAkBL,GAC9C9B,cAAekC,EAAIlC,cACnBD,mBAAoBa,GAA+BoB,6PC6CpDM,cAziBX,SAAAzqB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAwB6W,QACpB,IAAIC,SAEJ5kB,KAAK+jB,QAAU,KACf/jB,KAAKmd,eACLnd,KAAKyd,uBACLzd,KAAKsiB,aANeqC,2BAAR5C,EAAQ4C,qBAAR5C,EAAQ4C,gBAQE,IAAlB5C,EAAOrgB,SAAkBkjB,EAAS7C,EAAO,cAAe8C,GAExD7kB,KAAKuT,eAAiBqR,EAAOrR,eAC7BvT,KAAKkQ,YAAc0U,EAAO1U,YAC1BlQ,KAAKwhB,YAAcoD,EAAOpD,YAC1BxhB,KAAK+jB,QAAUa,EACf5kB,KAAK8kB,aAAe9kB,KAAK+jB,QAAQe,aACjC9kB,KAAKmhB,mBAAqBnhB,KAAK+jB,QAAQ5C,mBACvCnhB,KAAK+kB,gBAAkBza,IACvBtK,KAAKwe,wBAAwBC,0BAE7B+B,GAAUwE,cAAChlB,MAAXwgB,OAAoBuB,IACpB/hB,KAAK+kB,gBAAkB/kB,KAAKmhB,mBAAmB7oB,KAC/C0H,KAAKwe,wBAAwBC,wBAC7Bze,KAAKilB,uBACD5B,kBACA6B,2EA0BR,OAAOllB,KAAK2P,gBAAgB/G,OAAOX,IAAI,SAAAhO,GAAA,OAAK5B,EAAEqT,mDAY9C,OAAO1L,KAAK+kB,8DAIZ,OAAO/kB,KAAKmlB,kEAMZ,OAFAnlB,KAAKmlB,YDrEe,SAAfC,GAAenrB,EAA8BqkB,EAAmB+G,GAAmB,IAAAxsB,EAAAgoB,GAAA5mB,EAAA,GAAlEmS,EAAkEvT,EAAA,GAAtDysB,EAAsDzsB,EAAA,GACxF0sB,EAASD,EAAc5jB,OAAS4jB,EAAchZ,MAAM,QACpDkZ,EAAkBlH,EAAkBlT,YACpCqa,EAAYF,EAAOtd,IAAI,SAAAhO,GAAA,OT+BxB,SAAoCuW,EAAcpE,GAAY,IACzDV,EAAW8E,EAAX9E,OAER,OAAQA,EAAO7Q,MACf,KAAK6D,EAAUC,QACX,OAAQ+M,EAAO6K,SACf,KAAK/X,EAAeC,WAEpB,QACI,OAAO,IAAI2Z,GAAW5H,EAAcpE,GAE5C,KAAK1N,EAAUE,UACX,OAAQ8M,EAAO6K,SACf,KAAKpY,EAAiBC,YAClB,OAAO,IAAIyY,GAAYrG,EAAcpE,GACzC,KAAKjO,EAAiBE,SAClB,OAAO,IAAI6Y,GAAS1G,EAAcpE,GACtC,KAAKjO,EAAiBI,OAClB,OAAO,IAAIsZ,GAAOrH,EAAcpE,GACpC,QACI,OAAO,IAAIyK,GAAYrG,EAAcpE,GAE7C,QACI,OAAO,IAAIyK,GAAYrG,EAAcpE,IAvBtC,CS/B2DoZ,EAAgBE,GAAMlV,aAAcpE,KAClG,OAAOpB,EAAWC,gBAAgBwa,EAAWJ,GCiEtBD,EAAcplB,KAAKkQ,YAAalQ,KAAKuT,gBACnDvT,KAAKue,uBAAwBve,KAAK+kB,iBAChC/kB,0DAIP,OAAOA,KAAKmhB,sDAiCVwE,EAAUrW,GACZ,OAAOH,EAAanP,KAAM2lB,EAAUrW,6CAuB3BqW,GACT,OAAOxW,EAAanP,KAAM2lB,EAAU/P,GAAkB5V,KAAM2lB,UAAWrsB,IAAA,QAAAN,MAAA,SAAAA,MAqBpE4sB,GACH,OAAO7P,GAAM/V,KAAM4lB,4CAoBXC,GACR,OAAO3S,EAAWlT,KAAM6lB,wCAkDpBC,EAAUlZ,GACd,IAAMmZ,GACF7sB,KAAM2F,EAAcC,OACpB6gB,cAIEqG,GAAgBrG,WAFtB/S,EAASnU,OAAOoU,UAAWkZ,EAAWnZ,IAEE+S,WAExC,ODvEuB,SAAlBsG,GAAmBnJ,EAAUgJ,EAAUI,EAAcF,GAC9D,IAAMhG,EAASlD,EAASuB,MAAM2H,EAAYrG,WADoCwG,EA9HtD,SAAC/Z,EAAYxD,EAAQkd,EAAUlZ,EAAQkQ,GAC/D,IAAIsJ,KACEC,KACF1I,GAAqB,EACrB2I,GAAwB,EACtBptB,EAAS0T,EAAT1T,KACFqtB,KACAC,EAAgB,SAAhBA,IAAgB,OAAM1J,EAASlM,gBAC7B6V,EAAmB,SAAnBA,EAAmBxsB,GAAA,OAAS6rB,EAC9Bld,EAAO3G,GACPA,EACAukB,EACAD,IAGEG,EAAUxtB,IAAS2F,EAAcE,QAAU,SAAA9E,GAAA,OAAUwsB,EAAiBxkB,IACxE,SAAAhI,GAAA,OAASwsB,EAAiBxkB,IAExB0kB,EAAS,SAATA,EAAU5uB,GACZ,QAAI2uB,EAAQ3uB,KACR2lB,GAAmB0I,EAAeruB,EAAG4lB,GACrCA,EAAoB5lB,OAM5B,OAAImB,IAAS2F,EAAcG,KACvBmN,EAAmBC,EAAY,SAACrU,GACvB4uB,EAAO5uB,KACR2lB,GAAmB2I,EAAetuB,EAAGuuB,GACrCA,EAAuBvuB,MAGvBquB,EAAcrjB,KAAK,KAAMsjB,EAActjB,KAAK,QAGxDoJ,EAAmBC,EAAYua,IACvBP,EAAcrjB,KAAK,OAtCH,CAiIpBid,EAAO9P,YACP8P,EAAOzB,uBAAuB+C,oBAC9BwE,EACAI,EACApJ,GAP0EqJ,UAEvE/Z,EAFuE+Z,KAE3DE,EAF2DF,KAS9EnG,EAAO9P,YAAc9D,EACrB4T,EAAOxB,wBAAwBC,wBAC/B,IAAImI,EAAM5G,EACV,GAAIkG,EAAahtB,OAAS2F,EAAcG,IAAK,CACzC,IAAM6nB,EAAY/J,EAASuB,MAAM2H,EAAYrG,WAC7CkH,EAAU3W,YAAcmW,EACxBQ,EAAUrI,wBAAwBC,wBAClC5B,GACIC,EACA+J,EACA9Y,EAAeC,QACZpB,OAAQsZ,GACTJ,GAENc,GAAO5G,EAAQ6G,GAUnB,OARAhK,GACIC,EACAkD,EACAjS,EAAeC,QACZpB,OAAQsZ,GACTJ,GAGCc,ECsCIX,CACHjmB,KACA8lB,EACAlZ,EACAoZ,2CAuBJ,OAAQhmB,KAAKkQ,YAAYxO,SAAW1B,KAAKuT,eAAe7R,6CAUnC,IAAlBie,IAAkBva,UAAA1D,OAAA,YAAA0D,UAAA,KAAAA,UAAA,GACfgZ,EAAW,IAAIpe,KAAK8mB,YAAY9mB,MAMtC,OALI2f,EACAvB,EAAS2I,UAAU/mB,MAEnBoe,EAAS2I,UAAU,MAEhB3I,wCA8CF0B,EAAWlT,GAChB,IAAMmZ,GACF7sB,KAAM2F,EAAcC,OACpB6gB,cAEJ/S,EAASnU,OAAOoU,UAAWkZ,EAAWnZ,GACtC,IAAMoa,EAAchnB,KAAK2e,kBACnBoB,EAAYtnB,OAAOqN,KAAKkhB,GACtB9tB,EAAS0T,EAAT1T,KAEJ+tB,EAAsBnH,EAAU/M,OAAO,SAACC,EAAK1H,GAM7C,MAL+B,WAA3BA,EAAMwb,YAAYxuB,KAClB0a,EAAI9M,KAAJ8M,+HAAY+M,EAAU/L,OAAO,SAAA/Z,GAAA,OAA0C,IAA7B6Z,EAAUoT,OAAO5b,OACpDA,KAAS0b,GAChBhU,EAAI9M,KAAKoF,GAEN0H,OAGXiU,EAAsBpe,MAAMG,KAAK,IAAI+N,IAAIkQ,IAAsBhf,IAAI,SAAAhO,GAAA,OAASqR,EAAMqN,SAkBlF,OAfIzf,IAAS2F,EAAcG,KACD6gB,GAAiB7f,KAAMinB,GACzC/tB,KAAM2F,EAAcC,OACpB6gB,UAAW/S,EAAO+S,WACnBI,GACkBF,GAAiB7f,KAAMinB,GACxC/tB,KAAM2F,EAAcE,QACpB4gB,UAAW/S,EAAO+S,WACnBI,IAGmBF,GAAiB7f,KAAMinB,EAAqBra,EAAQmT,MAIvEnB,6CAIP,OAAO5e,KAAKmnB,mEAWZ,OAPAnnB,KAAKmnB,aAAennB,KAAKmlB,YAAYvc,OAAOmK,OAAO,SAACC,EAAKoU,EAAUrvB,GAK/D,OAJAib,EAAIoU,EAAS9uB,SACT2J,MAAOlK,EACPsvB,IAAKD,EAAS1b,UAEXsH,OAEJhT,6CAWPA,KAAK+jB,SAAW/jB,KAAK+jB,QAAQuD,YAAYtnB,MACzCA,KAAK+jB,QAAU,KACf/jB,KAAKsiB,UAAUxZ,QAAQ,SAACyZ,GACpBA,EAAMwB,QAAU,OAEpB/jB,KAAKsiB,uDA6BIC,GACT,IAAItP,EAAMjT,KAAKsiB,UAAUiF,UAAU,SAAAtuB,GAAA,OAAWuuB,IAAYjF,KACjD,IAATtP,GAAajT,KAAKsiB,UAAUhb,OAAO2L,EAAK,MAAA3Z,IAAA,YAAAN,MAAA,SAAAA,MAQjCyuB,GACPznB,KAAK+jB,SAAW/jB,KAAK+jB,QAAQuD,YAAYtnB,MACzCA,KAAK+jB,QAAU0D,EACfA,GAAUA,EAAOnF,UAAUpc,KAAKlG,gDA4BhC,OAAOA,KAAK+jB,oDA6BZ,OAAO/jB,KAAKsiB,yDA4BZ,OAAOtiB,KAAKmd,mEA4BZ,OAAOnd,KAAKyd,0BAILiH,GAJKjH,kwBCmJLzM,eA1oBX,SAAA/X,IAAsB,IAAAgB,GAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAA9N,KAAA/G,GAAA,QAAAO,EAAA4L,UAAA1D,OAANsF,EAAM6B,MAAArP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAN6M,EAAM7M,GAAAiL,UAAAjL,GAAA,IAAApC,EAAA,SAAAkC,EAAAhB,GAAA,IAAAgB,EAAA,UAAAytB,eAAA,oEAAAzuB,GAAA,UAAAiB,QAAAjB,IAAA,mBAAAA,EAAAgB,EAAAhB,EAAA,CAAA+G,MAAA/F,EAAAhB,EAAA0uB,WAAAlvB,OAAAmvB,eAAA3uB,IAAAf,KAAAqP,MAAAtN,GAAA+F,MAAA4b,OACT5U,KADS,OAGlBmO,EAAK0S,kBAHa9vB,EAAA,gBAAAkC,EAAAhB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA6U,UAAA,2DAAA5T,QAAAjB,IAAAgB,EAAAJ,UAAApB,OAAAY,OAAAJ,KAAAY,WAAAitB,aAAA9tB,MAAAiB,EAAAtB,YAAA,EAAAsT,UAAA,EAAAD,cAAA,KAAA/S,IAAAR,OAAAqvB,eAAArvB,OAAAqvB,eAAA7tB,EAAAhB,GAAAgB,EAAA0tB,UAAA1uB,GAAA,CAAAA,EArCFyrB,8CAuGX/d,GAQLA,EAAUlO,OAAOoU,WANbkb,MAAO,MACP3lB,UAAW,KACX4lB,WACAC,gBACAzU,SAEoC7M,GACxC,IAAMiC,EAAS5I,KAAKue,uBAAuB3V,OAErCsf,E/BOP,SAASC,EAAaC,EAAYhc,EAAYkZ,EAAe+C,EAAgB1hB,GAChF,IAMM2hB,GACF5c,UACAX,QACAwd,SAEEC,GAPN7hB,EAAUlO,OAAOoU,WAHb2b,UACAC,eAEoC9hB,IAOjB6hB,OACjBE,EAAaL,GAAkBA,EAAe3mB,OAAS,EAEvDinB,KAiDN,GA/CgBrD,EAAchZ,MAAM,KAE5BxD,QAAQ,SAAC8f,GACb,IAAK,IAAI7wB,EAAI,EAAGA,EAAIqwB,EAAW1mB,OAAQ3J,GAAK,EACxC,GAAIqwB,EAAWrwB,GAAGO,SAAWswB,EAAS,CAClCD,EAAWziB,KAAKkiB,EAAWrwB,IAC3B,SAMZ4wB,EAAW7f,QAAQ,SAACwC,GAEhBgd,EAAO5c,OAAOxF,KAAKoF,EAAMI,YAGzB8c,GACAF,EAAO5c,OAAOxF,MACV5N,KAAM,MACNuC,KAAM,eAIdsR,EAAmBC,EAAY,SAACrU,GAC5BuwB,EAAOvd,KAAK7E,SACZ,IAAM2iB,EAAYP,EAAOvd,KAAKrJ,OAAS,EAEvCinB,EAAW7f,QAAQ,SAACwC,EAAO+E,GACvBiY,EAAOvd,KAAK8d,GAAWxY,EAFf,GAE6B/E,EAAMkF,aAAazF,KAAKhT,KAE7DywB,IACAF,EAAOvd,KAAK8d,GAAWF,EAAWjnB,QAAU3J,GAGhDuwB,EAAOC,KAAKriB,KAAKnO,GAIb2wB,GAAcJ,EAAOvd,KAAK8d,GAAW3iB,KAAKnO,KAI9C2wB,GA7HR,SAAkB5J,EAASuJ,GAOvB,IAPuC,IAC/Btd,EAAiB+T,EAAjB/T,KAAMW,EAAWoT,EAAXpT,OACVoI,SACAgV,SACAC,SACAhxB,EAAIswB,EAAe3mB,OAAS,EAEzB3J,GAAK,EAAGA,IACX+b,EAAYuU,EAAetwB,GAAG,GAC9B+wB,EAAWT,EAAetwB,GAAG,IAC7BgxB,EAAWtH,GAAc/V,EAAQoI,MAO7BzJ,EAAWye,GAEX1X,EAAUrG,EAAM,SAAC5Q,EAAGiJ,GAAJ,OAAU0lB,EAAS3uB,EAAE4uB,EAAS9mB,OAAQmB,EAAE2lB,EAAS9mB,UAC1DmI,EAAQ0e,GAAW,WAC1B,IAAMzW,EAAcH,EAAUnH,EAAMge,EAAS9mB,OACvC+mB,EAAYF,EAASA,EAASpnB,OAAS,GACvCkR,EAAekW,EAASzN,MAAM,EAAGyN,EAASpnB,OAAS,GACnDmR,EAAqBD,EAAa3K,IAAI,SAAAhO,GAAA,OAAKwnB,GAAc/V,EAAQqP,KAEvE1I,EAAYvJ,QAAQ,SAAC6J,GACjBA,EAAazM,KAAKwM,EAAmBC,EAAcC,EAAcC,MAGrEzB,EAAUiB,EAAa,SAAClY,EAAGiJ,GACvB,IAAMjL,EAAIgC,EAAE,GACNX,EAAI4J,EAAE,GACZ,OAAO4lB,EAAU7wB,EAAGqB,KAIxBuR,EAAKrJ,OAAS,EACd2Q,EAAYvJ,QAAQ,SAACwJ,GACjBvH,EAAK7E,KAAL6E,UAAauH,EAAM,OAnBG,IAsB1BwW,EAA8C,SAAnCviB,OAAOuiB,GAAUrnB,cAA2B,OAAS,MAChE2P,EAAUrG,EAAM+G,EAAUiX,EAASluB,KAAMiuB,EAAUC,EAAS9mB,UAIpE6c,EAAQyJ,QACRxd,EAAKjC,QAAQ,SAAC9P,GACV8lB,EAAQyJ,KAAKriB,KAAKlN,EAAMiwB,SAjDhC,CA8HiBX,EAAQD,GAGjB1hB,EAAQ8hB,WAAY,CACpB,IAAMS,EAAUrgB,qBAASA,MAAMyf,EAAO5c,OAAOhK,UAASuG,IAAI,sBAC1DqgB,EAAOvd,KAAKjC,QAAQ,SAACwH,GACjBA,EAAMxH,QAAQ,SAACiC,EAAMhT,GACjBmxB,EAAQnxB,GAAGmO,KAAK6E,OAGxBud,EAAOvd,KAAOme,EAGlB,OAAOZ,G+BjF+BpwB,KAC9B8H,KACAA,KAAKue,uBAAuB3V,OAC5B5I,KAAKkQ,YACLvJ,EAAQshB,aAAerf,EAAOX,IAAI,SAAAhO,GAAA,OAAK5B,EAAEC,SAAQyK,OAAS/C,KAAKuT,eAC/D5M,EAAQ6M,MAEJiV,WAA8B,WAAlB9hB,EAAQohB,MACpBS,SAAU7hB,EAAQqhB,UAI1B,IAAKrhB,EAAQvE,UACT,OAAO8lB,EAxBG,IA2BN9lB,EAAcuE,EAAdvE,UACA2I,EAAuBmd,EAAvBnd,KAAMW,EAAiBwc,EAAjBxc,OAAQ6c,EAASL,EAATK,KAChBY,EAAazd,EAAOzD,IAAK,SAAAhO,GAAA,OAAKA,EAAE3B,OAEhC8wB,EADgB3wB,OAAOqN,KAAK1D,GACA2Q,OAAO,SAACC,EAAKrF,GAC3C,IAAMsF,EAAMkW,EAAWljB,QAAQ0H,GAI/B,OAHa,IAATsF,GACAD,EAAI9M,MAAM+M,EAAK7Q,EAAUuL,KAEtBqF,OAiCX,MA9BsB,WAAlBrM,EAAQohB,MACRqB,EAAYtgB,QAAQ,SAACugB,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBte,EAAKue,GAAMxgB,QAAQ,SAACwJ,EAAOkX,GACvBze,EAAKue,GAAME,GAAYD,EAAMrxB,YAEzBoa,EACAiW,EAAKiB,GACL9d,EAAO4d,QAKnBve,EAAKjC,QAAQ,SAACwJ,EAAOkX,GACjBJ,EAAYtgB,QAAQ,SAACugB,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnB/W,EAAMgX,GAAQC,EAAMrxB,YAEhBoa,EAAMgX,GACNf,EAAKiB,GACL9d,EAAO4d,QAMhBpB,0CASP,IAAM9b,EAAapM,KAAKkQ,YAClBuZ,KAWN,OATIrd,EAAW1K,QACM0K,EAAWE,MAAM,KACzBxD,QAAQ,SAAC2J,GAAQ,IAAAjZ,EACHiZ,EAAInG,MAAM,KAAKrE,IAAIO,QADhB3P,EAAA6wB,GAAAlwB,EAAA,GACjBiE,EADiB5E,EAAA,GACV4T,EADU5T,EAAA,GAEtB4T,WAAMA,EAAoBA,EAAMhP,EAChCgsB,EAAIvjB,KAAJujB,WAAY5gB,MAAM4D,EAAMhP,EAAQ,GAAGksB,OAAO1hB,IAAI,SAACsZ,EAAGtO,GAAJ,OAAYxV,EAAQwV,QAInEwW,wCA0BFG,GAAwD,IAA7CC,EAA6CzkB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAA9BwH,EAA8BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAnBua,cACpCqC,KAAmB4H,EAAU7mB,OAE7B+mB,EC9Ld,SAASC,GAASnL,EAAW1T,EAAU2e,EAAUG,GAC7C,IAAMC,EAxDV,SAAsBrL,EAAW1T,GAC7B,IAAM8D,KAEAiQ,EADaL,EAAUjP,gBACChE,eAY9B,OAVAlT,OAAOyc,QAAQ+J,GAAYnW,QAAQ,SAAA7O,GAAW,IAATX,EAASqc,GAAA1b,EAAA,MACtCiR,GAAYA,EAASxJ,QACU,IAA3BwJ,EAASjF,QAAQ3M,IACjB0V,EAAO9I,KAAK5M,GAGhB0V,EAAO9I,KAAK5M,KAIb0V,EAfX,CAwDkC4P,EAAW1T,GACnCgf,EAhCV,SAAwBtL,GAA0B,IAAfiL,EAAezkB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MACxCkjB,KAEAlJ,EADaR,EAAUjP,gBACDpE,aACtB4e,EAAazU,GAAa0U,iBAchC,OAZA3xB,OAAOqN,KAAKsZ,GAAUtW,QAAQ,SAACuhB,GACU,iBAA1BR,EAASQ,KAChBR,EAASQ,GAAejL,EAASiL,GAAanS,YAElD,IAAMoS,EAAY5U,GAAa6U,QAAQV,EAASQ,IAC5CC,EACAhC,EAAO+B,GAAeC,GAEtBhC,EAAO+B,GAAeF,EACtBN,EAASQ,GAAerV,MAGzBsT,EAlBX,CAgCqC1J,EAAWiL,GACtCzB,EAAaxJ,EAAUjP,gBACvB6a,EAAgBpC,EAAWhd,YAC3Bqf,EAASrC,EAAW9vB,KACpBoyB,KACAC,KACAjf,KACAyG,KACApH,KACF+e,SAGJrxB,OAAOyc,QAAQsV,GAAe1hB,QAAQ,SAAA7O,GAAkB,IAAAhB,EAAA0c,GAAA1b,EAAA,GAAhBX,EAAgBL,EAAA,GAAXD,EAAWC,EAAA,GACpD,IAAgC,IAA5BgxB,EAAUhkB,QAAQ3M,IAAe4wB,EAAW5wB,GAG5C,OAFAoS,EAAOxF,KAAKsD,KAAYxQ,EAAM0S,WAEtB1S,EAAM0S,SAAS7Q,MACvB,KAAK6D,EAAUC,QACXgsB,EAAWzkB,KAAK5M,GAChB,MACJ,QACA,KAAKoF,EAAUE,UACX8rB,EAAaxkB,KAAK5M,MAK9B,IAAIsxB,EAAW,EACfze,EAAmByS,EAAU1O,YAAa,SAACnY,GACvC,IAAI+e,EAAO,GACX4T,EAAa5hB,QAAQ,SAACyY,GAClBzK,EAAUA,EAAVA,IAAkB0T,EAAcjJ,GAAG/Q,aAAazF,KAAKhT,cAErDoa,EAAQ2E,IACR3E,EAAQ2E,GAAQ8T,EAChB7f,EAAK7E,SACLwkB,EAAa5hB,QAAQ,SAACyY,GAClBxW,EAAK6f,GAAUrJ,GAAKiJ,EAAcjJ,GAAG/Q,aAAazF,KAAKhT,KAE3D4yB,EAAW7hB,QAAQ,SAACyY,GAChBxW,EAAK6f,GAAUrJ,IAAMiJ,EAAcjJ,GAAG/Q,aAAazF,KAAKhT,MAE5D6yB,GAAY,GAEZD,EAAW7hB,QAAQ,SAACyY,GAChBxW,EAAKoH,EAAQ2E,IAAOyK,GAAGrb,KAAKskB,EAAcjJ,GAAG/Q,aAAazF,KAAKhT,QAM3E,IAAIwuB,KACAC,EAAgB,SAAhBA,IAAgB,OAAM5H,EAAUhO,gBAcpC,OAbA7F,EAAKjC,QAAQ,SAACwS,GACV,IAAMhL,EAAQgL,EACdqP,EAAW7hB,QAAQ,SAACyY,GAChBjR,EAAMiR,GAAK2I,EAAW3I,GAAGjG,EAAIiG,GAAIiF,EAAeD,OAGpDyD,GACAA,EAAkBxL,wBAClBsL,EAAeE,GAGfF,EAAe,IAAI9T,GAAUjL,EAAMW,GAAUpT,KAAMmyB,IAEhDX,GD0HkBC,cADP/pB,KAAM4pB,EAAWC,IAiB/B,OAdAhN,GACI7c,KACA8pB,EACA/b,EAAeG,SACb0b,YAAW5H,gBAAeoI,eAAgB1U,GAAa0U,kBACzDP,GAGAjd,EAAO+S,UACPmK,EAAa/C,UAAU/mB,MAEvB8pB,EAAa/C,UAAU,MAGpB+C,qCAsDLzB,GAA+C,IAA/Bzb,EAA+BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAApBua,cACvBkL,EAAU7qB,KAAK+e,SACjBgJ,MAAO,MACPvU,KAAM6U,IAGJyC,GADSD,EAAQnf,OAAOzD,IAAI,SAAAhO,GAAA,OAASqR,EAAMhT,QACnBsjB,OAAOiP,EAAQ9f,MAEvCggB,EAAW,IAAI/qB,KAAK8mB,YAAYgE,EAAcD,EAAQnf,QAAUkO,WAAY,WAgBlF,OAdAiD,GACI7c,KACA+qB,EACAhd,EAAeO,KACf1B,EACAyb,GAGAzb,EAAO+S,UACPoL,EAAShE,UAAU/mB,MAEnB+qB,EAAShE,UAAU,MAGhBgE,0CAwBAlwB,EAAM8L,GACb9L,EAAOA,GAAQmF,KAAKwhB,YACpB7a,EAAUlO,OAAOoU,WAAaqP,eAAgB,KAAOvV,GAErD,IAAMiC,EAAS5I,KAAK2P,gBAAgB/G,OAC9BoiB,EAAUpiB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAE+F,kBAC5BmK,EAAYD,EAAQ,GAAGtpB,OACzBwpB,SACAC,SACAC,SAEJ,GAAIvwB,IAASiD,EAAWC,UAEpB,IADAmtB,KACKC,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM7P,KACN,IAAK8P,EAAS,EAAGA,EAASxiB,EAAOlH,OAAQ0pB,IACrC9P,EAAI1S,EAAOwiB,GAAQ9yB,QAAU0yB,EAAQI,GAAQD,GAEjDD,EAAehlB,KAAKoV,QAErB,GAAIzgB,IAASiD,EAAWE,QAAS,CAEpC,IADAktB,GAAkBtiB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,SAAQyK,KAAK4D,EAAQuV,iBACpDiP,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM7P,KACN,IAAK8P,EAAS,EAAGA,EAASxiB,EAAOlH,OAAQ0pB,IACrC9P,EAAIpV,KAAK8kB,EAAQI,GAAQD,IAE7BD,EAAehlB,KAAKoV,EAAIvY,KAAK4D,EAAQuV,iBAEzCgP,EAAiBA,EAAenoB,KAAK,UAClC,IAAIlI,IAASiD,EAAWG,QAU3B,MAAM,IAAI+R,MAAJ,aAAuBnV,EAAvB,qBARN,IADAqwB,GAAkBtiB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,UAC/B6yB,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM7P,KACN,IAAK8P,EAAS,EAAGA,EAASxiB,EAAOlH,OAAQ0pB,IACrC9P,EAAIpV,KAAK8kB,EAAQI,GAAQD,IAE7BD,EAAehlB,KAAKoV,IAM5B,OAAO4P,yCAGD5f,GACN,IAAMwI,EAAYxI,EAAMhT,OACxB0H,KAAKuT,gBAALvT,IAA2B8T,EAC3B,IAAMwK,EAAoBte,KAAKmhB,mBACzBkK,EAAqB/M,EAAkBgD,oBAE7C,GAAKhD,EAAkBlT,YAAYE,EAAMhT,QAKlC,CACH,IAAMyQ,EAAauV,EAAkB1V,OAAO2e,UAAU,SAAAttB,GAAA,OAAaqxB,EAAUhzB,SAAWwb,IACxF/K,GAAc,IAAMuV,EAAkB1V,OAAOG,GAAcuC,QAN3DgT,EAAkB1V,OAAO1C,KAAKoF,GAC9B+f,EAAmBviB,QAAQ,SAACZ,EAAKnQ,GAC7BmQ,EAAIoD,EAAMhT,QAAU,IAAIwT,EAAMR,EAAMkF,aAAazF,KAAKhT,GAAIuT,KAalE,OALAgT,EAAkBjT,iBAAmB,KACrCiT,EAAkBzS,iBAAmB,KACrCyS,EAAkB7S,eAAiB,KAEnCzL,KAAKwe,wBAAwBC,wBACtBze,qDAuCQ0L,EAAQ6f,EAAY3e,GAAQ,IAAA/T,EAAAmH,KAC3C0L,EAASyU,GAAmBzU,GAC5BkB,EAASnU,OAAOoU,WAAa8S,aAAiB6L,eAAqB5e,GAEnE,IAAMoS,EAAehf,KAAK2e,kBACpB8M,EAAUF,EAAWlQ,MAAM,EAAGkQ,EAAW7pB,OAAS,GAClDgqB,EAAaH,EAAWA,EAAW7pB,OAAS,GAElD,GAAIsd,EAAatT,EAAOpT,QAAUsU,EAAO4e,WACrC,MAAM,IAAIxb,MAAStE,EAAOpT,KAApB,sCAGV,IAAMqzB,EAAkBF,EAAQxjB,IAAI,SAACqD,GACjC,IAAMsgB,EAAY5M,EAAa1T,GAC/B,IAAKsgB,EAED,MAAM,IAAI5b,MAAS1E,EAAb,gCAEV,OAAOsgB,EAAU3pB,QAGfoc,EAAQre,KAAKqe,MAAMzR,EAAO+S,WAE1BkM,EAAKxN,EAAM1O,gBAAgB/G,OAC3BkjB,EAAiBH,EAAgB1jB,IAAI,SAAAhO,GAAA,OAAO4xB,EAAG5Y,KAEjDsT,KACAC,EAAgB,SAAhBA,IAAgB,OAAMlR,EAAK1E,gBAEzBmb,KACN5f,EAAmBkS,EAAMnO,YAAa,SAACnY,GACnC,IAAMi0B,EAAaF,EAAe7jB,IAAI,SAAAhP,GAAA,OAASqS,EAAMkF,aAAazF,KAAKhT,KACvEg0B,EAAeh0B,GAAK2zB,kBAAcM,GAAdN,QAA0B3zB,EAAGyuB,EAAeD,OAhCzB,IAAA0F,EAkC3B3S,IAAcyS,IAAkBrgB,IAAUA,EAAOpT,OAA1DgT,EAlCoCoe,GAAAuC,EAAA,MA6C3C,OAVA5N,EAAM6N,SAAS5gB,GAEfuR,GACI7c,KACAqe,EACAtQ,EAAeK,SACbxB,OAAQlB,EAAQ9C,OAAQ6iB,GAC1BC,GAGGrN,0CAWAoE,GAA2D,IAA9C7V,EAA8CxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAjC+mB,EAAiC/mB,UAAA,GAAjB8e,EAAiB9e,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC5DgnB,EAAkBxf,EAAOwf,gBACzBtJ,EAAsBlW,EAAOmW,SAC7BsJ,EAAUzf,EAAOyf,QACjBpI,EFrGkB,SAAClH,GAC7B,KAAOA,EAAMgH,SACThH,EAAQA,EAAMgH,QAElB,OAAOhH,EAJqB,CEqGW/c,MAC7B4iB,EAAuBqB,EAAUgB,sBAEjCvC,GACF2B,aFhHuB,SAACtH,GAChC,KAAOA,EAAMgH,SAAWhH,EAAMI,YAAYmP,KAAK,SAAAryB,GAAA,OAAK5B,EAAE+kB,KAAOrP,EAAeG,WACxE6O,EAAQA,EAAMgH,QAElB,OAAOhH,EAJwB,CE8GkB/c,MAGzC+c,MAAOkH,GAgBX,OAbAkI,GFU0B,SAACvJ,GAA6C,IAAvBhW,EAAuBxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAV2X,EAAU3X,UAAA,GACxEmnB,SACEH,EAAkBxf,EAAOwf,gBACzB9O,EAAW1Q,EAAO0Q,SAClBhkB,EAASsT,EAAO4W,OAAhBlqB,IAA0BsT,EAAOmW,SAGnCwJ,EADAH,EACkBxJ,EAAqBS,eAErBT,EAAqBsC,iBAG1B,OAAb5H,SACOiP,EAAgBjzB,GAEvBizB,EAAgBjzB,IACZyjB,QACAnQ,UAjBsB,CEVWgW,EAAsBhW,EAAQ5M,MACnEwiB,GAAyBC,EAAaC,GAAcE,uBAAsBG,SAAUD,GAChFrqB,OAAOoU,QACHwf,WACDzf,IAEHwf,GFhB6B,SAACxJ,EAAsBF,EAAYC,GACxE,IAAMuC,EAAmBtC,EAAqBsC,iBAE9C,IAAK,IAAM1B,KAAU0B,EAAkB,CACnC,IACMvB,EADYuB,EAAiB1B,GACN5W,OACvBkW,EAAsBH,EAAe/V,OAAOmW,SAC5CyJ,GAAwB7J,EAAeuB,WAAWsI,uBACpD7J,EAAeuB,WAAWsI,sBAAsB7I,EAAYhB,EAAe/V,QAC/E,GAAI+W,EAAWZ,WAAaD,GAAuB0J,EAAuB,CACtE,IAAMC,EAAgB9I,EAAWrG,SACjCkF,GAAyBiK,EAAe/J,GACpCE,uBACAC,qBACAE,SAAUD,GACXa,KAf0B,CEiBHf,EAAsBF,GAC5C9V,SACAsX,eAIDlkB,sCAUP0sB,EAAWrgB,GACX,OAAQqgB,GACR,InC7jBmB,cmC8jBf1sB,KAAK6nB,eAAe3hB,KAAKmG,GAG7B,OAAOrM,+CASE0sB,GACT,OAAQA,GACR,InC5kBmB,cmC6kBf1sB,KAAK6nB,kBAIT,OAAO7nB,qDAUQyf,EAAW4M,GAAS,IAAA7yB,EAAAwG,KACfA,KAAK6nB,eACX/e,QAAQ,SAAAjQ,GAAA,OAAMilB,EAAG5lB,KAAK0f,EAAM6H,EAAW4M,uCA8CpDM,EAAkB/f,GACnB,IAAMoS,EAAehf,KAAK2e,kBAE1B,IAAKK,EAAa2N,GACd,MAAM,IAAI3c,MAAJ,SAAmB2c,EAAnB,kBAGV,IAAMC,EAAehgB,EAAOtU,MAAWq0B,EAAlB/f,UAErB,GAAIoS,EAAa4N,GACb,MAAM,IAAI5c,MAAJ,SAAmB4c,EAAnB,mBAGV,IAb2BC,EEhmB5B,SAAgCC,EAAc1gB,EAAYQ,GAAQ,IAC/DmgB,EAA4CngB,EAA5CmgB,QAASC,EAAmCpgB,EAAnCogB,UAAWC,EAAwBrgB,EAAxBqgB,QAASxvB,EAAemP,EAAfnP,MAAOgP,EAAQG,EAARH,IAD2BrU,EAEhD00B,EAAa9V,SAFmC+D,EAAAvN,EAAApV,EAAA,GAE9D80B,EAF8DnS,EAAA,GAExDoS,EAFwDpS,EAAA,GAIhEgS,IACDtvB,EAAmB,IAAVA,KAAiBA,GAASA,EAAQyvB,GAASA,EAAOzvB,EAC3DgP,EAAe,IAARA,KAAeA,GAAOA,EAAM0gB,GAAUA,EAAO,EAAK1gB,EAErDugB,IACAC,EAAUppB,KAAKupB,KAAKvpB,KAAKwpB,IAAI5gB,EAAMhP,GAASuvB,IAGhDD,EAxDgB,SAAlBO,EAAmBL,EAASxvB,EAAOgP,GAIrC,IAHA,IAAMsgB,KACFpf,EAAOlQ,EAEJkQ,EAAOlB,GACVsgB,EAAQ7mB,KAAKyH,GACbA,GAAQsf,EAIZ,OAFAF,EAAQ7mB,KAAKyH,GAENof,EA8COO,CAAgBL,EAASxvB,EAAOgP,IAG1CsgB,EAAQ,GAAKG,GACbH,EAAQtlB,QAAQylB,GAEhBH,EAAQA,EAAQrrB,OAAS,IAAMyrB,GAC/BJ,EAAQ7mB,KAAKinB,EAAO,GAIxB,IADA,IAAMI,KACGx1B,EAAI,EAAGA,EAAIg1B,EAAQrrB,OAAS,EAAG3J,IACpCw1B,EAAarnB,MACTzI,MAAOsvB,EAAQh1B,GACf0U,IAAKsgB,EAAQh1B,EAAI,KAIzB,IAAMy1B,KAYN,OAXArhB,EAAmBC,EAAY,SAACrU,GAC5B,IAAMua,EAAQwa,EAAatc,aAAazF,KAAKhT,GAC7C,GAAIua,aAAiB2B,EACjBuZ,EAAWtnB,KAAKoM,OADpB,CAKA,IAAM/Q,EArEU,SAAlBksB,EAAmBF,EAAcv0B,GAOnC,IANA,IAAI00B,EAAU,EACVC,EAAWJ,EAAa7rB,OAAS,EACjCksB,SACArsB,SAGGmsB,GAAWC,GAAU,CAIxB,GAAI30B,IAFJuI,EAAQgsB,EADRK,EAASF,EAAU7pB,KAAK8N,OAAOgc,EAAWD,GAAW,KAGlCjwB,OAASzE,EAAQuI,EAAMkL,IACtC,OAAOlL,EACAvI,GAASuI,EAAMkL,IACtBihB,EAAUE,EAAS,EACZ50B,EAAQuI,EAAM9D,QACrBkwB,EAAWC,EAAS,GAI5B,OAAO,KAiDWH,CAAgBF,EAAcjb,GAC5Ckb,EAAWtnB,KAAQ3E,EAAM9D,MAAzB+vB,IAAkCjsB,EAAMkL,SAGnC+gB,aAAYzV,KAAMgV,GA1CxB,CF6mBsB/sB,KAAK2P,gBAAgBvE,YAAYuhB,GACW3sB,KAAKkQ,YAAatD,GAA3E4gB,EAdmBX,EAcnBW,WAAYzV,EAdO8U,EAcP9U,KAEd8V,EAAWvU,IAAckU,KAEvBl1B,KAAMs0B,EACN/xB,KAAM6D,EAAUE,UAChB2X,QAASpY,EAAiBI,OAC1BwZ,UACC6U,IAAe,GAElBvO,EAAQre,KAAKqe,MAAMzR,EAAO+S,WAWhC,OAVAtB,EAAM6N,SAAS2B,GAEfhR,GACI7c,KACAqe,EACAtQ,EAAeM,KACZse,mBAAkB/f,SAAQggB,gBAC5B,MAGEvO,+CA8BP,OAAO,IAAIxgB,EAHEmC,KAAK8tB,UAAUhwB,EAAWC,WACxBiC,KAAK+tB,wEAtmBWnhB,GAC/B,OAAOqH,EAAkBlH,iBAAiBH,wCAf1C,OAAO8I,SA0nBA1E,GGltBAgd,GAAoDxZ,GAApDwZ,IAAKC,GAA+CzZ,GAA/CyZ,IAAKC,GAA0C1Z,GAA1C0Z,IAAKC,GAAqC3Z,GAArC2Z,IAAKC,GAAgC5Z,GAAhC4Z,MAAOC,GAAyB7Z,GAAzB6Z,KAAMC,GAAmB9Z,GAAnB8Z,MAAYC,GAAO/Z,GAAZga,ICsBjDC,IACFC,QxC8LmB,SAAAA,UAAA,QAAAz0B,EAAAmL,UAAA1D,OAAIitB,EAAJ9lB,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIm1B,EAAJn1B,GAAA4L,UAAA5L,GAAA,OACnB,SAACka,GAAqC,IAAjC9G,EAAiCxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAtBua,cACRiP,EAAYlb,EACZmb,SACEC,KA8BN,OA5BAH,EAAW7lB,QAAQ,SAACkU,GAChB4R,EAAY5R,EAAU4R,GACtBE,EAAY5oB,KAAZ4oB,+HAAoBF,EAAUzR,cACzB0R,IACDA,EAAaD,KAIjBC,GAAcA,IAAeD,GAC7BC,EAAWE,UAIfH,EAAUnR,uBACVZ,GACInJ,EACAkb,EACA7gB,EAAeI,QACf,KACA2gB,GAGAliB,EAAO+S,UACPiP,EAAU7H,UAAUrT,GAEpBkb,EAAU7H,UAAU,MAGjB6H,IwC/NXI,IxC4He,SAAAA,MAAA,QAAA/0B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGsb,IAAHtb,QAAU1M,KwC3H5C0Y,OxCgCkB,SAAAA,SAAA,QAAAzlB,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGgM,OAAHhM,QAAa1M,KwC/BlDioB,QxC+DmB,SAAAA,UAAA,QAAAh1B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGub,QAAHvb,QAAc1M,KwC9DpDkoB,QxCsJmB,SAAAA,UAAA,QAAAj1B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGwb,QAAHxb,QAAc1M,KwCrJpDmoB,kBCvB6B,SAAAA,oBAAA,QAAAl1B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGyb,kBAAHzb,QAAwB1M,KDwBxEwM,KCfgB,SAAAA,OAAA,QAAAvZ,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGF,KAAHE,QAAW1M,KDgB9CmI,eACAigB,aACAC,YE/BG,SAAAA,YAAsBnZ,EAAYC,GACrC,OAAOhH,EAAa+G,EAAYC,EAAYP,GAAkBM,EAAYC,QF+B1EF,iBACAG,kBACAkZ,c7BxBG,SAAAA,cAAwBpZ,EAAYC,EAAY7G,GACnD,OAAOyG,GAAME,GAAcC,EAAYC,EAAY7G,GAAW8G,GAAeF,EAAYC,EAAY7G,K6BwBrGigB,UAGEh1B,QAAcA,QACpB9B,OAAOoU,OAAOmE,IACVyd,aACAe,QACAzhB,iBACAjO,oBACA2vB,aACAC,gBACAhjB,oBACAnS,YACDo1B,GAEY,IAAAC,GAAA32B,EAAAmB,QAAAy1B,6HGrDfr4B,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAOs4B,kBACXt4B,OAAOu4B,UAAY,aACnBv4B,OAAOw4B,SAEFx4B,OAAOy4B,WAAUz4B,OAAOy4B,aAC7Bx3B,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAOs4B,gBAAkB,GAEnBt4B,sVCdR,SAAS04B,uBAAuBhoB,KAAO,OAAOA,KAAOA,IAAI/O,WAAa+O,KAAQ9N,QAAW8N,KAJzFzP,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEIm3B,MAAQD,uBAFDE,oBAAQ,IAMfC,mBAAqBH,uBAFDE,oBAAQ,IAI5BE,MAAQH,MAAK,QAAYI,KAAuB,oBAAX54B,OAAyBA,YAAS2V,GACvEkjB,IAAMF,MAAMG,IAAIC,SAChBjuB,EAAI6tB,MAAMG,IAAI5sB,KACd8Q,IAAMlS,EAAEkS,IACRnK,MAAQ/H,EAAE+H,MAEVmmB,kBAAqBC,IAAK,UAC1BC,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAazqB,SACnD,IAAI0qB,QACAC,KACA3c,IACA4c,aACAC,eAAgB,EAChB7oB,MAAQsoB,kBAAkBtoB,MAE9B,QAAkB,IAAPuoB,IAAoC,WAAdh3B,QAAOg3B,IAAxC,CAwBA,IAAKI,QApBDC,aAAe5oB,MAAMuoB,MACrBK,aAAaxC,UAGjBpmB,MAAMuoB,IAAMlxB,MACZ2G,QAAUA,aACF8qB,cAAgBrwB,SAASuT,IAAMhO,QAAQ8qB,eAAiB9c,IAAM2b,MAAMoB,qBAEnD,iBAAdP,YACPA,UAAYX,IAAImB,eAAeR,aAGnCE,QAAUf,MAAMsB,gBAAgBT,YACxBU,UAAYvB,MAAMwB,YAEtBjB,gBAAgBkB,aAAelB,gBAAgBmB,MAASX,QAAQY,cAAiBZ,QAAQa,eACzFV,eAAgB,GAGpBH,QAAQQ,UAAY,GACPvB,MAAM6B,qBACfd,QAAQe,MAAMd,MAAQhB,MAAM6B,qBAAqBb,MAGrDtxB,KAAKkxB,GAAKA,GACVlxB,KAAKqyB,gBAAkBhB,QAEvBrxB,KAAKsyB,kBAAoB,IAAIjC,mBAAkB,QAAYgB,QAASG,cAAe,IACnFxxB,KAAKuyB,iBAAmBnB,YACxBpxB,KAAKwyB,OAAQ,EACbxyB,KAAKoyB,SACLpyB,KAAK2G,QAAUA,QAEf3G,KAAKyyB,YAaTxB,kBAAkByB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEGtyB,KAEsB,iBAApBsyB,WAAWtyB,OACzBsyB,WAAWtyB,KAAOsyB,WAAWtyB,KAAKiC,YAFlCqwB,WAAWtyB,KAAO,GAKtBsyB,WAAWC,MAAQD,WAAWtyB,KAAKiM,MAAM,oBAClCqmB,YAIX1B,kBAAkBtoB,SAIlBsoB,kBAAkBp3B,UAAUg5B,qBAAuB,SAAUxyB,KAAMyyB,oBAAqBpxB,QACpF,IAAK1B,KAAKwyB,MACN,OAAO,EAGX,IAAIO,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwBrzB,KAAK2G,QAAQ8qB,cACrCN,UAAYnxB,KAAKszB,WACjBlB,MAAQpyB,KAAKoyB,UACbmB,MAAQvzB,KAAKwzB,iBAAmBxzB,KAAKwzB,mBACrCC,iBAAmBzzB,KAAK0zB,oBAAsB1zB,KAAK0zB,sBACnDC,UAAYtzB,MAAQ+xB,MAAMwB,UArHtB,KAqH4CxB,MAAMyB,YArHlD,KAqH0EzB,MAAM0B,YArHhF,KAqHwG1B,MAAM2B,WArH9G,IAsHJC,cAAgB3zB,KAAO,QAAU+xB,MAAMwB,UAtHnC,KAsHyDxB,MAAMyB,YAtH/D,KAsHuFzB,MAAM0B,YAtH7F,KAsHqH1B,MAAM2B,WAtH3H,IA4IR,OApBApD,iBAAiBtwB,QAAUA,KAAOswB,iBAAiBtwB,OAE9CyyB,yBAGqDxlB,KAAjD8lB,qBAAuBG,MAAMS,kBAC9B7C,UAAUU,UAAYxxB,KAAK4zB,OAAS5zB,KAAK4zB,OAAOvyB,QAAUmH,MAAMnH,OAAS,GAAGqB,KAAK1C,MACjF4yB,GAAK9B,UAAUe,YAEff,UAAUU,UAAYxxB,KACtB6yB,IAAM/B,UAAUe,YAEhBkB,qBAAuBG,MAAMS,gBAAkBf,GAAKvxB,OAASwxB,MAAQxxB,OAAS,GAC9E+xB,iBAAiBvtB,KAAK8tB,eAClBP,iBAAiB/xB,OAAS2xB,8BACnBE,MAAME,iBAAiBnrB,UAZtC8qB,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAY7mB,MAAM,MAEtB4nB,MAAOjb,WAAW+Z,MAAM,GAAI,IAC5BmB,OAAQlb,WAAW+Z,MAAM,GAAI,OAIrC7B,UAAUU,UAAYxxB,KAEtB0yB,MACIoB,OAAQhD,UAAUc,aAClBiC,MAAO/C,UAAUe,YAAckB,sBAGnCG,MAAMI,WAAaZ,KAAKmB,MAAQ,IAAMnB,KAAKoB,OAC3CV,iBAAiBvtB,KAAKytB,WAClBF,iBAAiB/xB,OAAS2xB,8BACnBE,MAAME,iBAAiBnrB,SAG3ByqB,OAIX9B,kBAAkBp3B,UAAUu6B,YAAc,WACtC,IAAIC,QAAUr0B,KAAKs0B,cACfnD,UAAYnxB,KAAKszB,WACjBiB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAUrqB,KACb,IAAIsqB,KAAMN,MASV,OAPAK,QAAQE,YAAcvqB,KAEtBgqB,OADAM,KAAOD,QAAQG,WACFR,MAAQnD,qBACT,IACRmD,MAAQM,KAAKN,OAGVA,OAGJ,SAAUhqB,KAEb,OADAinB,UAAUU,UAAY3nB,IACfinB,UAAUe,cAkB7BjB,kBAAkBp3B,UAAU44B,SAAW,SAAUL,OAC7C,OAAKpyB,KAAKwyB,MAMNJ,QAAUpyB,KAAKoyB,OAAUpyB,KAAK20B,cAI7BvC,QACDA,MAAQpyB,KAAKoyB,OAGjB9B,MAAMsE,cAAcxC,OACpBpyB,KAAKoyB,MAAQA,MAEbpyB,KAAKs0B,cAAgBO,MAAQ70B,KAAKsyB,kBAAkB15B,IAAIw5B,OAEpDpyB,KAAKs0B,eACLt0B,KAAKszB,WAAauB,MAAMC,KACxB90B,KAAK+0B,SAAWF,MAAMG,QACtBh1B,KAAKi1B,OAASJ,MAAMK,UACpBl1B,KAAKm1B,YAAcN,MAAMO,WACzBp1B,KAAK20B,cAAe,GAEpB30B,KAAK20B,cAAe,EAGjB30B,WAvBP,EALWA,KAGX,IAAI60B,OAmCR5D,kBAAkBp3B,UAAUw7B,sBAAwB,SAAUjE,aAC1D,OAAKpxB,KAAKwyB,OAGVxyB,KAAKuyB,iBAAmBnB,YACjBpxB,MAHIA,MA4BfixB,kBAAkBp3B,UAAUy7B,aAAe,SAAUj1B,KAAMk1B,SAAUC,UAAWC,QAC5E,IAAKz1B,KAAKwyB,MACN,OAAO,OAGEllB,IAATjN,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAKiC,YAGhB,IAAImG,IACAitB,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAC,EACAjzB,EACAkzB,SACArN,KACAsN,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACAz/B,EAAI,EACJ0/B,YAAcz3B,KAAKuyB,gBAAkB,GAAK,MAC1C6C,WAAap1B,KAAKm1B,YAClBH,QAAUh1B,KAAK+0B,SACf5D,UAAYnxB,KAAKszB,WACjBuB,MAAQ70B,KAAKs0B,cACboD,cAAgB7C,MAAM6C,cACtBC,SAAW9C,MAAM8C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAAS9tB,KAI7B,IAFA,IAAI+tB,GAAK,KACLlgC,GAFJmS,IAAMA,IAAI5J,QAAQ,SAAU,KAEhBoB,OACLu2B,GAAG56B,KAAK6M,IAAIguB,OAAOngC,GAAK,MAC/B,OAAOmS,IAAImR,MAAM,EAAGtjB,EAAI,IAExBogC,YACA93B,KAAMA,KACNk1B,SAAUA,SACVC,UAAWA,UACXtB,MAAO,KACPC,OAAQ,KACRiE,aAAc,KACdC,cAAe,KACfC,QAASj4B,KACTk4B,aAAa,GAYjB,GATAnC,SAAWp2B,KAAKo0B,cAKZoB,YAAcJ,aACdI,WAAa,KAGbrE,UAAW,CACX,IAAKN,gBAAgBW,cAAe,CAmBhC,IAlBAyF,WAAa3G,MAAMkI,YAAYn7B,KAAKgD,QAahC8wB,UAAUU,UAAYxxB,KACtB83B,WAAWC,aAAerC,SAAW5E,UAAUe,YAC/CiG,WAAWE,cAAgBrC,UAAY7E,UAAUc,eAVjD2D,QAAUv1B,KAAKC,QAAQgwB,MAAMmI,UAAW,SAAUpwB,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpCkuB,qBAAuBv2B,KAAK04B,WAAW9C,SAAS,GAEhDuC,WAAWC,aAAerC,SAAWQ,qBAAqBrC,MAC1DiE,WAAWE,cAAgBrC,UAAYO,qBAAqBpC,QAO5D6B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA4C,WAAWjE,MAAQiE,WAAWC,aAAerC,SAC7CoC,WAAWhE,OAASgE,WAAWE,cAAgBrC,UACxCmC,WAGX,GAAI/C,WAAaI,UAIb,OAHA2C,WAAW93B,KAAO,GAClB83B,WAAWjE,MAAQiE,WAAWC,aAAe,EAC7CD,WAAWhE,OAASgE,WAAWE,cAAgB,EACxCF,WAQf,GAHA93B,KAAO23B,SAAS33B,MAAMC,QAAQ,SAAU,KACxCu1B,gBAAkB71B,KAAKuyB,gBAAkBgD,SAAWA,SAAWmC,eAE1DT,WAAY,CAab,GAXAxuB,KADA+uB,WAAan3B,KAAKiM,MAAM,KACP5K,OACjBg0B,QAAU,GAAIC,WACdQ,SAAWqB,WAAW,GAElBx3B,KAAKi1B,OAAOkB,UACZO,SAAW12B,KAAKi1B,OAAOkB,UAAUjC,OAEjCwC,SAAWN,SAASD,UACpBn2B,KAAKi1B,OAAOkB,WAAcjC,MAAOwC,WAGjCb,gBAAkBa,SAElB3+B,GADA49B,QAAUt1B,KAAKs4B,OAAO,EAAGrI,MAAMsI,qBAAqBv4B,KAAMw1B,gBAAiB71B,OAAOsM,MAAM,KAC5E5K,WACT,IAAIg1B,SAAWnB,SAGlB,OAFA4C,WAAW93B,KAAO,GAClB83B,WAAWjE,MAAQiE,WAAWC,aAAeD,WAAWhE,OAASgE,WAAWE,cAAgB,EACrFF,WACAV,eACP5B,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAQ1B,GAHAH,SAAWlB,SAAST,QAAQ5yB,KAAK,KACjCw0B,UAAYv3B,KAAKm1B,YAEbM,OAAQ,CACR,KAAO19B,EAAI0Q,IAAK1Q,GAAK,EAajB,GAZAo+B,SAAWR,QAAQ59B,GAAKy/B,WAAWz/B,GAC/BiI,KAAKi1B,OAAOkB,UACZO,SAAW12B,KAAKi1B,OAAOkB,UAAUjC,OAE5BqC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBn2B,KAAKi1B,OAAOkB,WACRjC,MAAOwC,YAGfY,UAAYZ,UACGb,kBACNH,UACDA,QAAUC,QAAQta,MAAM,GAAI,GAAGtY,KAAK,KAEpCu0B,SAAW/B,UAKX,OAJA4C,WAAW93B,KAAO23B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QACjCH,WAAWjE,MAAQkC,SAAS+B,WAAW93B,MACvC83B,WAAWhE,OAASn0B,KAAKm1B,YAClBgD,WAQnB,OAHAA,WAAW93B,KAAOs1B,QAAQ5yB,KAAK,IAC/Bo1B,WAAWjE,MAAQoD,SACnBa,WAAWhE,OAASn0B,KAAKm1B,YAClBgD,WAEP,KAAOpgC,EAAI0Q,IAAK1Q,GAAK,EAkBjB,GAhBiB,OADjBo+B,SAAWR,QAAQ59B,GAAKy/B,WAAWz/B,KACVi9B,UACrBmB,SAAW,UAGXn2B,KAAKi1B,OAAOkB,UACZO,SAAW12B,KAAKi1B,OAAOkB,UAAUjC,OAE5BqC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBn2B,KAAKi1B,OAAOkB,WACRjC,MAAOwC,YAGfY,UAAYZ,UAEGb,kBACNH,UACDA,QAAUC,QAAQta,MAAM,GAAI,GAAGtY,KAAK,KAEpCu0B,SAAW/B,UAAU,CA2BrB,GAzBA6B,UAAY/2B,KAAKs4B,OAAO,EAAGhD,QAAQj0B,QAAQq3B,YAAY,KACvD5B,SAAW92B,KAAKs4B,OAAO,EAAGhD,QAAQj0B,QAAQq3B,YAAY,KAClD3B,UAAYC,iBACZC,SAAWlB,SAAST,QAAQta,MAAMgc,gBAAkB,EAAGD,WAAWr0B,KAAK,KACvE4yB,QAAQruB,OAAO8vB,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBnB,aAAemB,UAAY,GACpBD,SAAWE,iBACdF,WAAaxB,QAAQj0B,OAAS,GAC9B41B,SAAWlB,SAAST,QAAQta,MAAMgc,gBAAkB,EAAGD,WAAWr0B,KAAK,KACvE4yB,QAAQruB,OAAO6vB,SAAU,EAAG,YAE5BG,SAAWlB,SAAST,QAAQta,MAAMgc,gBAAkB,EAAGD,WAAWr0B,KAAK,KACvE4yB,QAAQruB,OAAO6vB,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBlB,aAAekB,SAAW,IAE1BxB,QAAQruB,OAAOquB,QAAQj0B,OAAS,EAAG,EAAG,QAAU81B,WAAWz/B,IAC3DggC,cAAgBpC,QAAQj0B,OAAS,EACjC41B,SAAWlB,SAAST,QAAQta,MAAMgc,gBAAkB,EAAGU,cAAgB,GAAGh1B,KAAK,KAC/Es0B,gBAAkBU,cAClB9B,aAAel+B,IAEnBw/B,WAAav3B,KAAKm1B,aACFK,UAMZ,OALA2C,WAAW93B,KAAO23B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QAEjCH,WAAWjE,MAAQqB,SACnB4C,WAAWhE,OAASoD,UAAYv3B,KAAKm1B,YAC9BgD,WAEPjB,YAAcviB,IAAIuiB,YAAaI,UAC/B5B,QAAU,KACVQ,YAAc5F,MAAMsI,qBAAqBv4B,KAAKs4B,OAAO1C,cAAeJ,gBAAiB71B,MACrFs3B,SAAWlB,SAAS/1B,KAAKs4B,OAAO1C,aAAcC,aAAe,IACzDP,QAAQj0B,OAASu0B,aAAeC,cAEhCn+B,GADA49B,QAAUA,QAAQ/Z,OAAOvb,KAAKs4B,OAAOhD,QAAQj0B,OAAQu0B,aAAeC,YAAcP,QAAQj0B,QAAQ4K,MAAM,MAC5F5K,OAAS,GAYzC,OALAw1B,YAAcviB,IAAIuiB,YAAaI,UAE/Ba,WAAW93B,KAAOs1B,QAAQ5yB,KAAK,IAC/Bo1B,WAAWjE,MAAQgD,YACnBiB,WAAWhE,OAASoD,UACbY,WAWX,IARArC,SAAWz1B,KAAKC,QAAQgwB,MAAM0I,iBAAkB,MAEhD34B,MADAA,KAAOA,KAAKC,QAAQgwB,MAAM0I,iBAAkB1I,MAAM2I,uBACtC34B,QAAQ,iBAAkB,iBAAmBgwB,MAAM4I,iBAAkB,IAAK5I,MAAM6I,oBAAoBp2B,KAAK,IAAM,eAE3HouB,UAAUU,UAAYxxB,KAIjBo2B,EAAI,EAAGjzB,GAFZgzB,QAAUrF,UAAUN,gBAAgBuI,iBAAiBvI,gBAAgBwI,sBAE7C33B,OAAQ+0B,EAAIjzB,EAAGizB,GAAK,EACxCpN,KAAOmN,QAAQC,IAEX5F,gBAAgByI,gBAAkBhJ,MAAMiJ,aAAal8B,KAAKgsB,KAAKmQ,aAEnD,MADZ7C,IAAMtN,KAAKwI,aAEK,MAAR8E,IACAmB,WAAaF,aAAal2B,OACX,MAARi1B,MACPkB,UAAYD,aAAal2B,QAG7Bk2B,aAAa1xB,MACTuzB,SAAU3B,WACV4B,QAAS7B,UACTxO,KAAMA,OAEVmO,WAAWtxB,KAAKywB,MAS5B,GAJA5+B,EAAI,EACJ0Q,IAAMmvB,aAAal2B,QACnBg1B,SAAWkB,aAAa,GAAGvO,KAAK6I,aAEjBqD,SAIX,OAHA4C,WAAW93B,KAAO,GAClB83B,WAAWjE,MAAQiE,WAAWC,aAAeD,WAAWhE,OAASgE,WAAWE,cAAgB,EAErFF,WAoBX,GAnBWzB,SAAWb,kBAAoB71B,KAAKuyB,mBAE3CsD,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAK1BpB,YAAcuB,aAAa,GAAGvO,KAAKsQ,WACnCrD,WAAasB,aAAa,GAAGvO,KAAKuQ,UAE9BnE,OACA,KAAO19B,EAAI0Q,IAAK1Q,GAAK,GAEjB6+B,oBADAvN,KAAOuO,aAAa7/B,GAAGsxB,MACGsQ,WAAatD,YAAchN,KAAK6I,aAEjC2D,kBAChBmB,6BACDA,2BAA6Bj/B,GAE7Bo5B,UAAUe,YAAcqD,WACxBwB,gBAAkBh/B,EAClBA,EAAI0Q,WAKhB,KAAO1Q,EAAI0Q,IAAK1Q,GAAK,EAEjB8+B,iBADAxN,KAAOuO,aAAa7/B,GAAGsxB,MACA4I,cAAgB5I,KAAKuQ,UAAYtD,YAGxDQ,OAAS,MAFTF,mBAAqBvN,KAAKsQ,WAAatD,YAAchN,KAAK6I,aAIjC2D,iBAChBmB,6BACDA,2BAA6Bj/B,GAG7B6+B,mBAAqBrB,WACrB6B,UAAYQ,aAAa7/B,GAAG0hC,SAC5BtC,SAAWS,aAAa7/B,GAAG2hC,QACvBtC,UAAYC,iBACZO,aAAaR,WAAW/N,KAAKwI,UAAY,QACzCwF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAU9N,KAAKwI,UAF5BsF,WAAap/B,EAE2B,SAEA,SAE5Cs/B,gBAAkBF,UAElB9N,KAAKwQ,WAAWC,aAAahD,OAAStG,IAAIuJ,cAAc,MAAO1Q,MAI/DA,KAAK4I,aAAe5I,KAAKuQ,UAAYpE,WAEjCsB,OACAA,OAAO+C,WAAWvS,YAAYwP,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAU9N,KAAKwI,UAAY,IAExC+F,aAAaR,WAAW/N,KAAKwI,UAAY,IAE7CkF,gBAAkBh/B,EAElBA,EAAI0Q,KAEJuuB,2BAA6B,OAKjCH,gBAAkBrB,YAClBuB,gBAAkBh/B,EAClBA,EAAI0Q,KAMpB,GAAIsuB,gBAAkBtuB,IAAK,CAOvB,IALA0vB,WAAWI,aAAc,EAGzBvB,2BAA6BA,4BAA0DD,gBAElFh/B,EAAI0Q,IAAM,EAAG1Q,GAAKi/B,2BAA4Bj/B,GAAK,GACpDsxB,KAAOuO,aAAa7/B,GAAGsxB,MAElBwQ,WAAWvS,YAAY+B,MAGhC,KAAOtxB,GAAK,EAAGA,GAAK,EAChBsxB,KAAOuO,aAAa7/B,GAAGsxB,KACnBiH,MAAM0J,eAAe38B,KAAKgsB,KAAKmQ,WAE/BnQ,KAAKwQ,WAAWvS,YAAY+B,MAE5BtxB,EAAI,EAgBpB,OAVIogC,WAAW93B,KAAO8wB,UAAUU,UAAUvxB,QAAQgwB,MAAM2J,gBAAiB,MAAM35B,QAAQ,WAAY,KAC3F63B,WAAWI,cACXJ,WAAW93B,MAAQo3B,YACnBU,WAAWW,SAAWhD,UAI9BqC,WAAWhE,OAAShD,UAAUc,aAC9BkG,WAAWjE,MAAQ/C,UAAUe,YAEtBiG,WAGP,OADAA,WAAW+B,MAAQ,IAAIlqB,MAAM,qBACtBmoB,YAoBflH,kBAAkBp3B,UAAU6+B,WAAa,SAAUr4B,KAAM85B,yBACrD,IAAKn6B,KAAKwyB,MACN,OAAO,EAGX,IAAI4H,QACAC,OACAC,MACAviC,EACAC,EACAuiC,eAAiB,EACjBpG,OAAS,EACTqG,iBAEJ,IAAKL,wBACD,OAAOn6B,KAAK6yB,qBAAqBxyB,MAKrC,IAAKtI,EAAI,EAAGC,GADZoiC,QAAU/5B,KAAKiM,MAAM,KACG5K,OAAQ3J,EAAIC,EAAGD,IACnCsiC,OAASD,QAAQriC,GACjBuiC,MAAQt6B,KAAK6yB,qBAAqBwH,QAAQ,EAAMD,QAAQ14B,QACxDyyB,OAASxf,IAAIwf,OAAQmG,MAAMnG,QAC3BoG,gBAAkBD,MAAMpG,MACxBsG,cAAcH,QAAUC,MAAMpG,MAGlC,OACIA,MAAO1pB,MAAM+vB,gBACbpG,OAAQA,OACR0E,UAAW2B,gBAOnBvJ,kBAAkBp3B,UAAUk1B,QAAU,WAClC,OAAK/uB,KAAKwyB,OAIVxyB,KAAKsyB,mBAAqBtyB,KAAKsyB,kBAAkBvD,SAAW/uB,KAAKsyB,kBAAkBvD,iBAE5E/uB,KAAKszB,kBACLtzB,KAAK+0B,gBACL/0B,KAAKi1B,cACLj1B,KAAKsyB,yBACLtyB,KAAKs0B,qBACLt0B,KAAKkxB,UACLlxB,KAAKoyB,aACLpyB,KAAKqyB,uBACLryB,KAAKuyB,gBAELvyB,MAfIA,MAkBfzI,QAAO,QAAc05B,kBACrBz5B,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAIyhC,KACHlK,KAAM,SAASA,KAAKE,KACnB,IAAID,IAAMC,IAAIC,SAEVgK,UADMjK,IAAIkK,UACMD,UAEhBtN,KAAOvpB,KAAKupB,KACZzb,MAAQ9N,KAAK8N,MAEbipB,aAAe,2BACfC,eAAiBD,aAAe,YAChC1B,iBAAmB0B,aAAe,MAkLtC,OA/KAH,KACChK,IAAKA,IAELoK,eAAgBA,eAEhB3B,iBAAkBA,iBAElBC,mBATwByB,6BAWxBlJ,qBAAsB,IAEtB6H,aAAc,IAAIp5B,OAAO,KAAO+4B,iBAAmB,MAEnDc,eAAgB,IAAI75B,OAAO,kCAE3B64B,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAI95B,OAAO,kBAAoB+4B,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAIr4B,OAAO,mBAAoB,KAE5Cs4B,UAAW,aAEXqC,eAAgB,WAEhBhJ,WAAY,MAGZK,sBACC4I,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACThH,MAAO,MACPC,OAAQ,MACRgH,SAAU,UAIXC,gBACCC,KAAM,OACNxH,WAAY,cACZyH,cAAe,cACfxH,WAAY,cACZyH,cAAe,cACf3H,SAAU,YACV4H,YAAa,YACbpG,WAAY,cACZqG,cAAe,cACf1H,UAAW,aACX2H,aAAc,cAIf5K,mBAAoB,SAASA,qBAC5B,IAAIsI,gBAAiBC,oBAAqBC,eAY1C,OAVI9I,IAAImL,wBACPvC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBtH,KAAM,QAAQ30B,KAAKq9B,aAAejK,IAAImL,MACtCC,OAAQC,QAAQrL,IAAIsL,UAAYvL,IAAIwL,eAAeC,WAAW,oDAAqD,QACnHlK,WAAY,IAAI5xB,OAAO,aAAa9C,KAAKq9B,WACzC1J,SAAU,IAAI7wB,OAAO,iBAAiB9C,KAAKq9B,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlB1H,gBAAiB,SAASA,gBAAgBsK,iBACzC,IAAIC,KAAMhL,UAEV,GAAI+K,kBAAoBA,gBAAgBhK,aAAegK,gBAAgBjK,eACtE,GAAIiK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAYjL,UAAYX,IAAIuJ,cArGtC,QAsGN5I,UAAUqI,UAAYqB,eACtB1J,UAAUkL,aAAa,cAAe,QACtClL,UAAUkL,aAAa,OAAQ,gBACxBlL,eAKR,IAFAgL,KAAO3L,IAAI8L,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANAjL,UAAYX,IAAIuJ,cA/GV,QAgHIP,UAAYqB,eACtB1J,UAAUkL,aAAa,cAAe,QACtClL,UAAUkL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAYjL,WACVA,WAMVyH,qBAAsB,SAASA,qBAAqBv4B,KAAMk1B,SAAUgH,IACnE,IAAKl8B,OAASA,KAAKqB,OAClB,OAAO,EAGR,IAAI0tB,WACAgH,SAAWmG,GAAGnI,cACdoI,QAAU,EACVC,UAAY,EACZ1G,SAAWK,SAAS/1B,MACpBq8B,SAAW3G,SAAW11B,KAAKqB,OAK/B,GAHA0tB,WAAamG,SACbiH,QAAUpP,KAAKmI,SAAWmH,UAEtB3G,SAAWR,SACd,OAAOl1B,KAAKqB,OAAS,EAQtB,IALI86B,QAAUn8B,KAAKqB,SAClB0tB,WAAamG,SAAWQ,SACxByG,QAAUn8B,KAAKqB,QAGT0tB,WAAa,GAAG,CAGtB,GAFAA,WAAamG,SAAWa,SAAS/1B,KAAKs4B,OAAO,EAAG6D,YAChDC,UAAY9qB,MAAMyd,WAAasN,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAOrN,WAAa,GAAG,CAGtB,GAFAA,WAAamG,SAAWa,SAAS/1B,KAAKs4B,OAAO,EAAG6D,YAChDC,UAAY9qB,MAAMyd,WAAasN,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR5H,cAAe,SAASA,cAAc+H,UACrC,IAAIC,MAAQD,SAAS/I,SAAW+I,SAAS/I,UAAY,OAErD,OADA+I,SAASvH,WAAauH,SAASvH,YAAcuH,SAAS,gBAAwC,IAAtBt7B,SAASu7B,MAAO,IAAY,KAC7FD,aAQXplC,QAAO,QAAckjC,IACrBjjC,OAAOD,QAAUA,QAAO,8bCvMxB,SAAAH,iCAAAC,KAAAC,SACA,WAAAulC,SAAAtlC,UAAA,WAAAslC,SAAArlC,QACAA,OAAAD,QAAAD,WAEAwlC,qCAAAxvB,KAAAyvB,8BAAA,mBAAAC,+BAAA,SAAAA,+BAAAz1B,MAAAhQ,QAAAulC,8BAAAE,kCAAAxlC,OAAAD,QAAAwlC,gCAJA,CASCplC,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,WAAA2jC,SAAA7jC,qBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,kBDxEA;;;;;;;wgBELqBijC,wBACjB,SAAAA,8JAAelxB,CAAA/L,KAAAi9B,cACXj9B,KAAAk9B,SACAl9B,KAAAm9B,WACIC,aACAC,6FAIY,IAAAC,OAEhB,OADAA,OAAAt9B,KAAAk9B,OAAAh3B,KAAAqB,MAAA+1B,OAAAl4B,WACApF,6EAGqB8d,IAAI,IAAA3I,MAAAnV,KACnBu9B,OAASv9B,KAAAm9B,UAAfE,aACIp7B,MAAQs7B,YAAY9kC,OAAA+kC,oCAAA,eAAA/kC,CAAeuH,KAAfk9B,MAAZK,KAAZ,EAEA,OAAO,WACHpoB,MAAAgoB,UAAAE,aAA8BE,OAAAvpB,OAAc,SAAA8J,GAAA/lB,GAAA,OAAWA,IAAXkK,iFAI3B6b,IAAI,IAAAxI,OAAAtV,KACnBu9B,OAASv9B,KAAAm9B,UAAfC,UACIn7B,MAAQs7B,YAAY9kC,OAAA+kC,oCAAA,YAAA/kC,CAAYuH,KAAZk9B,MAAZK,KAAZ,EAEA,OAAO,WACHjoB,OAAA6nB,UAAAC,UAA2BG,OAAAvpB,OAAc,SAAA8J,GAAA/lB,GAAA,OAAWA,IAAXkK,6EAK7C,QAASjC,KAAAm9B,UAAAC,UAAT17B,uDAjCau7B;;;;;kxBCLAQ,qBACjB,SAAAA,UAAAnlC,KAAAolC,cAAA/2B,wJAA2CoF,CAAA/L,KAAAy9B,WACb92B,QAAUA,YACpC3G,KAAA1H,UACA0H,KAAA09B,4BACA19B,KAAAk9B,SACAl9B,KAAA29B,iBACA39B,KAAA49B,MAAA,KACA59B,KAAA69B,gBAAA,EACA79B,KAAA89B,UAAiBn3B,QAAjBm3B,UACA99B,KAAA+9B,WACA/9B,KAAAg+B,SAAA,KACAh+B,KAAAi+B,wGAGqB,QAAAX,OAAAnoB,MAAAnV,KAAAk+B,KAAA94B,UAAA1D,OAALy8B,IAAKt1B,MAAAq1B,MAAAE,KAAA,EAAAA,KAAAF,KAAAE,OAALD,IAAKC,MAAAh5B,UAAAg5B,MAGrB,OAFAd,OAAAt9B,KAAAk9B,OAAAh3B,KAAAqB,MAAA+1B,OAAAa,KACAA,YAAY,SAAA5a,OAAA,OAASA,yBAATpO,SACZnV,6DAGa80B,MAEb,OADA90B,KAAAi+B,cAAA/3B,KAAA4uB,MACA90B,+CAiBA,OAHAA,KAAAq+B,KAAYr+B,KAAAg+B,SAAAz2B,MAAAvH,KAAAs+B,mBAAiBt+B,KAA7Bu+B,oBACAv+B,KAAA+9B,QAAA73B,KAAkBlG,KAAlBq+B,MACAr+B,KAAA69B,gBAAA,EACA79B,+DAIA,WAAIA,KAAAk9B,MAAAx7B,SAEIpJ,KAAM0H,KADF1H,KAEJolC,cAAe19B,KAFX09B,cAGJ1kC,MAAOgH,KAAKq+B,OAGbr+B,KAAA89B,UAAAv2B,MAAAvH,KAAAs+B,mBAAkBt+B,KAAAk9B,MAAAj1B,IAAe,SAAAu2B,MAAA,OAAQA,KAARd,kEAIxC,IACIK,QAAU/9B,KADd+9B,QAEIU,KAAOV,QAAQA,eAFnB,GAIA,WAAIA,eACA/9B,MAEJ+9B,mBACA/9B,4CAIA,IAAM0+B,KAAO1+B,KAAb+9B,QACIU,KAAOC,KAAKA,YADhB,GAIA,OAFAA,cACAA,gBACA1+B,6CAIA,cAAOA,KAAA1H,sCAhDP,OAAO0H,KAAP49B,wBAGM5kC,OAGN,OAFAgH,KAAA49B,MAAA5kC,MACAgH,KAAA69B,gBAAA,EACA79B,kDAjCay9B;;;;;;;;;;;wqBCeAkB,iBACjB,SAAAA,QAAe,IAAAxpB,MAAAnV,oJAAA+L,CAAA/L,KAAA2+B,OACX3+B,KAAA4+B,oBACA5+B,KAAA89B,UAAiBrlC,OAAA+kC,oCAAA,MAAA/kC,CAAMuH,KAAvB4+B,kBACA5+B,KAAA3I,KAAY,IAAIwnC,yCAAA,QAAJ,WAAuBf,UAAW99B,KAA9C89B,YACA99B,KAAA3I,KAAA2mC,SAAqBR,oCAAA,SAArBsB,WAEA9+B,KAAA++B,UAAA,KACA/+B,KAAAg/B,YAAA,EACAh/B,KAAAi/B,qBACIC,uBADuB,EAEvBC,oBAAoB,GAGxBn/B,KAAAo/B,UAAiB3mC,OAAA+kC,oCAAA,UAAA/kC,CAAU,SAAA4zB,SACvB,IAAIgT,aACJ,IAAAA,SAAchT,QAAdiT,YAAmC,CAC/B,OAAKxlC,eAAA5B,KAAyBid,MAAzBypB,iBAALS,OACI,OAEJlqB,MAAAypB,iBAAAS,OAAAE,4FAKKr3B,IAAKs3B,OAClB,IAAIt+B,WACAu+B,sBACEb,iBAAmB5+B,KAAzB4+B,iBACIvnC,KAAO2I,KADX3I,KAEIymC,UAAY99B,KAFhB89B,UAgDA,OA5CC,SAAA4B,IAAAC,KAAAjC,cAAAK,SACG,IAAIzkC,WACA+lC,aACAO,YACA9K,YAEJ,IAAAx7B,OAAAqmC,KACI,MAAK7lC,eAAA5B,KAAAynC,KAALrmC,KAcA,GAXA+lC,2BACAvK,KAAO,IAAI+J,yCAAA,QAAJvlC,IAAA+lC,OAAuBvB,UAA9BhJ,YACA8J,kCAEAtxB,KAAKsyB,KAAO7B,QAAR6B,MACAA,2BAGAvoC,2BAGAoB,OAAA+kC,oCAAA,eAAA/kC,CAAeyI,IAAMy+B,KAAzBrmC,MACIomC,kCAAsCE,KAAtCF,OACA5K,cAAgB0I,oCAAA,SAAhB1I,gBACG,GAAI5zB,eAAes8B,oCAAA,eAAgB,KAAAqC,MACtC/K,cAAgB5zB,IAAhB4zB,OACA+K,MAAA/K,MAAAgL,gBAAAv4B,MAAAs4B,MAAAvB,mBAAwBp9B,IAAA6+B,kBAAA93B,IAA0B,SAAAo3B,OAAA,OAAST,iBAATS,gBAElDvK,cAAgB0I,oCAAA,SAAhB1I,SACAA,cA7BX,CAAA5sB,IAiCMs3B,gBAAyBA,MAjC/B,KAkCGI,KAAMhB,0BAGV5+B,KAAA++B,UAAiB,IAAIvB,oCAAA,WAAW/kC,YAAYuH,KAA5C4+B,oBAIAa,eAAiBz/B,KAAA8mB,YAAAkZ,gBAAA3oC,MAAAukB,OAAAvkB,MAAA2c,OAA2D,SAAA8gB,MAAA,OAAQA,KAAR+I,kBAC5E4B,QAAuB,SAAA3K,MAAA,OAAQA,KAARvK,YACvB0V,qFAAyC,SAAAnL,MAAA,OAAQA,KAARvK,YACzCvqB,uDAGUsxB,MACV,GAAIA,QAAQtxB,KAAZ4+B,iBACI,OAAO5+B,KAAA4+B,iBAAAtN,MAAP+M,uEAKc6B,MAAOC,QAAQ,IAAAC,KAAA9qB,OAAAtV,KAC3BqgC,MAAQH,MAAAj4B,IAAU,SAAAqpB,MAAA,OAAQhc,OAAAspB,iBAARtN,QACpBgP,OAAQF,KAAA,IAAIG,4CAAA,SAAJC,SAAAj5B,MAAA64B,KAAA9B,mBADZ+B,QAIA,OADAA,cAAc,SAAAvL,MAAA,OAAQA,qBAARwL,SACPA,uBAAuBH,OAAvBG,MAAsCH,OAA7CriB,4CAGe,IACf,IAAI2iB,kBACAC,qBAFWxC,KAAA94B,UAAA1D,OAARqgB,OAAQlZ,MAAAq1B,MAAAE,KAAA,EAAAA,KAAAF,KAAAE,OAARrc,OAAQqc,MAAAh5B,UAAAg5B,MAGf,IACIH,iBACAoC,MAAQte,OAAA9Z,IAAW,SAAAsb,OAEf,OADAA,cAAgBA,MAAhBA,GACOA,MAAP,KAMR,OAJA8c,cAAc,SAAAvL,MAAA,OAAQA,KAARvK,YACd0T,0DAAsBT,oCAAA,KAAAj2B,WAAA+F,EAAAgxB,mBAAQ+B,MAAAp4B,IAAU,SAAA6sB,MAAA,OAAQA,KAARmJ,oBACxCwC,WAAa,IAAIjD,oCAAA,WAAW6C,MAAAp4B,IAAU,SAAA6sB,MAAA,OAAQA,KAAR4I,iBAEjC19B,KAALg/B,aAMA0B,cAAgBjoC,OAAA+kC,oCAAA,iBAAA/kC,CAAhBioC,QACAA,QAAsB,SAAAC,cAAA,OAAgBA,aAAhBpW,YACtBkW,kBAAkBC,cAAAz4B,IAAkB,SAAA6sB,MAAA,OAAQA,KAAR4I,iBACpCO,0DAAsBT,oCAAA,KAAAj2B,WAAA+F,EAAAgxB,mBAAQoC,cAAAz4B,IAAkB,SAAA6sB,MAAA,OAAQA,KAARmJ,oBAEhDj+B,KAAA4gC,0BAA+B/3B,WAAW,IAAAkO,IAA1CknB,gBAAAwC,YACAzgC,OAXIA,KAAA4gC,0BAAA3C,eACAj+B,KAAAg/B,YAAA,EACAh/B,kFAYmBi+B,cAAewC,YAAY,IAAA7oB,OAAA5X,KAE9C6gC,YACAC,YACJL,YAEwBjD,oCAAA,WAAApO,WAAsBpvB,KAAtB++B,UADpB0B,YAAAM,UAIA7rB,QAAgB,SAAAqO,OAAA,OAAS3L,OAAAgnB,iBAAArb,OAATyd,eAapB,OAVA/C,sBAAsB,SAAAhkC,GAClB4mC,gDAAiB5mC,YAAjB4mC,iBAEJ5C,sBAAsB,SAAAhkC,GAClB6mC,gDAAiB7mC,YAAjB6mC,eAGH9gC,KAAAi/B,oBAADC,uBAAmD2B,SAAA/3B,QAAiB,SAAAgV,IAAA,OAAMA,QACzE9d,KAAAi/B,oBAADE,oBAAgDn/B,KAAAo/B,UAAA0B,UAA2BxB,YAA3EmB,aACAzgC,KAAAihC,2BACAjhC,6DAGuB,QAAAkhC,OAAAlhC,KAAAmhC,MAAA/7B,UAAA1D,OAAR0/B,OAAQv4B,MAAAs4B,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAARD,OAAQC,OAAAj8B,UAAAi8B,OACvB,IACIr6B,KADUo6B,OAAAn5B,IAAW,SAAAo3B,OAAA,OAAS6B,OAAAtC,iBAATS,SACdp3B,IAAU,SAAA6sB,MAAA,OAAQA,KAAOA,KAAfuJ,QAErB,OADAr+B,KAAAshC,OAAA/5B,MAAAvH,KAAAs+B,mBAAAt3B,OACAhH,+DAWA,OADAA,KAAAg/B,YAAA,EACAh/B,iFAMA,OAFAA,KAAAi/B,oBAAAC,uBAAA,EACAl/B,KAAAi/B,oBAAAE,oBAAA,EACAn/B,2EAGoB1G,KAEpB,OADA0G,KAAAi/B,oBAA4B3lC,IAA5B,gBACA0G,+EAGsBq/B,OACtB,OAAOr/B,KAAA4+B,iBAAPS,iEAvBoBvK,MACpB,IAAMyM,YAEN,OADAC,qFACAD,kDA7Ja5C;;;;;;;kBCbrB8C,oBAAA,QAAeC,oCAAA;;;;;;;;;sqBCYTC,iBACF,SAAAA,uJAAe51B,CAAA/L,KAAA2hC,OACX3hC,KAAA4hC,OAAc,IAAIC,oCAAA,QAClB7hC,KAAA8hC,WAAA,EACA9hC,KAAA+hC,0EA6BA,IAAIC,kBACA95B,WAWJ,OATA,IAAI9C,UAAA1D,QACAsgC,gBACA95B,8CAEA85B,mDACA95B,6CAGJlI,KAAAiiC,gBAAAD,WAAA95B,KACAlI,6DASuB,IAAAkiC,gBACnBC,kBACAC,eACAC,eACA7C,aACA8C,eAiBJ,OAfIl9B,UAAA1D,OAAJ,GACI89B,8CACA6C,gDACAC,kDAEA9C,WACA6C,gDACAC,iDAGJH,kBAAoBG,QAAQC,oCAAA,kBAE5BL,gBADAE,eAAiB,IAAIG,oCAAA,eAAeJ,kBAApCC,KACAtC,gBAAAv4B,MAAA26B,gBAAA5D,mBAAkC6D,kBAAlClnC,eAEA+E,KAAAiiC,gBAAAzC,0KAAAgD,IAAAH,QAAAD,iBACApiC,6DAIagiC,WAAY95B,KAEzB,OADAlI,KAAA4hC,OAAAa,gBAAAv6B,IAAA85B,YACAhiC,mCA0FAkgC,MAAOpiB,GAAI4kB,aACX,IAQiBC,sBAPbC,SAAW1C,8BADfA,OAGI2C,MAAQ7iC,KAAA4hC,OAAAkB,qBAAAF,UACJ/nC,KAD+C,YAE/CijB,QAGR4kB,cAEIC,sBAAA3iC,KAAA4hC,OAAAmB,kBAAAC,uBAAA,cAAAC,eAAA17B,MAAAo7B,sBAAArE,mBAAA4B,QAEJ,OAAA2C,wCAgBE3C,MAAOpiB,GAAI4kB,aACb,IASiBQ,uBARbN,SAAW1C,8BADfA,OAGI2C,MAAQ7iC,KAAA4hC,OAAAkB,qBAAAF,UACJ/nC,KAD+C,YAE/CijB,QAIR4kB,cAEIQ,uBAAAljC,KAAA4hC,OAAAmB,kBAAAC,uBAAA,iBAAAC,eAAA17B,MAAA27B,uBAAA5E,mBAAA4B,QAGJ,OAAA2C,0CAYA,OAFA7iC,KAAA8hC,WAAA,EACA9hC,KAAA+hC,MAAArgC,OAAA,EACA1B,6CAYA,OAHAA,KAAA8hC,WAAA,EACA9hC,KAAAmjC,QAAA57B,MAAAvH,KAAAs+B,mBAAgBt+B,KAAhB+hC,QACA/hC,KAAA+hC,MAAArgC,OAAA,EACA1B,yCAkBA,IAEIyI,IAFA6oB,YACApwB,WAGJ,OAAQuH,IAAMrD,UAAd1D,QACA,OACI4vB,6CACA,MAEJ,OACIA,6CACApwB,4CACA,MAEJ,QACI,OAAAlB,KAGJ,WAAIyI,KACAzI,KAAA8hC,UAAiB9hC,KAAA+hC,MAAA77B,MAAgBorB,KAAjCpwB,MAAgDlB,KAAAmjC,SAAa7R,KAA7DpwB,MACAlB,MAGGA,KAAA4hC,OAAAwB,aAAP9R,gDAIe,QAAAsQ,OAAAzsB,MAAAnV,KAAAk+B,KAAA94B,UAAA1D,OAAPw+B,MAAOr3B,MAAAq1B,MAAAE,KAAA,EAAAA,KAAAF,KAAAE,OAAP8B,MAAO9B,MAAAh5B,UAAAg5B,MAMf,WAAI8B,aACAlgC,OAGJ4hC,OAAA5hC,KAAA4hC,QAAAN,OAAA/5B,MAAAq6B,OAAAtD,mBAAsB4B,MAAAj4B,IAAU,SAAAqpB,MAAA,OAASnc,MAAAysB,OAAAyB,yBAAqC/R,KAAtC,IAAgDA,KAAxD,QAChCtxB,4CAQA,OAAOA,KAAP4hC,qDASA,OAAO5hC,KAAA4hC,OAAAvqC,KAAPgnC,6CA5SWn2B,KACX,OAAO,IAAAy5B,OAAAM,gBAAA,KAAP/5B,kBA+SRu5B,oBAAA,QAAAE;;;;;;;mgCCvUA,IACI2B,eAAiB,SAAjBA,eAAiBp7B,KAEb,oBAAI,IAAAA,IAAA,YAAAhO,QAAAgO,MAAyB,CACzB,UAAIA,IAAgB,SAEpB,uBADQzP,+BAAR0N,KAEI,kBAAQ+B,6DAAD,GAGf,UAGsBuoB,IAAM,oBAAA94B,UAbpCA,OAc+B4rC,aAAe9S,2BAA6BA,IAA7BA,6BACtCA,IADsCA,0BACNA,IADMA,wBAEtCA,IAFsCA,yBAGtC,SAAApkB,UACIm3B,oBAlBZ,KAqBIC,eAAiB,SAAjBA,iBACI,OAAIA,6BAA8B,IAAA7jC,MAAlC2K,UACYk5B,eAADC,WAAAphC,YAA0CmhC,eAADE,QAAhDrhC,YAGJmhC,uBACAA,2BAA4B,IAAA7jC,MAA5B6jC,WACOnhC,YAA0CmhC,eAADE,QAAhDrhC,aAEJshC,eAAiB,SAAjBA,eAAiBvD,MAAAviB,IACb,IAAI+lB,IAAM,SAANA,MACA/lB,mCAAMuiB,MAAAp4B,IAAU,SAAA6sB,MACZ,IACI4J,KAAO5J,KADXiJ,QAEI/lC,EAAI0mC,YAFR,EAGA,OAAQA,KAAK1mC,QAAgBA,EAAtB,GAA8B0mC,KAArC1mC,SAIR,OADA6rC,SAAWJ,iBACXI,KAEJC,YAAc,SAAdA,YAAczD,MAAAviB,IACV,IAAI+lB,IAAM,SAANA,MACA/lB,mCAAMuiB,MAAAp4B,IAAU,SAAA6sB,MACZ,IAAM4J,KAAO5J,KAAbiJ,QACA,OAAQW,KAAD,GAAUA,KAAKA,YAAtB,SAKR,OAFAmF,SAAW/lB,GAAX+lB,WACAA,SAAWJ,iBACXI,KAEJE,OAAS,SAATA,OAAS9lB,KAAA,OAAOA,IAAAlL,OACQ,SAAApK,MAAAmV,IAEJ,OAAIA,WAAWnV,MAAfV,IACIU,OAGJA,UAAUmV,GAAVnV,QACAA,sBAEAA,SACCV,OAAS87B,YAXrBA,QAaTrV,QAAU,SAAVA,QAAUzQ,KAAA,OAAO,WACbA,YAAY,SAAAH,IAAA,OAAMA,SAEtBkmB,KAAO,SAAPA,OAAsB,QAAA9F,KAAA94B,UAAA1D,OAAXqgB,OAAWlZ,MAAAq1B,MAAAE,KAAA,EAAAA,KAAAF,KAAAE,OAAXrc,OAAWqc,MAAAh5B,UAAAg5B,MAClB,IAAM6F,OAEN,OADAliB,eAAe,SAAA3a,OAAA,OAAS68B,sCAAT78B,UACf68B,KAEJC,YAAc,SAAdA,YAAcC,QAAA,OAAAA,QACdC,cAAgB,SAAhBA,cAAgBtgB,MACZ,IAAMugB,QAAUvgB,WAAhB,KACIrb,IAAM47B,QADV3iC,OAEA,OAAQ2iC,gBAAiB57B,IAAlB,GAA4B47B,QAAQ57B,IAA3C,KAEJ67B,UAAY,SAAZA,UAAYC,kBACR,IAAIC,SACAC,eADJ,KAMA,OAHAF,iBAAmBA,qCACfA,kBADeA,kBACgD,aAE5D,SAAApH,UAAA9Q,YACHnmB,KAAAqB,MAAAi9B,MAAArH,WACA,OAAIsH,iBACAA,eAAiBlB,aAAa,WAC1B,IAAMmB,MAAQF,YAAd,GACAA,eACAC,oBAEAV,sBAAsB,SAAAjmB,IAAA,OAAMA,OAC5BymB,+BAKhBI,MAAQ,SAARA,MAAQC,WAAA,OAAa,mBAAAzD,MAAA/7B,UAAA1D,OAAIqgB,OAAJlZ,MAAAs4B,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAItf,OAAJsf,OAAAj8B,UAAAi8B,OAAA,OAAetf,OAAA9Z,IAAW,SAAAb,OAC3C,IAAM0tB,KAAO8P,UAAbx9B,OACA,OACI9O,KAAMw8B,KADHx8B,KAEHolC,cAAe5I,KAFZ4I,cAGH1kC,MAAO87B,KAAKuJ,UAGpBwG,gBAAkB,SAAlBA,kBAAkB,QAAAC,MAAA1/B,UAAA1D,OAAIqgB,OAAJlZ,MAAAi8B,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIhjB,OAAJgjB,OAAA3/B,UAAA2/B,OAAA,OACd9pC,aAAc8mB,eAAgBA,cADA,GAE9BjE,GAAIiE,OAAOA,cAAPA,KAERke,iBAAmB,SAAnBA,iBAAmB+E,MACf,IAAIf,OACEh8B,OA2BN,OA1BA+8B,aAAa,SAAAlQ,MAAA,OAAQ7sB,IAAI6sB,KAAJ7sB,gBAAR,IACb,SAAAy3B,IAAAruB,KACIA,YAAY,SAAAyjB,MACR,IAAIuK,MACA4F,mBACAC,cACAC,gBACG9F,MAAQvK,KAAT4I,iBAANz1B,KAIQg9B,KADJA,YAAch9B,IAAdg9B,SAC0BA,cAAgBhB,WAA1C,IAEIiB,OAASjB,YAATiB,aACAC,QAAUlB,UAAUgB,YAApBE,GACAlB,IAAMiB,cAANjB,SAGAkB,gBAAgB,SAAA9b,KAAAtxB,GAAA,OAAakQ,IAAIohB,KAAJphB,eAA0BlQ,EAAImtC,OAA3CxjC,SAChBuG,WAAag8B,eAAbh8B,GAXJA,WAAag8B,eAAbh8B,EAcJy3B,IAAI5K,KAAJ4K,iBAGRA,OACAuE,KAEJjG,UACIc,WAAY,SAAAA,aAAe,QAAAsG,MAAAhgC,UAAA1D,OAAXqgB,OAAWlZ,MAAAu8B,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXtjB,OAAWsjB,OAAAjgC,UAAAigC,OACvB,IAAMzoB,QAIN,OAHAmF,eAAe,SAAAujB,aACX7sC,2LAAuB6sC,YAAvB7sC,KAA0C6sC,YAA1C7sC,UAEJmkB,MAEJ2oB,SAAU,SAAAA,SAAAD,aAAA,OAAeA,YAAftsC,QAGlB,SAAAwoC,uBAAA1M,KAAAyM,SAAAiE,YACI,IAAInG,aACJvK,mBAAmB,SAAA2Q,WACfjE,wDAGA1M,gBAAkBuK,MAAQvK,KAAT4I,iBAArB8H,aAGAjE,oBACAiE,yBAGEE,0BACF,SAAAA,eAAA1H,yJAAuBjyB,CAAA/L,KAAA0lC,gBACnB1lC,KAAA8d,GAAAkgB,SACAh+B,KAAAm+B,mGAGoB,IAAAwH,KAEpB,OADAA,KAAA3lC,KAAAm+B,KAAAj4B,KAAAqB,MAAAo+B,KAAAvgC,WACApF,+DAIA,OAAOA,KAAPm+B,sCAIA,OAAOn+B,KAAP8d;;;;;+mBC5LR,IAAM8nB,UAAY,SAAZA,UAAYv0B,IAAAw0B,MACdx0B,YAAY,SAAAgY,WACJA,UAAJ,OAA0BA,OAG1Bwc,iBAIaC,sBACjB,SAAAA,WAAAz0B,oJAAkBtF,CAAA/L,KAAA8lC,YACd9lC,KAAA+lC,QACAH,cAAe5lC,KAAf4lC,0EAGIv0B,KAEJ,OADAu0B,cAAe5lC,KAAf4lC,MACA5lC,+CAIA,OAAOvH,YAAYuH,KAAnB+lC,sDAGeC,KAAMC,MACrB,IAAI3sC,WACE4sC,gBACFC,GAAKH,KADTD,KAEIK,GAAKH,KAFTF,KAGA,IAAAzsC,OAAA6sC,QACSrsC,eAAA5B,KAAAiuC,GAAL7sC,OAGIA,OAAJ8sC,IAGAF,wBAEJ,OAAO,IAAAJ,WAAPI,4DA7BaJ,uwCCTrB,IAAMO,KAAOjW,oBAAQ,IAErB54B,OAAOD,QAAU8uC,KAAKjsC,QAAUisC,KAAKjsC,QAAUisC,gECE/C,IAII/V,MANJ,SAASJ,uBAAuBhoB,KAAO,OAAOA,KAAOA,IAAI/O,WAAa+O,KAAQ9N,QAAW8N,KAI7EgoB,CAFDE,oBAAQ,IAIF,QAAYG,KAAuB,oBAAX54B,OAAyBA,YAAS2V,GACvEkjB,IAAMF,MAAMG,IAAIC,SAChBG,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAASsV,iBAAiBjU,gBAAiBb,cAAe+U,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErDvmC,KAAKumC,cAAgBA,cACrBvmC,KAAKymC,MAAQ,KACbzmC,KAAK0mC,KAAO,KACZ1mC,KAAK2mC,cACL3mC,KAAK0B,OAAS,EACd1B,KAAK4mC,SAAWvU,gBAEZb,iBACAgV,IAAMhW,IAAIqW,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DN,IAAIM,eAAe,6BAA8B,SAAU,KAC3DN,IAAIM,eAAe,6BAA8B,QAAS,KAC1D9mC,KAAK+mC,QAAUP,IACfxmC,KAAK4mC,SAASxK,YAAYoK,MAIlCF,iBAAiBzsC,UAAUjB,IAAM,SAAUw5B,OACvC,IAAI4U,KACA1tC,IACA2tC,aACAN,WAAa3mC,KAAK2mC,WAClBl+B,IAAMzI,KAAK0B,OACXiT,IAAM3U,KAAKumC,cACXW,OAAS,GAEb,IAAK5tC,OAAOg3B,MAAM8K,oBACK9tB,IAAf8kB,MAAM94B,OACN4tC,QAAU5W,MAAM8K,eAAe9hC,KAAO,IAAM84B,MAAM94B,KAAO,KAIjE,IAAK4tC,OACD,OAAO,EAGX,GAAID,aAAeN,WAAWO,QACtBlnC,KAAKymC,QAAUQ,eACfA,aAAaE,OAASF,aAAaE,KAAKx5B,KAAOs5B,aAAat5B,MAC5Ds5B,aAAat5B,OAASs5B,aAAat5B,KAAKw5B,KAAOF,aAAaE,MAC5DF,aAAat5B,KAAO3N,KAAKymC,MACzBQ,aAAat5B,KAAKw5B,KAAOF,aACzBjnC,KAAK0mC,OAASO,eAAiBjnC,KAAK0mC,KAAOO,aAAaE,MACxDF,aAAaE,KAAO,KACpBnnC,KAAKymC,MAAQQ,kBAEd,CACH,GAAIx+B,KAAOkM,IAGP,IAFAqyB,KAAOv+B,IAAMkM,IAAM,EAEZqyB,QACHhnC,KAAKonC,gBAAgBpnC,KAAK0mC,MAGlCO,aAAejnC,KAAKqnC,aAAaH,QAGrC,OAAOD,cAGXX,iBAAiBzsC,UAAUwtC,aAAe,SAAUH,QAChD,IAAIpS,KAAM3D,UA8DV,OA5DAnxB,KAAK2mC,WAAWO,QAAU/V,WACtBxjB,KAAM,KACNw5B,KAAM,KACNrS,KAAM,KACN4C,cAAe,EACftC,WAAY,EACZuC,SAAU,EACV2P,aAAc,EACdJ,OAAQA,OACRhS,cAKJ/D,UAAUxjB,KAAO3N,KAAKymC,MACtBtV,UAAUxjB,OAASwjB,UAAUxjB,KAAKw5B,KAAOhW,WACzCnxB,KAAKymC,MAAQtV,UACRnxB,KAAK0mC,OACN1mC,KAAK0mC,KAAOvV,WAEhBnxB,KAAK0B,QAAU,EAEfozB,KAAO3D,UAAU2D,KAAOtE,IAAIuJ,cAAc,OAC1C/5B,KAAK4mC,SAASxK,YAAYtH,MAEtBjE,gBAAgBmB,OAASnB,gBAAgBgL,OACzC/G,KAAK1C,MAAMiK,aAAa,UAAW6K,QAEnCpS,KAAKuH,aAAa,QAAS6K,QAG/BpS,KAAKuH,aAAa,cAAe,QACjCvH,KAAKuH,aAAa,OAAQ,gBAC1BvH,KAAK1C,MAAMmV,QAAU,eAErBzS,KAAKjD,UAAYvB,MAAMwB,WACvBX,UAAUiE,WAAaN,KAAK7C,aAC5Bd,UAAUmW,aAAexS,KAAK5C,YAAc,EAExCrB,gBAAgBW,gBAChBsD,KAAO3D,UAAUoD,QAAU/D,IAAIqW,gBAAgB,6BAA8B,SACxExK,aAAa,QAAS6K,QAC3BlnC,KAAK+mC,QAAQ3K,YAAYtH,MAEzBA,KAAKL,YAAcnE,MAAMwB,WACzBX,UAAUiE,WAAaN,KAAKJ,UAAUP,OACtChD,UAAUmW,cAAgBxS,KAAKJ,UAAUR,MAAQnD,qBAAuB,EAExE+D,KAAKL,YAAc,MACnBtD,UAAUuG,cAAgB5C,KAAKJ,UAAUR,MAAQnD,oBACjD+D,KAAKL,YAAc,IACnBtD,UAAUwG,SAAW7C,KAAKJ,UAAUR,MAAQnD,sBAE5C+D,KAAKjD,UAAY,MACjBV,UAAUuG,cAAgB5C,KAAK5C,YAC/B4C,KAAKjD,UAAY,IACjBV,UAAUwG,SAAW7C,KAAK5C,YAC1B4C,KAAKjD,UAAY,IAGdV,WAGXmV,iBAAiBzsC,UAAUutC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAWlnC,KAAK0B,QAAW8lC,OAGhCxnC,KAAK0B,QAAU,EAEf8lC,KAAKL,OAASK,KAAKL,KAAKx5B,KAAO65B,KAAK75B,MACpC65B,KAAK75B,OAAS65B,KAAK75B,KAAKw5B,KAAOK,KAAKL,MACpCnnC,KAAKymC,QAAUe,OAASxnC,KAAKymC,MAAQe,KAAK75B,MAC1C3N,KAAK0mC,OAASc,OAASxnC,KAAK0mC,KAAOc,KAAKL,MAExCK,KAAK1S,KAAK+E,WAAWvS,YAAYkgB,KAAK1S,aAE/B90B,KAAK2mC,WAAWO,UAG3BZ,iBAAiBzsC,UAAUk1B,QAAU,WACjC,IAAIz1B,IACAqtC,WAAa3mC,KAAK2mC,WAGtB,IAAKrtC,OADL0G,KAAKumC,cAAgB,KACTI,WACR3mC,KAAKonC,gBAAgBT,WAAWrtC,MAGpC0G,KAAK4mC,SAAS/M,WAAWvS,YAAYtnB,KAAK4mC,UAE1C5mC,KAAK4mC,SAAW,KAChB5mC,KAAKymC,MAAQ,KACbzmC,KAAK0mC,KAAO,MAGhBlvC,OAAOD,QAAU+uC,o2dCnLFmB,UAAA,SAASttC,EAAGiJ,GACzB,OAAOjJ,EAAIiJ,GAAK,EAAIjJ,EAAIiJ,EAAI,EAAIjJ,GAAKiJ,EAAI,EAAIskC,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQlmC,SAAckmC,QAyB5B,SAASC,oBAAoB9sB,GAC3B,OAAO,SAAS1iB,EAAGo+B,GACjB,OAAOgR,UAAU1sB,EAAE1iB,GAAIo+B,IA3BWoR,CAAoBD,WAEtDE,KAAM,SAAAA,KAAS3tC,EAAGs8B,EAAGjlB,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKtX,EAAEuH,QAChB8P,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBm2B,QAAQztC,EAAEuX,KAAM+kB,GAAK,EAAGjlB,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAETu2B,MAAO,SAAAA,MAAS5tC,EAAGs8B,EAAGjlB,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKtX,EAAEuH,QAChB8P,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBm2B,QAAQztC,EAAEuX,KAAM+kB,GAAK,EAAGhlB,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAIw2B,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAASzR,GACtB,OAAa,OAANA,EAAaiR,KAAOjR,GCDzB0R,YAAQt/B,MAAMhP,UCAHuuC,WDEID,YAAM9sB,MACR8sB,YAAMlgC,ICHR,SAASxK,MAAO4qC,KAAMC,MACnC7qC,OAASA,MAAO4qC,MAAQA,KAAMC,MAAQ9uC,EAAI4L,UAAU1D,QAAU,GAAK2mC,KAAO5qC,MAAOA,MAAQ,EAAG,GAAKjE,EAAI,EAAI,GAAK8uC,KAM9G,IAJA,IAAIvwC,GAAK,EACLyB,EAAoD,EAAhDqK,KAAK8Q,IAAI,EAAG9Q,KAAKupB,MAAMib,KAAO5qC,OAAS6qC,OAC3C/mC,MAAQ,IAAIsH,MAAMrP,KAEbzB,EAAIyB,GACX+H,MAAMxJ,GAAK0F,MAAQ1F,EAAIuwC,KAGzB,OAAO/mC,QCXLgnC,IAAM1kC,KAAK+Q,KAAK,IAChB4zB,GAAK3kC,KAAK+Q,KAAK,IACf6zB,GAAK5kC,KAAK+Q,KAAK,GAEJ8zB,UAAA,SAASjrC,MAAO4qC,KAAMM,OACnC,IAAIlkB,QAEAjrB,EACAovC,MACAN,KAHAvwC,GAAK,EAMT,GAD8B4wC,OAASA,OAAzBlrC,OAASA,UAAvB4qC,MAAQA,OACcM,MAAQ,EAAG,OAAQlrC,OAEzC,IADIgnB,QAAU4jB,KAAO5qC,SAAOjE,EAAIiE,MAAOA,MAAQ4qC,KAAMA,KAAO7uC,GACT,KAA9C8uC,KAAOO,cAAcprC,MAAO4qC,KAAMM,UAAkBvnC,SAASknC,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHA7qC,MAAQoG,KAAKupB,KAAK3vB,MAAQ6qC,MAC1BD,KAAOxkC,KAAK8N,MAAM02B,KAAOC,MACzBM,MAAQ,IAAI//B,MAAMrP,EAAIqK,KAAKupB,KAAKib,KAAO5qC,MAAQ,MACtC1F,EAAIyB,GAAGovC,MAAM7wC,IAAM0F,MAAQ1F,GAAKuwC,UAKzC,IAHA7qC,MAAQoG,KAAK8N,MAAMlU,MAAQ6qC,MAC3BD,KAAOxkC,KAAKupB,KAAKib,KAAOC,MACxBM,MAAQ,IAAI//B,MAAMrP,EAAIqK,KAAKupB,KAAK3vB,MAAQ4qC,KAAO,MACtCtwC,EAAIyB,GAAGovC,MAAM7wC,IAAM0F,MAAQ1F,GAAKuwC,KAK3C,OAFI7jB,SAASmkB,MAAMnkB,UAEZmkB,OAGF,SAASC,cAAcprC,MAAO4qC,KAAMM,OACzC,IAAIL,MAAQD,KAAO5qC,OAASoG,KAAK8Q,IAAI,EAAGg0B,OACpCG,MAAQjlC,KAAK8N,MAAM9N,KAAKklC,IAAIT,MAAQzkC,KAAKmlC,MACzC9O,MAAQoO,KAAOzkC,KAAKiR,IAAI,GAAIg0B,OAChC,OAAOA,OAAS,GACT5O,OAASqO,IAAM,GAAKrO,OAASsO,GAAK,EAAItO,OAASuO,GAAK,EAAI,GAAK5kC,KAAKiR,IAAI,GAAIg0B,QAC1EjlC,KAAKiR,IAAI,IAAKg0B,QAAU5O,OAASqO,IAAM,GAAKrO,OAASsO,GAAK,EAAItO,OAASuO,GAAK,EAAI,GAGlF,SAASQ,SAASxrC,MAAO4qC,KAAMM,OACpC,IAAIO,MAAQrlC,KAAKwpB,IAAIgb,KAAO5qC,OAASoG,KAAK8Q,IAAI,EAAGg0B,OAC7CQ,MAAQtlC,KAAKiR,IAAI,GAAIjR,KAAK8N,MAAM9N,KAAKklC,IAAIG,OAASrlC,KAAKmlC,OACvD9O,MAAQgP,MAAQC,MAIpB,OAHIjP,OAASqO,IAAKY,OAAS,GAClBjP,OAASsO,GAAIW,OAAS,EACtBjP,OAASuO,KAAIU,OAAS,GACxBd,KAAO5qC,OAAS0rC,MAAQA,MCjDlB,ICEAC,SAAA,SAAShmB,OAAQrpB,EAAGsvC,SAEjC,GADe,MAAXA,UAAiBA,QAAUnB,QACzB1uC,EAAI4pB,OAAO1hB,OAAjB,CACA,IAAK3H,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQ6vC,QAAQjmB,OAAO,GAAI,EAAGA,QAC1D,GAAIrpB,GAAK,EAAG,OAAQsvC,QAAQjmB,OAAO5pB,EAAI,GAAIA,EAAI,EAAG4pB,QAClD,IAAI5pB,EACAzB,GAAKyB,EAAI,GAAKO,EACduvC,GAAKzlC,KAAK8N,MAAM5Z,GAChBwxC,QAAUF,QAAQjmB,OAAOkmB,IAAKA,GAAIlmB,QAEtC,OAAOmmB,SADOF,QAAQjmB,OAAOkmB,GAAK,GAAIA,GAAK,EAAGlmB,QACpBmmB,SAAWxxC,EAAIuxC,MCV3C,SAASl3B,WAkDT,SAASnK,QAAItO,OAAQohB,GACnB,IAAI9S,IAAM,IAAImK,QAGd,GAAIzY,kBAAkByY,QAAKzY,OAAO6vC,KAAK,SAASxwC,MAAOM,KAAO2O,IAAIwK,IAAInZ,IAAKN,cAGtE,GAAI6P,MAAMuB,QAAQzQ,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAO+H,OAGf,GAAS,MAALqZ,EAAW,OAAShjB,EAAIyB,GAAGyO,IAAIwK,IAAI1a,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAGyO,IAAIwK,IAAIsI,EAAEviB,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQsO,IAAIwK,IAAInZ,IAAKK,OAAOL,MAE7D,OAAO2O,IAnETmK,QAAIvY,UAAYoO,QAAIpO,WAClBitB,YAAa1U,QACbI,IAAK,SAAAA,IAASlZ,KACZ,MAPgB,IAOCA,OAAQ0G,MAE3BpH,IAAK,SAAAA,IAASU,KACZ,OAAO0G,KAVS,IAUK1G,MAEvBmZ,IAAK,SAAAA,IAASnZ,IAAKN,OAEjB,OADAgH,KAbgB,IAaF1G,KAAON,MACdgH,MAETypC,OAAQ,SAAAA,OAASnwC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAYoG,aAAeA,KAAKpG,WAEzC8vC,MAAO,SAAAA,QACL,IAAK,IAAI9vC,YAAYoG,KArBL,MAqBepG,SAAS,WAAsBoG,KAAKpG,WAErEkM,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAIlM,YAAYoG,KAzBL,MAyBepG,SAAS,IAAekM,KAAKI,KAAKtM,SAASyhB,MAAM,IAChF,OAAOvV,MAETsd,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAIxpB,YAAYoG,KA9BL,MA8BepG,SAAS,IAAewpB,OAAOld,KAAKlG,KAAKpG,WACxE,OAAOwpB,QAETlO,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAItb,YAAYoG,KAnCL,MAmCepG,SAAS,IAAesb,QAAQhP,MAAM5M,IAAKM,SAASyhB,MAAM,GAAIriB,MAAOgH,KAAKpG,YACzG,OAAOsb,SAET6d,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIn5B,YAAYoG,KAxCL,MAwCepG,SAAS,MAAiBm5B,KACzD,OAAOA,MAET4W,MAAO,SAAAA,QACL,IAAK,IAAI/vC,YAAYoG,KAAM,GA5CX,MA4CepG,SAAS,GAAe,OAAO,EAC9D,OAAO,GAET4vC,KAAM,SAAAA,KAASzuB,GACb,IAAK,IAAInhB,YAAYoG,KAhDL,MAgDepG,SAAS,IAAemhB,EAAE/a,KAAKpG,UAAWA,SAASyhB,MAAM,GAAIrb,QA0BjFiI,oBCxEA2hC,SAAA,WACb,IAEIC,YACAC,QACAC,KAJAjkC,QACAkkC,aAKJ,SAASziC,MAAM4gC,MAAO8B,MAAOC,aAAcC,WACzC,GAAIF,OAASnkC,KAAKpE,OAEhB,OADkB,MAAdmoC,aAAoB1B,MAAM30B,KAAKq2B,aAClB,MAAVC,QAAiBA,QAAO3B,OAASA,MAY1C,IATA,IAGIiC,SACApxC,MAEAoqB,OANArrB,GAAK,EACLyB,EAAI2uC,MAAMzmC,OACVpI,IAAMwM,KAAKmkC,SAGXI,YAAcpiC,UAEdxE,OAASymC,iBAEJnyC,EAAIyB,IACP4pB,OAASinB,YAAYzxC,IAAIwxC,SAAW9wC,IAAIN,MAAQmvC,MAAMpwC,IAAM,KAC9DqrB,OAAOld,KAAKlN,OAEZqxC,YAAY53B,IAAI23B,UAAWpxC,QAQ/B,OAJAqxC,YAAYb,KAAK,SAASpmB,OAAQ9pB,KAChC6wC,UAAU1mC,OAAQnK,IAAKiO,MAAM6b,OAAQ6mB,MAAOC,aAAcC,cAGrD1mC,OAWT,OAAOsmC,MACLpwC,OAAQ,SAAAA,OAASwuC,OAAS,OAAO5gC,MAAM4gC,MAAO,EAAGmC,aAAcC,YAC/DtiC,IAAK,SAAAA,IAASkgC,OAAS,OAAO5gC,MAAM4gC,MAAO,EAAGqC,UAAWC,SACzDv1B,QAAS,SAAAA,QAASizB,OAAS,OAX7B,SAASjzB,SAAQjN,IAAKgiC,OACpB,KAAMA,MAAQnkC,KAAKpE,OAAQ,OAAOuG,IAClC,IAAIkgC,MAAOuC,QAAUV,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAASnkC,KAAKpE,OAAQymC,MAAQlgC,IAAIiN,WACnDizB,SAAYlgC,IAAIuhC,KAAK,SAAS9gC,EAAGiiC,GAAKxC,MAAMjiC,MAAM5M,IAAKqxC,EAAGvnB,OAAQlO,SAAQxM,EAAGuhC,YAChE,MAAXS,QAAkBvC,MAAM30B,KAAK,SAASrZ,EAAGiJ,GAAK,OAAOsnC,QAAQvwC,EAAEb,IAAK8J,EAAE9J,OAAW6uC,MAMtDjzB,CAAQ3N,MAAM4gC,MAAO,EAAGqC,UAAWC,QAAS,IAC9EnxC,IAAK,SAAAA,IAASjB,GAAmB,OAAdyN,KAAKI,KAAK7N,GAAW0xC,MACxCC,SAAU,SAAAA,SAASjiB,OAA4C,OAAnCiiB,UAASlkC,KAAKpE,OAAS,GAAKqmB,MAAcgiB,MACtEF,WAAY,SAAAA,WAAS9hB,OAA6B,OAApB8hB,YAAa9hB,MAAcgiB,MACzDD,OAAQ,SAAAA,OAAS/uB,GAAiB,OAAZ+uB,QAAS/uB,EAAUgvB,QAI7C,SAASO,eACP,SAGF,SAASC,UAAU5wC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAASwxC,YACP,OAAOviC,UAGT,SAASwiC,OAAOxiC,IAAK3O,IAAKN,OACxBiP,IAAIwK,IAAInZ,IAAKN,OCrEf,SAAS+d,WAET,IAAI6zB,MAAQ3iC,QAAIpO,UAkBhB,SAAS4Y,QAAI9Y,OAAQohB,GACnB,IAAItI,IAAM,IAAIsE,QAGd,GAAIpd,kBAAkBod,QAAKpd,OAAO6vC,KAAK,SAASxwC,OAASyZ,IAAIwE,IAAIje,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAO+H,OACvB,GAAS,MAALqZ,EAAW,OAAShjB,EAAIyB,GAAGiZ,IAAIwE,IAAItd,OAAO5B,SACzC,OAASA,EAAIyB,GAAGiZ,IAAIwE,IAAI8D,EAAEphB,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAO8Y,IA7BTsE,QAAIld,UAAY4Y,QAAI5Y,WAClBitB,YAAa/P,QACbvE,IAAKo4B,MAAMp4B,IACXyE,IAAK,SAAAA,IAASje,OAGZ,OADAgH,KFXgB,KEUhBhH,OAAS,KACcA,MAChBgH,MAETypC,OAAQmB,MAAMnB,OACdC,MAAOkB,MAAMlB,MACbtmB,OAAQwnB,MAAM9kC,KACditB,KAAM6X,MAAM7X,KACZ4W,MAAOiB,MAAMjB,MACbH,KAAMoB,MAAMpB,MAmBC/2B,ICtCX01B,gBAAQt/B,MAAMhP,UAEPoO,cAAMkgC,gBAAMlgC,IACZoT,YAAQ8sB,gBAAM9sB,MCAdwvB,UAAYvyC,KAAM,YAEd,SAASwyC,QAAQvpC,OAC9B,IAAIU,MAAQgG,UACR+O,UACA+zB,QAAUF,SAId,SAASG,MAAM3yC,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAIkK,MAAMrJ,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIgzC,UAAYF,SAAU,OAAOE,QACjC9oC,MAAMwQ,IAAInZ,IAAKvB,EAAIif,OAAO9Q,KAAK7N,IAEjC,OAAOkJ,OAAOxJ,EAAI,GAAKwJ,MAAMG,QA0B/B,OAlCAH,MAAiB,MAATA,SAAqB8Z,YAAMnjB,KAAKqJ,OAWxCypC,MAAMh0B,OAAS,SAASuK,GACtB,IAAKnc,UAAU1D,OAAQ,OAAOsV,OAAOqE,QACrCrE,UAAa/U,MAAQgG,UAErB,IADA,IAA0B5P,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAI+nB,EAAE7f,SACT3J,EAAIyB,GAAQyI,MAAMuQ,IAAIlZ,KAAOjB,EAAIkpB,EAAExpB,IAAM,KAAKkK,MAAMwQ,IAAInZ,IAAK0d,OAAO9Q,KAAK7N,IAClF,OAAO2yC,OAGTA,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKqpB,GAAIypB,OAASzpC,MAAM8Z,SAGnE2vB,MAAMD,QAAU,SAASxpB,GACvB,OAAOnc,UAAU1D,QAAUqpC,QAAUxpB,EAAGypB,OAASD,SAGnDC,MAAMC,KAAO,WACX,OAAOH,UACF9zB,OAAOA,QACPzV,MAAMA,OACNwpC,QAAQA,UAGRC,MCzCM,SAASE,OACtB,IAII5C,KACA6C,UALAH,MAAQF,UAAUC,aAAQz9B,GAC1B0J,OAASg0B,MAAMh0B,OACfo0B,aAAeJ,MAAMzpC,MACrBA,OAAS,EAAG,GAGZiJ,OAAQ,EACR6gC,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIhyC,EAAIwd,SAAStV,OACb+iB,QAAUljB,MAAM,GAAKA,MAAM,GAC3B9D,MAAQ8D,MAAMkjB,QAAU,GACxB4jB,KAAO9mC,MAAM,EAAIkjB,SACrB6jB,MAAQD,KAAO5qC,OAASoG,KAAK8Q,IAAI,EAAGnb,EAAI6xC,aAA8B,EAAfC,cACnD9gC,QAAO89B,KAAOzkC,KAAK8N,MAAM22B,OAC7B7qC,QAAU4qC,KAAO5qC,MAAQ6qC,MAAQ9uC,EAAI6xC,eAAiBE,MACtDJ,UAAY7C,MAAQ,EAAI+C,cACpB7gC,QAAO/M,MAAQoG,KAAK2G,MAAM/M,OAAQ0tC,UAAYtnC,KAAK2G,MAAM2gC,YAC7D,IAAI/nB,OAASqoB,UAASjyC,GAAGyO,IAAI,SAASlQ,GAAK,OAAO0F,MAAQ6qC,KAAOvwC,IACjE,OAAOqzC,aAAa3mB,QAAUrB,OAAOqB,UAAYrB,QAkGnD,cA9GO4nB,MAAMD,QAebC,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUsV,OAAOuK,GAAIiqB,WAAax0B,UAGrDg0B,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUH,QAAUggB,EAAE,IAAKA,EAAE,IAAKiqB,WAAajqC,MAAM8Z,SAGxE2vB,MAAMU,WAAa,SAASnqB,GAC1B,OAAOhgB,QAAUggB,EAAE,IAAKA,EAAE,IAAK/W,OAAQ,EAAMghC,WAG/CR,MAAMG,UAAY,WAChB,OAAOA,WAGTH,MAAM1C,KAAO,WACX,OAAOA,MAGT0C,MAAMxgC,MAAQ,SAAS+W,GACrB,OAAOnc,UAAU1D,QAAU8I,QAAU+W,EAAGiqB,WAAahhC,OAGvDwgC,MAAM9P,QAAU,SAAS3Z,GACvB,OAAOnc,UAAU1D,QAAU2pC,aAAeC,aAAeznC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG6M,IAAKiqB,WAAaH,cAGrGL,MAAMK,aAAe,SAAS9pB,GAC5B,OAAOnc,UAAU1D,QAAU2pC,aAAexnC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG6M,IAAKiqB,WAAaH,cAGtFL,MAAMM,aAAe,SAAS/pB,GAC5B,OAAOnc,UAAU1D,QAAU4pC,aAAeznC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG6M,IAAKiqB,WAAaF,cAGtFN,MAAMO,MAAQ,SAAShqB,GACrB,OAAOnc,UAAU1D,QAAU6pC,MAAQ1nC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG6M,IAAKiqB,WAAaD,OAG/EP,MAAMC,KAAO,WACX,OAAOC,OACFl0B,OAAOA,UACPzV,MAAMA,OACNiJ,MAAMA,OACN6gC,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbP,MAAMW,aAAe,SAASC,GAAIC,IAChC,IAI2B1xC,EAAGiJ,EAAGnK,EAC7B6yC,QALAt6B,IAAMo6B,GACNn6B,GAAKrM,UAAU1D,OAAS,GAAKmqC,GAAKr6B,GAClCiT,QAAUljB,MAAM,GAAKA,MAAM,GAC3B6hB,OAASqB,QAAU2mB,eAAe3mB,UAAY2mB,eAC9C5xC,EAAI4pB,OAAO1hB,OAAS,EAKxB,GAHA0hB,OAAOld,KAAKkd,OAAO5pB,GAAKwG,KAAKsoC,QAEzB72B,GAAKD,KAAIvY,EAAIuY,GAAIA,GAAKC,GAAIA,GAAKxY,KAC/BwY,GAAK2R,OAAO,IAAM5R,GAAKjQ,MAAM,EAAEkjB,UAWnC,OARAtqB,EAAI0J,KAAK8Q,IAAI,EAAGo3B,kBAAkB3oB,OAAQ5R,KAC1Cs6B,QAAUC,kBAAkB3oB,OAAQ3R,IACpCrO,EAAIoO,KAAKC,GAAKtX,EAAI0J,KAAK8Q,IAAIxa,EAAG2xC,QAAU,GAKpCrnB,UAASxrB,EAAIkB,EAAGA,EAAIX,EAAI4J,EAAGA,EAAI5J,EAAIP,GAC/BkB,EAAIiJ,OAAKkK,EAAY0J,SAASqE,MAAMlhB,EAAGiJ,EAAE,IAGnD4nC,MAAMgB,OAAS,SAAUJ,GAAIC,IAC3B,IAKI1xC,EACAlB,EANAuY,IAAMo6B,GACNn6B,GAAKrM,UAAU1D,OAAS,GAAKmqC,GAAKr6B,GAClCiT,QAAUljB,MAAM,GAAKA,MAAM,GAC3B6hB,OAASqB,QAAU2mB,eAAe3mB,UAAY2mB,eAC9C5xC,EAAI4pB,OAAO1hB,OAAS,EAMxB,GADI+P,GAAKD,KAAIvY,EAAIuY,GAAIA,GAAKC,GAAIA,GAAKxY,KAC/BwY,GAAK2R,OAAO,IAAM5R,GAAKjQ,MAAM,EAAEkjB,UAQnC,OALAtqB,EAAI0J,KAAK8Q,IAAI,EAAGo3B,kBAAkB3oB,OAAQ5R,GAAI,SAKvCwF,SAASyN,QAAUjrB,EAAIW,EAAIA,IAE7BqxC,UAqBT,SAASO,kBAAmB16B,IAAKrY,MAAOizC,MAStC,IARA,IAGIC,QACAx6B,IACAy6B,GALAC,IAAM,EAENC,KADSh7B,IAAI3P,OACG,EAMb0qC,IAAMC,MACT36B,IAAM7N,KAAK8N,OAAOy6B,IAAMC,MAAQ,GAChCF,GAAKtoC,KAAKwpB,IAAIhc,IAAIK,KAAO1Y,OACpB6K,KAAKwpB,IAAIhc,IAAIK,IAAM,GAAK1Y,QAEnBmzC,GACNC,IAAM16B,IAAM,EAGZ26B,KAAO36B,IAIf,OAAKu6B,MAILC,QAAU76B,IAAIg7B,SACErzC,MACLqzC,KACAH,QAAUlzC,MACJ,IAATqzC,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAASh7B,IAAI3P,OAAS,EAAY2qC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAA50C,OAAA,SAASqvB,YAAaxvB,QAASuC,WAC5CitB,YAAYjtB,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAUitB,YAAcA,aAGnB,SAASwlB,OAAO7kB,OAAQ8kB,YAC7B,IAAI1yC,UAAYpB,OAAOY,OAAOouB,OAAO5tB,WACrC,IAAK,IAAIP,OAAOizC,WAAY1yC,UAAUP,KAAOizC,WAAWjzC,KACxD,OAAOO,UCNF,SAAS2yC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAI3sC,OAAO,WAAassC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAI5sC,OAAO,WAAawsC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAI7sC,OAAO,YAAcssC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAI9sC,OAAO,YAAcwsC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAI/sC,OAAO,WAAausC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAIhtC,OAAO,YAAcusC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAM12C,QAC5B,IAAI5H,EAEJ,OADA4H,QAAUA,OAAS,IAAI4Y,OAAOlX,eACtBtJ,EAAIy0C,OAAO8J,KAAK32C,SAAoC,IAAI42C,KAA5Bx+C,EAAIkJ,SAASlJ,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAI00C,OAAO6J,KAAK32C,SAAW62C,KAAKv1C,SAASlJ,EAAE,GAAI,MAC/CA,EAAI20C,aAAa4J,KAAK32C,SAAW,IAAI42C,IAAIx+C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAI40C,aAAa2J,KAAK32C,SAAW,IAAI42C,IAAW,IAAPx+C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAI60C,cAAc0J,KAAK32C,SAAW82C,KAAK1+C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAI80C,cAAcyJ,KAAK32C,SAAW82C,KAAY,IAAP1+C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAI+0C,aAAawJ,KAAK32C,SAAW+2C,KAAK3+C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIg1C,cAAcuJ,KAAK32C,SAAW+2C,KAAK3+C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxEi1C,MAAMtzC,eAAeiG,QAAU62C,KAAKxJ,MAAMrtC,SAC/B,gBAAXA,OAA2B,IAAI42C,IAAIjP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASkP,KAAKp9C,GACZ,OAAO,IAAIm9C,IAAIn9C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAASq9C,KAAKh+C,EAAGk+C,EAAG3zC,EAAGjJ,GAErB,OADIA,GAAK,IAAGtB,EAAIk+C,EAAI3zC,EAAIskC,KACjB,IAAIiP,IAAI99C,EAAGk+C,EAAG3zC,EAAGjJ,GAGnB,SAAS68C,WAAWx+C,GAEzB,OADMA,aAAag0C,QAAQh0C,EAAIi+C,YAAMj+C,IAChCA,EAEE,IAAIm+C,KADXn+C,EAAIA,EAAEy+C,OACWp+C,EAAGL,EAAEu+C,EAAGv+C,EAAE4K,EAAG5K,EAAE0+C,SAFjB,IAAIP,IAKd,SAASM,UAAIp+C,EAAGk+C,EAAG3zC,EAAG8zC,SAC3B,OAA4B,IAArB9xC,UAAU1D,OAAes1C,WAAWn+C,GAAK,IAAI89C,IAAI99C,EAAGk+C,EAAG3zC,EAAc,MAAX8zC,QAAkB,EAAIA,SAGlF,SAASP,IAAI99C,EAAGk+C,EAAG3zC,EAAG8zC,SAC3Bl3C,KAAKnH,GAAKA,EACVmH,KAAK+2C,GAAKA,EACV/2C,KAAKoD,GAAKA,EACVpD,KAAKk3C,SAAWA,QAkClB,SAASC,KAAIn+C,OAEX,QADAA,MAAQ6K,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxR,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAMsJ,SAAS,IAGlD,SAASw0C,KAAK7qB,EAAGjyB,EAAGhC,EAAGmC,GAIrB,OAHIA,GAAK,EAAG8xB,EAAIjyB,EAAIhC,EAAI0vC,IACf1vC,GAAK,GAAKA,GAAK,EAAGi0B,EAAIjyB,EAAI0tC,IAC1B1tC,GAAK,IAAGiyB,EAAIyb,KACd,IAAI0P,IAAInrB,EAAGjyB,EAAGhC,EAAGmC,GA6BnB,SAASk9C,IAAIprB,EAAGjyB,EAAGhC,EAAGk/C,SAC3B,OAA4B,IAArB9xC,UAAU1D,OA3BZ,SAAS41C,WAAW9+C,GACzB,GAAIA,aAAa4+C,IAAK,OAAO,IAAIA,IAAI5+C,EAAEyzB,EAAGzzB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE0+C,SAEtD,GADM1+C,aAAag0C,QAAQh0C,EAAIi+C,YAAMj+C,KAChCA,EAAG,OAAO,IAAI4+C,IACnB,GAAI5+C,aAAa4+C,IAAK,OAAO5+C,EAE7B,IAAIK,GADJL,EAAIA,EAAEy+C,OACIp+C,EAAI,IACVk+C,EAAIv+C,EAAEu+C,EAAI,IACV3zC,EAAI5K,EAAE4K,EAAI,IACVsR,IAAM7Q,KAAK6Q,IAAI7b,EAAGk+C,EAAG3zC,GACrBuR,IAAM9Q,KAAK8Q,IAAI9b,EAAGk+C,EAAG3zC,GACrB6oB,EAAIyb,IACJ1tC,EAAI2a,IAAMD,IACV1c,GAAK2c,IAAMD,KAAO,EAUtB,OATI1a,GACaiyB,EAAXpzB,IAAM8b,KAAUoiC,EAAI3zC,GAAKpJ,EAAc,GAAT+8C,EAAI3zC,GAC7B2zC,IAAMpiC,KAAUvR,EAAIvK,GAAKmB,EAAI,GAC5BnB,EAAIk+C,GAAK/8C,EAAI,EACvBA,GAAKhC,EAAI,GAAM2c,IAAMD,IAAM,EAAIC,IAAMD,IACrCuX,GAAK,IAELjyB,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAIi0B,EAEpB,IAAImrB,IAAInrB,EAAGjyB,EAAGhC,EAAGQ,EAAE0+C,SAIMI,CAAWrrB,GAAK,IAAImrB,IAAInrB,EAAGjyB,EAAGhC,EAAc,MAAXk/C,QAAkB,EAAIA,SAGzF,SAASE,IAAInrB,EAAGjyB,EAAGhC,EAAGk/C,SACpBl3C,KAAKisB,GAAKA,EACVjsB,KAAKhG,GAAKA,EACVgG,KAAKhI,GAAKA,EACVgI,KAAKk3C,SAAWA,QAiClB,SAASK,QAAQtrB,EAAGurB,GAAIC,IACtB,OAGY,KAHJxrB,EAAI,GAAKurB,IAAMC,GAAKD,IAAMvrB,EAAI,GAChCA,EAAI,IAAMwrB,GACVxrB,EAAI,IAAMurB,IAAMC,GAAKD,KAAO,IAAMvrB,GAAK,GACvCurB,IAzKR//C,OAAO+0C,MAAOiK,aACZiB,YAAa,SAAAA,cACX,OAAO13C,KAAKi3C,MAAMS,eAEpBP,IAAK,SAAAA,MACH,OAAOn3C,KAAKi3C,MAAME,OAEpB70C,SAAU,SAAAA,WACR,OAAOtC,KAAKi3C,MAAQ,MA+CxBx/C,OAAOk/C,IAAKM,UAAK3K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NW9mC,KAAKiR,IA9Nd,EADF,GA+N8B61B,GACvC,IAAIgM,IAAI32C,KAAKnH,EAAI8xC,EAAG3qC,KAAK+2C,EAAIpM,EAAG3qC,KAAKoD,EAAIunC,EAAG3qC,KAAKk3C,UAE1DU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOS9mC,KAAKiR,IAnOd,GAmO0B61B,GACnC,IAAIgM,IAAI32C,KAAKnH,EAAI8xC,EAAG3qC,KAAK+2C,EAAIpM,EAAG3qC,KAAKoD,EAAIunC,EAAG3qC,KAAKk3C,UAE1DD,IAAK,SAAAA,MACH,OAAOj3C,MAET03C,YAAa,SAAAA,cACX,OAAQ,GAAK13C,KAAKnH,GAAKmH,KAAKnH,GAAK,KACzB,GAAKmH,KAAK+2C,GAAK/2C,KAAK+2C,GAAK,KACzB,GAAK/2C,KAAKoD,GAAKpD,KAAKoD,GAAK,KACzB,GAAKpD,KAAKk3C,SAAWl3C,KAAKk3C,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAIn3C,KAAKnH,GAAKs+C,KAAIn3C,KAAK+2C,GAAKI,KAAIn3C,KAAKoD,IAEpDd,SAAU,SAAAA,WACR,IAAInI,EAAI6F,KAAKk3C,QACb,OAAc,KADQ/8C,EAAIoa,MAAMpa,GAAK,EAAI0J,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAGva,KAC/C,OAAS,SACrB0J,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAKnH,IAAM,IAAM,KACtDgL,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAK+2C,IAAM,IAAM,KACtDlzC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAKoD,IAAM,KACzC,IAANjJ,EAAU,IAAM,KAAOA,EAAI,SAqDtC1C,OAAO2/C,IAAKC,IAAK/K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SW9mC,KAAKiR,IA9Sd,EADF,GA+S8B61B,GACvC,IAAIyM,IAAIp3C,KAAKisB,EAAGjsB,KAAKhG,EAAGgG,KAAKhI,EAAI2yC,EAAG3qC,KAAKk3C,UAElDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTS9mC,KAAKiR,IAnTd,GAmT0B61B,GACnC,IAAIyM,IAAIp3C,KAAKisB,EAAGjsB,KAAKhG,EAAGgG,KAAKhI,EAAI2yC,EAAG3qC,KAAKk3C,UAElDD,IAAK,SAAAA,MACH,IAAIhrB,EAAIjsB,KAAKisB,EAAI,IAAqB,KAAdjsB,KAAKisB,EAAI,GAC7BjyB,EAAIua,MAAM0X,IAAM1X,MAAMvU,KAAKhG,GAAK,EAAIgG,KAAKhG,EACzChC,EAAIgI,KAAKhI,EACTy/C,GAAKz/C,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjCw9C,GAAK,EAAIx/C,EAAIy/C,GACjB,OAAO,IAAId,IACTY,QAAQtrB,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKurB,GAAIC,IAC1CF,QAAQtrB,EAAGurB,GAAIC,IACfF,QAAQtrB,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKurB,GAAIC,IACzCz3C,KAAKk3C,UAGTQ,YAAa,SAAAA,cACX,OAAQ,GAAK13C,KAAKhG,GAAKgG,KAAKhG,GAAK,GAAKua,MAAMvU,KAAKhG,KACzC,GAAKgG,KAAKhI,GAAKgI,KAAKhI,GAAK,GACzB,GAAKgI,KAAKk3C,SAAWl3C,KAAKk3C,SAAW,MC1U1C,IAAIW,QAAUh0C,KAAKi0C,GAAK,IACpBC,QAAU,IAAMl0C,KAAKi0C,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAW//C,GAClB,GAAIA,aAAaggD,IAAK,OAAO,IAAIA,IAAIhgD,EAAER,EAAGQ,EAAE2B,EAAG3B,EAAE4K,EAAG5K,EAAE0+C,SACtD,GAAI1+C,aAAaigD,IAAK,CACpB,GAAIlkC,MAAM/b,EAAEyzB,GAAI,OAAO,IAAIusB,IAAIhgD,EAAER,EAAG,EAAG,EAAGQ,EAAE0+C,SAC5C,IAAIjrB,EAAIzzB,EAAEyzB,EAAI4rB,QACd,OAAO,IAAIW,IAAIhgD,EAAER,EAAG6L,KAAK60C,IAAIzsB,GAAKzzB,EAAEJ,EAAGyL,KAAK80C,IAAI1sB,GAAKzzB,EAAEJ,EAAGI,EAAE0+C,SAExD1+C,aAAam+C,MAAMn+C,EAAIw+C,WAAWx+C,IACxC,IAGuEi+B,EAAGmiB,EAHtE//C,EAAIggD,SAASrgD,EAAEK,GACfk+C,EAAI8B,SAASrgD,EAAEu+C,GACf3zC,EAAIy1C,SAASrgD,EAAE4K,GACfI,EAAIs1C,SAAS,SAAYjgD,EAAI,SAAYk+C,EAAI,SAAY3zC,GAAK60C,IAKlE,OAJIp/C,IAAMk+C,GAAKA,IAAM3zC,EAAGqzB,EAAImiB,EAAIp1C,GAC9BizB,EAAIqiB,SAAS,SAAYjgD,EAAI,SAAYk+C,EAAI,SAAY3zC,GAAK40C,IAC9DY,EAAIE,SAAS,SAAYjgD,EAAI,SAAYk+C,EAAI,SAAY3zC,GAAK80C,KAEzD,IAAIM,IAAI,IAAMh1C,EAAI,GAAI,KAAOizB,EAAIjzB,GAAI,KAAOA,EAAIo1C,GAAIpgD,EAAE0+C,SAOhD,SAAS6B,IAAI/gD,EAAGmC,EAAGiJ,EAAG8zC,SACnC,OAA4B,IAArB9xC,UAAU1D,OAAe62C,WAAWvgD,GAAK,IAAIwgD,IAAIxgD,EAAGmC,EAAGiJ,EAAc,MAAX8zC,QAAkB,EAAIA,SAGlF,SAASsB,IAAIxgD,EAAGmC,EAAGiJ,EAAG8zC,SAC3Bl3C,KAAKhI,GAAKA,EACVgI,KAAK7F,GAAKA,EACV6F,KAAKoD,GAAKA,EACVpD,KAAKk3C,SAAWA,QA0BlB,SAAS4B,QAAQ7/C,GACf,OAAOA,EAAIq/C,GAAKz0C,KAAKiR,IAAI7b,EAAG,EAAI,GAAKA,EAAIo/C,GAAKF,OAGhD,SAASa,QAAQ//C,GACf,OAAOA,EAAIm/C,OAAKn/C,EAAIA,EAAIA,EAAIo/C,IAAMp/C,EAAIk/C,QAGxC,SAASc,SAASxiB,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQ5yB,KAAKiR,IAAI2hB,EAAG,EAAI,KAAO,MAG5E,SAASoiB,SAASpiB,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQ5yB,KAAKiR,KAAK2hB,EAAI,MAAS,MAAO,KAG3E,SAASyiB,WAAW1gD,GAClB,GAAIA,aAAaigD,IAAK,OAAO,IAAIA,IAAIjgD,EAAEyzB,EAAGzzB,EAAEJ,EAAGI,EAAER,EAAGQ,EAAE0+C,SAEtD,GADM1+C,aAAaggD,MAAMhgD,EAAI+/C,WAAW//C,IAC5B,IAARA,EAAE2B,GAAmB,IAAR3B,EAAE4K,EAAS,OAAO,IAAIq1C,IAAI/Q,IAAK,EAAGlvC,EAAER,EAAGQ,EAAE0+C,SAC1D,IAAIjrB,EAAIpoB,KAAKs1C,MAAM3gD,EAAE4K,EAAG5K,EAAE2B,GAAK49C,QAC/B,OAAO,IAAIU,IAAIxsB,EAAI,EAAIA,EAAI,IAAMA,EAAGpoB,KAAK+Q,KAAKpc,EAAE2B,EAAI3B,EAAE2B,EAAI3B,EAAE4K,EAAI5K,EAAE4K,GAAI5K,EAAER,EAAGQ,EAAE0+C,SAOxE,SAASkC,IAAIntB,EAAG7zB,EAAGJ,EAAGk/C,SAC3B,OAA4B,IAArB9xC,UAAU1D,OAAew3C,WAAWjtB,GAAK,IAAIwsB,IAAIxsB,EAAG7zB,EAAGJ,EAAc,MAAXk/C,QAAkB,EAAIA,SAGlF,SAASuB,IAAIxsB,EAAG7zB,EAAGJ,EAAGk/C,SAC3Bl3C,KAAKisB,GAAKA,EACVjsB,KAAK5H,GAAKA,EACV4H,KAAKhI,GAAKA,EACVgI,KAAKk3C,SAAWA,QA3DlBz/C,OAAO+gD,IAAKO,IAAKzM,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI6N,IAAIx4C,KAAKhI,EA7ChB,IA6C8B,MAAL2yC,EAAY,EAAIA,GAAI3qC,KAAK7F,EAAG6F,KAAKoD,EAAGpD,KAAKk3C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI6N,IAAIx4C,KAAKhI,EAhDhB,IAgD8B,MAAL2yC,EAAY,EAAIA,GAAI3qC,KAAK7F,EAAG6F,KAAKoD,EAAGpD,KAAKk3C,UAExED,IAAK,SAAAA,MACH,IAAIzzC,GAAKxD,KAAKhI,EAAI,IAAM,IACpBy+B,EAAIliB,MAAMvU,KAAK7F,GAAKqJ,EAAIA,EAAIxD,KAAK7F,EAAI,IACrCy+C,EAAIrkC,MAAMvU,KAAKoD,GAAKI,EAAIA,EAAIxD,KAAKoD,EAAI,IAIzC,OAAO,IAAIuzC,IACTsC,SAAU,WAJZxiB,EAAIuhB,GAAKgB,QAAQviB,IAIW,WAH5BjzB,EAAIy0C,GAAKe,QAAQx1C,IAG2B,UAF5Co1C,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAYxiB,EAAI,UAAYjzB,EAAI,QAAYo1C,GACtDK,SAAU,SAAYxiB,EAAI,SAAYjzB,EAAI,UAAYo1C,GACtD54C,KAAKk3C,aA4CXz/C,OAAOghD,IAAKW,IAAK9M,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI8N,IAAIz4C,KAAKisB,EAAGjsB,KAAK5H,EAAG4H,KAAKhI,EA3GhC,IA2G8C,MAAL2yC,EAAY,EAAIA,GAAI3qC,KAAKk3C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI8N,IAAIz4C,KAAKisB,EAAGjsB,KAAK5H,EAAG4H,KAAKhI,EA9GhC,IA8G8C,MAAL2yC,EAAY,EAAIA,GAAI3qC,KAAKk3C,UAExED,IAAK,SAAAA,MACH,OAAOsB,WAAWv4C,MAAMi3C,UClH5B,IAAI/zC,GAAK,OACLK,EAAI,QACJiK,GAAK,OACL6rC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAI/1C,EACTk2C,MAAQl2C,EAAIiK,EAAI6rC,YAAIn2C,EAgBT,SAASw2C,oBAAUztB,EAAGjyB,EAAGhC,EAAGk/C,SACzC,OAA4B,IAArB9xC,UAAU1D,OAfnB,SAASi4C,iBAAiBnhD,GACxB,GAAIA,aAAaohD,UAAW,OAAO,IAAIA,UAAUphD,EAAEyzB,EAAGzzB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE0+C,SAC5D1+C,aAAam+C,MAAMn+C,EAAIw+C,WAAWx+C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACVk+C,EAAIv+C,EAAEu+C,EAAI,IACV3zC,EAAI5K,EAAE4K,EAAI,IACVpL,GAAKyhD,MAAQr2C,EAAIm2C,GAAK1gD,EAAI2gD,GAAKzC,IAAM0C,MAAQF,GAAKC,IAClDK,GAAKz2C,EAAIpL,EACT2yC,GAAK2O,GAAKvC,EAAI/+C,GAAKwV,EAAIqsC,IAAMR,YAC7Br/C,EAAI6J,KAAK+Q,KAAK+1B,EAAIA,EAAIkP,GAAKA,KAAOP,EAAIthD,GAAK,EAAIA,IAC/Ci0B,EAAIjyB,EAAI6J,KAAKs1C,MAAMxO,EAAGkP,IAAM9B,QAAU,IAAMrQ,IAChD,OAAO,IAAIkS,UAAU3tB,EAAI,EAAIA,EAAI,IAAMA,EAAGjyB,EAAGhC,EAAGQ,EAAE0+C,SAIlByC,CAAiB1tB,GAAK,IAAI2tB,UAAU3tB,EAAGjyB,EAAGhC,EAAc,MAAXk/C,QAAkB,EAAIA,SAG9F,SAAS0C,UAAU3tB,EAAGjyB,EAAGhC,EAAGk/C,SACjCl3C,KAAKisB,GAAKA,EACVjsB,KAAKhG,GAAKA,EACVgG,KAAKhI,GAAKA,EACVgI,KAAKk3C,SAAWA,QCnCX,SAAS4C,MAAM1B,GAAI2B,GAAIC,GAAIC,GAAIC,IACpC,IAAI7B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAMyB,IAC9B,EAAI,EAAI1B,GAAK,EAAIC,IAAM0B,IACvB,EAAI,EAAI5B,GAAK,EAAIC,GAAK,EAAIC,IAAM2B,GACjC3B,GAAK4B,IAAM,EDiCnBziD,OAAOmiD,UAAWF,oBAAWpN,OAAOE,OAClCmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCW9mC,KAAKiR,IHnCd,EADF,GGoC8B61B,GACvC,IAAIiP,UAAU55C,KAAKisB,EAAGjsB,KAAKhG,EAAGgG,KAAKhI,EAAI2yC,EAAG3qC,KAAKk3C,UAExDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCS9mC,KAAKiR,IHxCd,GGwC0B61B,GACnC,IAAIiP,UAAU55C,KAAKisB,EAAGjsB,KAAKhG,EAAGgG,KAAKhI,EAAI2yC,EAAG3qC,KAAKk3C,UAExDD,IAAK,SAAAA,MACH,IAAIhrB,EAAI1X,MAAMvU,KAAKisB,GAAK,GAAKjsB,KAAKisB,EAAI,KAAO4rB,QACzC7/C,GAAKgI,KAAKhI,EACVmC,EAAIoa,MAAMvU,KAAKhG,GAAK,EAAIgG,KAAKhG,EAAIhC,GAAK,EAAIA,GAC1CmiD,KAAOt2C,KAAK60C,IAAIzsB,GAChBmuB,KAAOv2C,KAAK80C,IAAI1sB,GACpB,OAAO,IAAI0qB,IACT,KAAO3+C,EAAImC,GAAK+I,EAAIi3C,KAAO52C,EAAI62C,OAC/B,KAAOpiD,EAAImC,GAAKqT,EAAI2sC,KAAOd,YAAIe,OAC/B,KAAOpiD,EAAImC,GAAKm/C,EAAIa,OACpBn6C,KAAKk3C,aCjDI,ICRAmD,aAAA,SAAS5jB,GACtB,OAAO,WACL,OAAOA,ICAX,SAAS6jB,OAAOngD,EAAG9B,GACjB,OAAO,SAASY,GACd,OAAOkB,EAAIlB,EAAIZ,GAUZ,SAASkiD,UAAIpgD,EAAGiJ,GACrB,IAAI/K,EAAI+K,EAAIjJ,EACZ,OAAO9B,EAAIiiD,OAAOngD,EAAG9B,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAMwL,KAAK2G,MAAMnS,EAAI,KAAOA,GAAKmiD,aAASjmC,MAAMpa,GAAKiJ,EAAIjJ,GAGnG,SAASsgD,MAAMj3C,GACpB,OAAoB,IAAZA,GAAKA,GAAWk3C,QAAU,SAASvgD,EAAGiJ,GAC5C,OAAOA,EAAIjJ,EAbf,SAASwgD,YAAYxgD,EAAGiJ,EAAGI,GACzB,OAAOrJ,EAAI0J,KAAKiR,IAAI3a,EAAGqJ,GAAIJ,EAAIS,KAAKiR,IAAI1R,EAAGI,GAAKrJ,EAAGqJ,EAAI,EAAIA,EAAG,SAASvK,GACrE,OAAO4K,KAAKiR,IAAI3a,EAAIlB,EAAImK,EAAGI,IAWZm3C,CAAYxgD,EAAGiJ,EAAGI,GAAKg3C,aAASjmC,MAAMpa,GAAKiJ,EAAIjJ,IAInD,SAASugD,QAAQvgD,EAAGiJ,GACjC,IAAI/K,EAAI+K,EAAIjJ,EACZ,OAAO9B,EAAIiiD,OAAOngD,EAAG9B,GAAKmiD,aAASjmC,MAAMpa,GAAKiJ,EAAIjJ,GCtBrC,IAAAygD,QAAA,SAAUC,SAASr3C,GAChC,IAAIizC,MAAQgE,MAAMj3C,GAElB,SAASyzC,IAAIx5C,MAAOgP,KAClB,IAAI5T,EAAI49C,OAAOh5C,MAAQq9C,UAASr9C,QAAQ5E,GAAI4T,IAAMquC,UAASruC,MAAM5T,GAC7Dk+C,EAAIN,MAAMh5C,MAAMs5C,EAAGtqC,IAAIsqC,GACvB3zC,EAAIqzC,MAAMh5C,MAAM2F,EAAGqJ,IAAIrJ,GACvB8zC,QAAUwD,QAAQj9C,MAAMy5C,QAASzqC,IAAIyqC,SACzC,OAAO,SAASj+C,GAKd,OAJAwE,MAAM5E,EAAIA,EAAEI,GACZwE,MAAMs5C,EAAIA,EAAE99C,GACZwE,MAAM2F,EAAIA,EAAEnK,GACZwE,MAAMy5C,QAAUA,QAAQj+C,GACjBwE,MAAQ,IAMnB,OAFAw5C,IAAIwD,MAAQI,SAEL5D,IAnBM,CAoBZ,GAEH,SAAS8D,UAAUC,QACjB,OAAO,SAASC,QACd,IAIIljD,EAAG0+C,MAJHj9C,EAAIyhD,OAAOv5C,OACX7I,EAAI,IAAIgQ,MAAMrP,GACdu9C,EAAI,IAAIluC,MAAMrP,GACd4J,EAAI,IAAIyF,MAAMrP,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnB0+C,MAAQqE,UAASG,OAAOljD,IACxBc,EAAEd,GAAK0+C,MAAM59C,GAAK,EAClBk+C,EAAEh/C,GAAK0+C,MAAMM,GAAK,EAClB3zC,EAAErL,GAAK0+C,MAAMrzC,GAAK,EAMpB,OAJAvK,EAAImiD,OAAOniD,GACXk+C,EAAIiE,OAAOjE,GACX3zC,EAAI43C,OAAO53C,GACXqzC,MAAMS,QAAU,EACT,SAASj+C,GAId,OAHAw9C,MAAM59C,EAAIA,EAAEI,GACZw9C,MAAMM,EAAIA,EAAE99C,GACZw9C,MAAMrzC,EAAIA,EAAEnK,GACLw9C,MAAQ,KAKd,IAAIyE,SAAWH,UH7CP,SAAS33B,QACtB,IAAI5pB,EAAI4pB,OAAO1hB,OAAS,EACxB,OAAO,SAASzI,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAKqK,KAAK8N,MAAM1Y,EAAIO,GAChEwgD,GAAK52B,OAAOrrB,GACZkiD,GAAK72B,OAAOrrB,EAAI,GAChBgiD,GAAKhiD,EAAI,EAAIqrB,OAAOrrB,EAAI,GAAK,EAAIiiD,GAAKC,GACtCC,GAAKniD,EAAIyB,EAAI,EAAI4pB,OAAOrrB,EAAI,GAAK,EAAIkiD,GAAKD,GAC9C,OAAOF,OAAO7gD,EAAIlB,EAAIyB,GAAKA,EAAGugD,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAAS33B,QACtB,IAAI5pB,EAAI4pB,OAAO1hB,OACf,OAAO,SAASzI,GACd,IAAIlB,EAAI8L,KAAK8N,QAAQ1Y,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1CugD,GAAK32B,QAAQrrB,EAAIyB,EAAI,GAAKA,GAC1BwgD,GAAK52B,OAAOrrB,EAAIyB,GAChBygD,GAAK72B,QAAQrrB,EAAI,GAAKyB,GACtB0gD,GAAK92B,QAAQrrB,EAAI,GAAKyB,GAC1B,OAAOsgD,OAAO7gD,EAAIlB,EAAIyB,GAAKA,EAAGugD,GAAIC,GAAIC,GAAIC,ODV/B,SAAS//C,EAAGiJ,GACzB,OAAeA,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOkB,EAAIiJ,EAAInK,wREAJ,ICAXmiD,IAAM,8CACNC,IAAM,IAAIl7C,OAAOi7C,IAAIx2B,OAAQ,KAclB,IAAA02B,WAAA,SAASnhD,EAAGiJ,GACzB,IACIm4C,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrC5jD,GAAK,EACLiC,KACA4hD,KAMJ,IAHAzhD,GAAQ,GAAIiJ,GAAQ,IAGZm4C,GAAKH,IAAI1E,KAAKv8C,MACdqhD,GAAKH,IAAI3E,KAAKtzC,MACfq4C,GAAKD,GAAGv5C,OAASy5C,KACpBD,GAAKr4C,EAAEiY,MAAMqgC,GAAID,IACbzhD,EAAEjC,GAAIiC,EAAEjC,IAAM0jD,GACbzhD,IAAIjC,GAAK0jD,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxBxhD,EAAEjC,GAAIiC,EAAEjC,IAAMyjD,GACbxhD,IAAIjC,GAAKyjD,IAEdxhD,IAAIjC,GAAK,KACT6jD,EAAE11C,MAAMnO,EAAGA,EAAG0+B,EAAGyR,WAAOqT,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAKt4C,EAAE1B,SACT+5C,GAAKr4C,EAAEiY,MAAMqgC,IACT1hD,EAAEjC,GAAIiC,EAAEjC,IAAM0jD,GACbzhD,IAAIjC,GAAK0jD,IAKTzhD,EAAE0H,OAAS,EAAKk6C,EAAE,GA7C3B,SAASC,IAAIz4C,GACX,OAAO,SAASnK,GACd,OAAOmK,EAAEnK,GAAK,IA4CV4iD,CAAID,EAAE,GAAGnlB,GApDjB,SAASqlB,YAAK14C,GACZ,OAAO,WACL,OAAOA,GAmDH04C,CAAK14C,IACJA,EAAIw4C,EAAEl6C,OAAQ,SAASzI,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAIqL,IAAKrL,EAAGiC,GAAGxB,EAAIojD,EAAE7jD,IAAIA,GAAKS,EAAEi+B,EAAEx9B,GACrD,OAAOe,EAAE+I,KAAK,oSCpDT,ICPXg5C,QACAC,QACAC,QACAC,QDIWpwC,UAAA,SAAS3R,EAAGiJ,GACzB,IAAkBhL,EAAda,EAAIkjD,aAAO/4C,GACf,OAAY,MAALA,GAAmB,YAANnK,EAAkBuhD,aAASp3C,IAClC,WAANnK,EAAiBivC,WACZ,WAANjvC,GAAmBb,EAAIq+C,YAAMrzC,KAAOA,EAAIhL,EAAG6+C,SAAOmF,WAClDh5C,aAAaqzC,YAAQQ,QACrB7zC,aAAaxD,KEfN,SAASzF,EAAGiJ,GACzB,IAAI/K,EAAI,IAAIuH,KACZ,OAAewD,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOZ,EAAEgkD,QAAQliD,EAAIiJ,EAAInK,GAAIZ,IFazBwQ,MAAMuB,QAAQhH,GGdP,SAASjJ,EAAGiJ,GACzB,IAIIrL,EAJAukD,GAAKl5C,EAAIA,EAAE1B,OAAS,EACpB66C,GAAKpiD,EAAI0J,KAAK6Q,IAAI4nC,GAAIniD,EAAEuH,QAAU,EAClC+0B,EAAI,IAAI5tB,MAAM0zC,IACdnkD,EAAI,IAAIyQ,MAAMyzC,IAGlB,IAAKvkD,EAAI,EAAGA,EAAIwkD,KAAMxkD,EAAG0+B,EAAE1+B,GAAKiB,UAAMmB,EAAEpC,GAAIqL,EAAErL,IAC9C,KAAOA,EAAIukD,KAAMvkD,EAAGK,EAAEL,GAAKqL,EAAErL,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAIwkD,KAAMxkD,EAAGK,EAAEL,GAAK0+B,EAAE1+B,GAAGkB,GACrC,OAAOb,IHGkB,mBAAdgL,EAAEo5C,SAAgD,mBAAfp5C,EAAEd,UAA2BiS,MAAMnR,GFftE,SAASjJ,EAAGiJ,GACzB,IAEIunC,EAFA5yC,KACAK,KAMJ,IAAKuyC,KAHK,OAANxwC,GAA2B,WAAbD,QAAOC,KAAgBA,MAC/B,OAANiJ,GAA2B,WAAblJ,QAAOkJ,KAAgBA,MAE/BA,EACJunC,KAAKxwC,EACPpC,EAAE4yC,GAAK3xC,UAAMmB,EAAEwwC,GAAIvnC,EAAEunC,IAErBvyC,EAAEuyC,GAAKvnC,EAAEunC,GAIb,OAAO,SAAS1xC,GACd,IAAK0xC,KAAK5yC,EAAGK,EAAEuyC,GAAK5yC,EAAE4yC,GAAG1xC,GACzB,OAAOb,IEFH8vC,YAAQ/tC,EAAGiJ,IIlBJq5C,UAAA,SAAStiD,EAAGiJ,GACzB,OAAeA,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAO4K,KAAK2G,MAAMrQ,EAAIiJ,EAAInK,KCF1ByjD,QAAU,IAAM74C,KAAKi0C,GAEdvS,oBACToX,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAAS9iD,EAAGiJ,EAAGhL,EAAGC,EAAG4B,EAAG8gB,GACrC,IAAIgiC,OAAQC,OAAQF,MAKpB,OAJIC,OAASl5C,KAAK+Q,KAAKza,EAAIA,EAAIiJ,EAAIA,MAAIjJ,GAAK4iD,OAAQ35C,GAAK25C,SACrDD,MAAQ3iD,EAAI/B,EAAIgL,EAAI/K,KAAGD,GAAK+B,EAAI2iD,MAAOzkD,GAAK+K,EAAI05C,QAChDE,OAASn5C,KAAK+Q,KAAKxc,EAAIA,EAAIC,EAAIA,MAAID,GAAK4kD,OAAQ3kD,GAAK2kD,OAAQF,OAASE,QACtE7iD,EAAI9B,EAAI+K,EAAIhL,IAAG+B,GAAKA,EAAGiJ,GAAKA,EAAG05C,OAASA,MAAOC,QAAUA,SAE3DJ,WAAY1iD,EACZ2iD,WAAY7hC,EACZ8hC,OAAQh5C,KAAKs1C,MAAM/1C,EAAGjJ,GAAKuiD,QAC3BI,MAAOj5C,KAAKq5C,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqB12C,MAAO22C,QAASC,QAASC,UAErD,SAASr0B,IAAIjvB,GACX,OAAOA,EAAE0H,OAAS1H,EAAEivB,MAAQ,IAAM,GAsCpC,OAAO,SAAS9uB,EAAGiJ,GACjB,IAAIpJ,KACA4hD,KAOJ,OANAzhD,EAAIsM,MAAMtM,GAAIiJ,EAAIqD,MAAMrD,GAtC1B,SAASm6C,UAAUC,GAAIC,GAAIC,GAAIC,GAAI3jD,EAAG4hD,GACpC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI5lD,EAAIiC,EAAEkM,KAAK,aAAc,KAAMk3C,QAAS,KAAMC,SAClDzB,EAAE11C,MAAMnO,EAAGA,EAAI,EAAG0+B,EAAGyR,WAAOsV,GAAIE,MAAO3lD,EAAGA,EAAI,EAAG0+B,EAAGyR,WAAOuV,GAAIE,WACtDD,IAAMC,KACf3jD,EAAEkM,KAAK,aAAew3C,GAAKN,QAAUO,GAAKN,SAkC5CE,CAAUpjD,EAAEwiD,WAAYxiD,EAAEyiD,WAAYx5C,EAAEu5C,WAAYv5C,EAAEw5C,WAAY5iD,EAAG4hD,GA9BvE,SAASiB,OAAO1iD,EAAGiJ,EAAGpJ,EAAG4hD,GACnBzhD,IAAMiJ,GACJjJ,EAAIiJ,EAAI,IAAKA,GAAK,IAAcA,EAAIjJ,EAAI,MAAKA,GAAK,KACtDyhD,EAAE11C,MAAMnO,EAAGiC,EAAEkM,KAAK+iB,IAAIjvB,GAAK,UAAW,KAAMsjD,UAAY,EAAG7mB,EAAGyR,WAAO/tC,EAAGiJ,MAC/DA,GACTpJ,EAAEkM,KAAK+iB,IAAIjvB,GAAK,UAAYoJ,EAAIk6C,UA0BlCT,CAAO1iD,EAAE0iD,OAAQz5C,EAAEy5C,OAAQ7iD,EAAG4hD,GAtBhC,SAASkB,MAAM3iD,EAAGiJ,EAAGpJ,EAAG4hD,GAClBzhD,IAAMiJ,EACRw4C,EAAE11C,MAAMnO,EAAGiC,EAAEkM,KAAK+iB,IAAIjvB,GAAK,SAAU,KAAMsjD,UAAY,EAAG7mB,EAAGyR,WAAO/tC,EAAGiJ,KAC9DA,GACTpJ,EAAEkM,KAAK+iB,IAAIjvB,GAAK,SAAWoJ,EAAIk6C,UAmBjCR,CAAM3iD,EAAE2iD,MAAO15C,EAAE05C,MAAO9iD,EAAG4hD,GAf7B,SAAS5Q,MAAMwS,GAAIC,GAAIC,GAAIC,GAAI3jD,EAAG4hD,GAChC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI5lD,EAAIiC,EAAEkM,KAAK+iB,IAAIjvB,GAAK,SAAU,KAAM,IAAK,KAAM,KACnD4hD,EAAE11C,MAAMnO,EAAGA,EAAI,EAAG0+B,EAAGyR,WAAOsV,GAAIE,MAAO3lD,EAAGA,EAAI,EAAG0+B,EAAGyR,WAAOuV,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrB3jD,EAAEkM,KAAK+iB,IAAIjvB,GAAK,SAAW0jD,GAAK,IAAMC,GAAK,KAW7C3S,CAAM7wC,EAAE4iD,OAAQ5iD,EAAE6iD,OAAQ55C,EAAE25C,OAAQ35C,EAAE45C,OAAQhjD,EAAG4hD,GACjDzhD,EAAIiJ,EAAI,KACD,SAASnK,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAIoiD,EAAEl6C,SACT3J,EAAIyB,GAAGQ,GAAGxB,EAAIojD,EAAE7jD,IAAIA,GAAKS,EAAEi+B,EAAEx9B,GACtC,OAAOe,EAAE+I,KAAK,MAKb,IAAI66C,wBAA0BT,qBLtD9B,SAASU,SAAS7kD,OACvB,MAAc,SAAVA,MAAyBusC,oBACxBwW,UAASA,QAAUrrB,SAASqJ,cAAc,OAAQiiB,QAAUtrB,SAASotB,gBAAiB7B,QAAUvrB,SAASqtB,aAC9GhC,QAAQ3pB,MAAM4rB,UAAYhlD,MAC1BA,MAAQijD,QAAQgC,iBAAiBjC,QAAQ5f,YAAY2f,SAAU,MAAMmC,iBAAiB,aACtFlC,QAAQ10B,YAAYy0B,SACpB/iD,MAAQA,MAAMqiB,MAAM,GAAI,GAAG/O,MAAM,KAC1B2wC,WAAWjkD,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxEmlD,wBAA0BhB,qBL7C9B,SAASiB,SAASplD,OACvB,OAAa,MAATA,MAAsBusC,oBACrB2W,UAASA,QAAUxrB,SAASmW,gBAAgB,6BAA8B,MAC/EqV,QAAQ7f,aAAa,YAAarjC,QAC5BA,MAAQkjD,QAAQ8B,UAAUK,QAAQC,gBACxCtlD,MAAQA,MAAMulD,OACPtB,UAAUjkD,MAAMmB,EAAGnB,MAAMoK,EAAGpK,MAAMZ,EAAGY,MAAMX,EAAGW,MAAMiB,EAAGjB,MAAM+hB,IAFLwqB,qBKyCG,KAAM,IAAK,KC9DrE1hC,KAAK26C,MCGf,SAASnH,QAAIkD,KACX,OAAO,SAAS98C,MAAOgP,KACrB,IAAIwf,EAAIsuB,KAAK98C,MAAQghD,IAAShhD,QAAQwuB,GAAIxf,IAAMgyC,IAAShyC,MAAMwf,GAC3DjyB,EAAIy8C,QAAMh5C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAIy+C,QAAMh5C,MAAMzF,EAAGyU,IAAIzU,GACvBk/C,QAAUT,QAAMh5C,MAAMy5C,QAASzqC,IAAIyqC,SACvC,OAAO,SAASj+C,GAKd,OAJAwE,MAAMwuB,EAAIA,EAAEhzB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMy5C,QAAUA,QAAQj+C,GACjBwE,MAAQ,KAKN45C,QAAIkD,WAAJlD,IACJqH,QAAUrH,QAAIZ,SCjBzB,SAAS2C,QAAImB,KACX,OAAO,SAAS98C,MAAOgP,KACrB,IAAIwf,EAAIsuB,KAAK98C,MAAQkhD,IAASlhD,QAAQwuB,GAAIxf,IAAMkyC,IAASlyC,MAAMwf,GAC3D7zB,EAAIq+C,QAAMh5C,MAAMrF,EAAGqU,IAAIrU,GACvBJ,EAAIy+C,QAAMh5C,MAAMzF,EAAGyU,IAAIzU,GACvBk/C,QAAUT,QAAMh5C,MAAMy5C,QAASzqC,IAAIyqC,SACvC,OAAO,SAASj+C,GAKd,OAJAwE,MAAMwuB,EAAIA,EAAEhzB,GACZwE,MAAMrF,EAAIA,EAAEa,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMy5C,QAAUA,QAAQj+C,GACjBwE,MAAQ,KAKN27C,QAAImB,WACEnB,QAAI3C,SCjBzB,SAASiD,wBAAUa,KACjB,OAAQ,SAASqE,eAAep7C,GAG9B,SAASk2C,UAAUj8C,MAAOgP,KACxB,IAAIwf,EAAIsuB,KAAK98C,MAAQohD,oBAAephD,QAAQwuB,GAAIxf,IAAMoyC,oBAAepyC,MAAMwf,GACvEjyB,EAAIy8C,QAAMh5C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAIy+C,QAAMh5C,MAAMzF,EAAGyU,IAAIzU,GACvBk/C,QAAUT,QAAMh5C,MAAMy5C,QAASzqC,IAAIyqC,SACvC,OAAO,SAASj+C,GAKd,OAJAwE,MAAMwuB,EAAIA,EAAEhzB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAE6L,KAAKiR,IAAI7b,EAAGuK,IACxB/F,MAAMy5C,QAAUA,QAAQj+C,GACjBwE,MAAQ,IAMnB,OAlBA+F,GAAKA,EAgBLk2C,UAAUe,MAAQmE,eAEXlF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJoF,cAAgBpF,wBAAUjD,SC5BtB,SAASsI,oBAAUC,YAAa57B,QAE7C,IADA,IAAIrrB,EAAI,EAAGyB,EAAI4pB,OAAO1hB,OAAS,EAAGgH,EAAI0a,OAAO,GAAI7V,EAAI,IAAI1E,MAAMrP,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAG+T,EAAExV,GAAKinD,YAAYt2C,EAAGA,EAAI0a,SAASrrB,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAI8L,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAIlb,EAAI,EAAGqK,KAAK8N,MAAM1Y,GAAKO,KACpD,OAAO+T,EAAExV,GAAGkB,EAAIlB,ICLL,ICAAknD,sBAAA,SAASxoB,GACtB,OAAO,WACL,OAAOA,ICFIyoB,oBAAA,SAASzoB,GACtB,OAAQA,GCKNxe,iBAAQ,EAAG,GAER,SAASknC,oBAAoBhlD,EAAGiJ,GACrC,OAAQA,GAAMjJ,GAAKA,GACb,SAASs8B,GAAK,OAAQA,EAAIt8B,GAAKiJ,GAC/Bo3C,sBAASp3C,GAiBjB,SAASg8C,MAAMpoC,OAAQzV,MAAO89C,cAAeC,eAC3C,IAAIC,GAAKvoC,OAAO,GAAIm1B,GAAKn1B,OAAO,GAAI40B,GAAKrqC,MAAM,GAAIsqC,GAAKtqC,MAAM,GAG9D,OAFI4qC,GAAKoT,IAAIA,GAAKF,cAAclT,GAAIoT,IAAK3T,GAAK0T,cAAczT,GAAID,MAC3D2T,GAAKF,cAAcE,GAAIpT,IAAKP,GAAK0T,cAAc1T,GAAIC,KACjD,SAASpV,GAAK,OAAOmV,GAAG2T,GAAG9oB,KAGpC,SAAS+oB,QAAQxoC,OAAQzV,MAAO89C,cAAeC,eAC7C,IAAIlkC,EAAIvX,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,QAAU,EAC5CrJ,EAAI,IAAIwQ,MAAMuS,GACdviB,EAAI,IAAIgQ,MAAMuS,GACdrjB,GAAK,EAQT,IALIif,OAAOoE,GAAKpE,OAAO,KACrBA,OAASA,OAAOqE,QAAQoJ,UACxBljB,MAAQA,MAAM8Z,QAAQoJ,aAGf1sB,EAAIqjB,GACX/iB,EAAEN,GAAKsnD,cAAcroC,OAAOjf,GAAIif,OAAOjf,EAAI,IAC3Cc,EAAEd,GAAKunD,cAAc/9C,MAAMxJ,GAAIwJ,MAAMxJ,EAAI,IAG3C,OAAO,SAAS0+B,GACd,IAAI1+B,EAAI0nD,OAAOzoC,OAAQyf,EAAG,EAAGrb,GAAK,EAClC,OAAOviB,EAAEd,GAAGM,EAAEN,GAAG0+B,KAId,SAASwU,KAAKrmB,OAAQ86B,QAC3B,OAAOA,OACF1oC,OAAO4N,OAAO5N,UACdzV,MAAMqjB,OAAOrjB,SACby9C,YAAYp6B,OAAOo6B,eACnBW,MAAM/6B,OAAO+6B,SAKL,SAASvnC,WAAWinC,cAAeC,eAChD,IAIIP,UACAa,OACAC,MANA7oC,OAASiB,gBACT1W,MAAQ0W,gBACR+mC,YAAcc,UACdH,OAAQ,EAKZ,SAASnU,UAGP,OAFAuT,UAAYl7C,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,QAAU,EAAI89C,QAAUJ,MAClEQ,OAASC,MAAQ,KACV7U,MAGT,SAASA,MAAMvU,GACb,OAAQmpB,SAAWA,OAASb,UAAU/nC,OAAQzV,MAAOo+C,MAtEzD,SAASI,mBAAmBV,eAC1B,OAAO,SAASllD,EAAGiJ,GACjB,IAAI/K,EAAIgnD,cAAcllD,GAAKA,EAAGiJ,GAAKA,GACnC,OAAO,SAASqzB,GAAK,OAAOA,GAAKt8B,EAAI,EAAIs8B,GAAKrzB,EAAI,EAAI/K,EAAEo+B,KAmEKspB,CAAmBV,eAAiBA,cAAeL,gBAAgBvoB,GA2BlI,OAxBAuU,MAAMgB,OAAS,SAASxoC,GACtB,OAAQq8C,QAAUA,MAAQd,UAAUx9C,MAAOyV,OAAQmoC,oBAAqBQ,MAnE5E,SAASK,mBAAmBV,eAC1B,OAAO,SAASnlD,EAAGiJ,GACjB,IAAIvK,EAAIymD,cAAcnlD,GAAKA,EAAGiJ,GAAKA,GACnC,OAAO,SAASnK,GAAK,OAAOA,GAAK,EAAIkB,EAAIlB,GAAK,EAAImK,EAAIvK,EAAEI,KAgEwB+mD,CAAmBV,eAAiBA,kBAAkB97C,IAGxIwnC,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUsV,OAAS/O,cAAI/P,KAAKqpB,EAAG2mB,qBAASsD,WAAax0B,OAAOqE,SAG/E2vB,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKqpB,GAAIiqB,WAAajqC,MAAM8Z,SAGvE2vB,MAAMU,WAAa,SAASnqB,GAC1B,OAAOhgB,MAAQ8Z,YAAMnjB,KAAKqpB,GAAIy9B,YAAciB,UAAkBzU,WAGhER,MAAM2U,MAAQ,SAASp+B,GACrB,OAAOnc,UAAU1D,QAAUi+C,QAAUp+B,EAAGiqB,WAAamU,OAGvD3U,MAAMgU,YAAc,SAASz9B,GAC3B,OAAOnc,UAAU1D,QAAUs9C,YAAcz9B,EAAGiqB,WAAawT,aAGpDxT,UC5GM,IAAA0U,cAAA,SAASzpB,EAAG18B,GACzB,IAAKhC,GAAK0+B,EAAI18B,EAAI08B,EAAE0pB,cAAcpmD,EAAI,GAAK08B,EAAE0pB,iBAAiBl6C,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAIlO,EAAGqoD,YAAc3pB,EAAEpb,MAAM,EAAGtjB,GAIhC,OACEqoD,YAAY1+C,OAAS,EAAI0+C,YAAY,GAAKA,YAAY/kC,MAAM,GAAK+kC,aAChE3pB,EAAEpb,MAAMtjB,EAAI,KCTFsoD,aAAA,SAAS5pB,GACtB,OAAOA,EAAIypB,cAAcr8C,KAAKwpB,IAAIoJ,KAASA,EAAE,GAAKiR,KCFhD4Y,GAAK,2EAEM,SAASC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAMn4C,MAAQi4C,GAAG5J,KAAK8J,YAAa,MAAM,IAAIxwC,MAAM,mBAAqBwwC,WACxE,IAAIn4C,MACJrI,KAAK2pB,KAAOthB,MAAM,IAAM,IACxBrI,KAAKurC,MAAQljC,MAAM,IAAM,IACzBrI,KAAK0gD,KAAOr4C,MAAM,IAAM,IACxBrI,KAAK2gD,OAASt4C,MAAM,IAAM,GAC1BrI,KAAK87C,OAASzzC,MAAM,GACpBrI,KAAKk0B,MAAQ7rB,MAAM,KAAOA,MAAM,GAChCrI,KAAK4gD,QAAUv4C,MAAM,GACrBrI,KAAK6gD,UAAYx4C,MAAM,KAAOA,MAAM,GAAGgT,MAAM,GAC7Crb,KAAK2Y,OAAStQ,MAAM,GACpBrI,KAAKnF,KAAOwN,MAAM,KAAO,GAd3Bk4C,gBAAgB1mD,UAAY4mD,gBAAgB5mD,UAiB5C4mD,gBAAgB5mD,UAAUyI,SAAW,WACnC,OAAOtC,KAAK2pB,KACN3pB,KAAKurC,MACLvrC,KAAK0gD,KACL1gD,KAAK2gD,QACJ3gD,KAAK87C,KAAO,IAAM,KACJ,MAAd97C,KAAKk0B,MAAgB,GAAKrwB,KAAK8Q,IAAI,EAAgB,EAAb3U,KAAKk0B,SAC3Cl0B,KAAK4gD,MAAQ,IAAM,KACD,MAAlB5gD,KAAK6gD,UAAoB,GAAK,IAAMh9C,KAAK8Q,IAAI,EAAoB,EAAjB3U,KAAK6gD,aACrD7gD,KAAK2Y,KAAO,IAAM,IACnB3Y,KAAKnF,MCjCE,ICCJimD,eCAPC,qBACOhhD,qBACAihD,2BFHIC,WAAA,SAASjnD,GACtBknD,IAAK,IAAK,IAAkCC,GAA9B3nD,EAAIQ,EAAE0H,OAAQ3J,EAAI,EAAGuxC,IAAM,EAAOvxC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAKuxC,GAAK6X,GAAKppD,EAAG,MACvB,IAAK,IAAgB,IAAPuxC,KAAUA,GAAKvxC,GAAGopD,GAAKppD,EAAG,MACxC,QAAS,GAAIuxC,GAAK,EAAG,CAAE,KAAMtvC,EAAEjC,GAAI,MAAMmpD,IAAK5X,GAAK,GAGvD,OAAOA,GAAK,EAAItvC,EAAEqhB,MAAM,EAAGiuB,IAAMtvC,EAAEqhB,MAAM8lC,GAAK,GAAKnnD,GGPtConD,cAAA,SAAS3qB,EAAG18B,GACzB,IAAI1B,EAAI6nD,cAAczpB,EAAG18B,GACzB,IAAK1B,EAAG,OAAOo+B,EAAI,GACnB,IAAI2pB,YAAc/nD,EAAE,GAChBgpD,SAAWhpD,EAAE,GACjB,OAAOgpD,SAAW,EAAI,KAAO,IAAIx4C,OAAOw4C,UAAUt+C,KAAK,KAAOq9C,YACxDA,YAAY1+C,OAAS2/C,SAAW,EAAIjB,YAAY/kC,MAAM,EAAGgmC,SAAW,GAAK,IAAMjB,YAAY/kC,MAAMgmC,SAAW,GAC5GjB,YAAc,IAAIv3C,MAAMw4C,SAAWjB,YAAY1+C,OAAS,GAAGqB,KAAK,MCNzDu+C,aACbC,IAAK,SAAAhgC,EAASkV,EAAG18B,GAAK,OAAY,IAAJ08B,GAAS+qB,QAAQznD,IAC/CqJ,EAAK,SAAAA,EAASqzB,GAAK,OAAO5yB,KAAK2G,MAAMisB,GAAGn0B,SAAS,IACjDlK,EAAK,SAAAA,EAASq+B,GAAK,OAAOA,EAAI,IAC9Bp+B,EAAK,SAAAA,EAASo+B,GAAK,OAAO5yB,KAAK2G,MAAMisB,GAAGn0B,SAAS,KACjDrI,EAAK,SAAAA,EAASw8B,EAAG18B,GAAK,OAAO08B,EAAE0pB,cAAcpmD,IAC7CghB,EAAK,SAAAA,EAAS0b,EAAG18B,GAAK,OAAO08B,EAAE+qB,QAAQznD,IACvCg9C,EAAK,SAAAA,EAAStgB,EAAG18B,GAAK,OAAO08B,EAAEgrB,YAAY1nD,IAC3CvB,EAAK,SAAAA,EAASi+B,GAAK,OAAO5yB,KAAK2G,MAAMisB,GAAGn0B,SAAS,IACjDvI,EAAK,SAAAA,EAAS08B,EAAG18B,IAAK,OAAOqnD,cAAkB,IAAJ3qB,EAAS18B,KACpDlB,EAAKuoD,cACLpnD,EHVa,SAASy8B,EAAG18B,GACzB,IAAI1B,EAAI6nD,cAAczpB,EAAG18B,GACzB,IAAK1B,EAAG,OAAOo+B,EAAI,GACnB,IAAI2pB,YAAc/nD,EAAE,GAChBgpD,SAAWhpD,EAAE,GACbN,EAAIspD,UAAYP,eAAuE,EAAtDj9C,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM0vC,SAAW,MAAY,EAC5F7nD,EAAI4mD,YAAY1+C,OACpB,OAAO3J,IAAMyB,EAAI4mD,YACXroD,EAAIyB,EAAI4mD,YAAc,IAAIv3C,MAAM9Q,EAAIyB,EAAI,GAAGuJ,KAAK,KAChDhL,EAAI,EAAIqoD,YAAY/kC,MAAM,EAAGtjB,GAAK,IAAMqoD,YAAY/kC,MAAMtjB,GAC1D,KAAO,IAAI8Q,MAAM,EAAI9Q,GAAGgL,KAAK,KAAOm9C,cAAczpB,EAAG5yB,KAAK8Q,IAAI,EAAG5a,EAAIhC,EAAI,IAAI,IGCnF2pD,EAAK,SAAAA,EAASjrB,GAAK,OAAO5yB,KAAK2G,MAAMisB,GAAGn0B,SAAS,IAAIq/C,eACrDlrB,EAAK,SAAAA,EAASA,IAAK,OAAO5yB,KAAK2G,MAAMisB,IAAGn0B,SAAS,MChBpCs/C,aAAA,SAASnrB,GACtB,OAAOA,GCQLorB,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAASjpD,MAAOk7B,OAOrB,IANA,IAAIn8B,EAAIiB,MAAM0I,OACVzI,KACAmiB,EAAI,EACJ27B,EAAIiL,SAAS,GACbtgD,OAAS,EAEN3J,EAAI,GAAKg/C,EAAI,IACdr1C,OAASq1C,EAAI,EAAI7iB,QAAO6iB,EAAIlzC,KAAK8Q,IAAI,EAAGuf,MAAQxyB,SACpDzI,EAAEiN,KAAKlN,MAAM0K,UAAU3L,GAAKg/C,EAAGh/C,EAAIg/C,OAC9Br1C,QAAUq1C,EAAI,GAAK7iB,SACxB6iB,EAAIiL,SAAS5mC,GAAKA,EAAI,GAAK4mC,SAAStgD,QAGtC,OAAOzI,EAAEwrB,UAAU1hB,KAAKk/C,YDHwBC,CAAYnB,OAAOiB,SAAUjB,OAAOkB,WAAa1c,aAC/F4c,SAAWpB,OAAOoB,SAClBC,QAAUrB,OAAOqB,QACjBC,SAAWtB,OAAOsB,SEfT,SAASA,UACtB,OAAO,SAASrpD,OACd,OAAOA,MAAMsH,QAAQ,SAAU,SAASvI,GACtC,OAAOsqD,UAAUtqD,MFYYuqD,CAAevB,OAAOsB,UAAY9c,aAC/Dgd,QAAUxB,OAAOwB,SAAW,IAEhC,SAASC,UAAUhC,WAGjB,IAAI72B,MAFJ62B,UAAYD,gBAAgBC,YAEP72B,KACjB4hB,MAAQiV,UAAUjV,MAClBmV,KAAOF,UAAUE,KACjBC,OAASH,UAAUG,OACnB7E,KAAO0E,UAAU1E,KACjB5nB,MAAQssB,UAAUtsB,MAClB0sB,MAAQJ,UAAUI,MAClBC,UAAYL,UAAUK,UACtBloC,KAAO6nC,UAAU7nC,KACjB9d,KAAO2lD,UAAU3lD,KAGR,MAATA,MAAc+lD,OAAQ,EAAM/lD,KAAO,KAG7BymD,YAAYzmD,QAAoB,MAAbgmD,YAAsBA,UAAY,IAAKloC,MAAO,EAAM9d,KAAO,MAGpFihD,MAAkB,MAATnyB,MAA0B,MAAV4hB,SAAgBuQ,MAAO,EAAMnyB,KAAO,IAAK4hB,MAAQ,KAI9E,IAAIkX,OAAoB,MAAX9B,OAAiBwB,SAAS,GAAgB,MAAXxB,QAAkB,SAAStjD,KAAKxC,MAAQ,IAAMA,KAAK4G,cAAgB,GAC3GihD,OAAoB,MAAX/B,OAAiBwB,SAAS,GAAK,OAAO9kD,KAAKxC,MAAQ0nD,QAAU,GAKtEI,WAAarB,YAAYzmD,MACzB+nD,YAAc,aAAavlD,KAAKxC,MAUpC,SAASkF,OAAO/G,OACd,IAEIjB,EAAGyB,EAAGpB,EAFNyqD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAAT7nD,KACFioD,YAAcH,WAAW3pD,OAAS8pD,YAClC9pD,MAAQ,OACH,CAIL,IAAI+pD,eAHJ/pD,OAASA,OAGmB,EAe5B,GAdAA,MAAQ2pD,WAAW9+C,KAAKwpB,IAAIr0B,OAAQ6nD,WAGhCloC,OAAM3f,MAAQioD,WAAWjoD,QAGzB+pD,eAA4B,IAAV/pD,QAAa+pD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATrC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQmC,YACzGC,aAAwB,MAATjoD,KAAegnD,SAAS,EAAIf,eAAiB,GAAK,IAAMgC,aAAeC,eAA0B,MAATrC,KAAe,IAAM,IAIxHkC,YAEF,IADA7qD,GAAK,EAAGyB,EAAIR,MAAM0I,SACT3J,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAM6hB,WAAW9iB,KAAcK,EAAI,GAAI,CAC7C0qD,aAAqB,KAAN1qD,EAAWgqD,QAAUppD,MAAMqiB,MAAMtjB,EAAI,GAAKiB,MAAMqiB,MAAMtjB,IAAM+qD,YAC3E9pD,MAAQA,MAAMqiB,MAAM,EAAGtjB,GACvB,OAOJ6oD,QAAU9E,OAAM9iD,MAAQ+oD,MAAM/oD,MAAOgqD,MAGzC,IAAIthD,OAASmhD,YAAYnhD,OAAS1I,MAAM0I,OAASohD,YAAYphD,OACzDw5B,QAAUx5B,OAASwyB,MAAQ,IAAIrrB,MAAMqrB,MAAQxyB,OAAS,GAAGqB,KAAK4mB,MAAQ,GAM1E,OAHIi3B,OAAS9E,OAAM9iD,MAAQ+oD,MAAM7mB,QAAUliC,MAAOkiC,QAAQx5B,OAASwyB,MAAQ4uB,YAAYphD,OAASshD,KAAW9nB,QAAU,IAG7GqQ,OACN,IAAK,IAAKvyC,MAAQ6pD,YAAc7pD,MAAQ8pD,YAAc5nB,QAAS,MAC/D,IAAK,IAAKliC,MAAQ6pD,YAAc3nB,QAAUliC,MAAQ8pD,YAAa,MAC/D,IAAK,IAAK9pD,MAAQkiC,QAAQ7f,MAAM,EAAG3Z,OAASw5B,QAAQx5B,QAAU,GAAKmhD,YAAc7pD,MAAQ8pD,YAAc5nB,QAAQ7f,MAAM3Z,QAAS,MAC9H,QAAS1I,MAAQkiC,QAAU2nB,YAAc7pD,MAAQ8pD,YAGnD,OAAOT,SAASrpD,OAOlB,OApEA6nD,UAAyB,MAAbA,UAAoB,EAC1B,SAASxjD,KAAKxC,MAAQgJ,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,GAAImsC,YAC/Ch9C,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,GAAImsC,YA8D/B9gD,OAAOuC,SAAW,WAChB,OAAOk+C,UAAY,IAGdzgD,OAaT,OACEA,OAAQyiD,UACRxB,aAZF,SAASA,aAAaR,UAAWxnD,OAC/B,IAAI+hB,EAAIynC,YAAWhC,UAAYD,gBAAgBC,YAAsB3lD,KAAO,IAAK2lD,YAC7EvmD,EAAiE,EAA7D4J,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM0vC,aAASroD,OAAS,KAC1D2xC,EAAI9mC,KAAKiR,IAAI,IAAK7a,GAClBwoD,OAASZ,SAAS,EAAI5nD,EAAI,GAC9B,OAAO,SAASjB,OACd,OAAO+hB,EAAE4vB,EAAI3xC,OAASypD,YJxHb,SAASQ,cAAc1W,YAIpC,OAHAwU,qBAASmC,WAAa3W,YACtBxsC,qBAASghD,qBAAOhhD,OAChBihD,2BAAeD,qBAAOC,aACfD,qBAXTkC,EACEb,QAAS,IACTH,UAAW,IACXD,UAAW,GACXG,UAAW,IAAK,MORH,ICCAgB,eAAA,SAASnsC,OAAQ2xB,MAAO6X,WACrC,IAGIK,UAHApjD,MAAQuZ,OAAO,GACfqxB,KAAOrxB,OAAOA,OAAOtV,OAAS,GAC9B4mC,KAAOW,SAASxrC,MAAO4qC,KAAe,MAATM,MAAgB,GAAKA,OAGtD,QADA6X,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrC3lD,MAChB,IAAK,IACH,IAAI7B,MAAQ6K,KAAK8Q,IAAI9Q,KAAKwpB,IAAI5vB,OAAQoG,KAAKwpB,IAAIgb,OAE/C,OAD2B,MAAvBmY,UAAUK,WAAsBtsC,MAAMssC,UCVjC,SAASvY,KAAMtvC,OAC5B,OAAO6K,KAAK8Q,IAAI,EAAgE,EAA7D9Q,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM0vC,aAASroD,OAAS,KAAWqoD,aAASx9C,KAAKwpB,IAAIib,QDS5C8a,CAAgB9a,KAAMtvC,UAASwnD,UAAUK,UAAYA,WACpGG,2BAAaR,UAAWxnD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvBwnD,UAAUK,WAAsBtsC,MAAMssC,UElBjC,SAASvY,KAAM3zB,KAE5B,OADA2zB,KAAOzkC,KAAKwpB,IAAIib,MAAO3zB,IAAM9Q,KAAKwpB,IAAI1Y,KAAO2zB,KACtCzkC,KAAK8Q,IAAI,EAAG0sC,aAAS1sC,KAAO0sC,aAAS/Y,OAAS,EFgBK+a,CAAe/a,KAAMzkC,KAAK8Q,IAAI9Q,KAAKwpB,IAAI5vB,OAAQoG,KAAKwpB,IAAIgb,WAAUmY,UAAUK,UAAYA,WAAgC,MAAnBL,UAAU3lD,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvB2lD,UAAUK,WAAsBtsC,MAAMssC,UDvBjC,SAASvY,MACtB,OAAOzkC,KAAK8Q,IAAI,GAAI0sC,aAASx9C,KAAKwpB,IAAIib,QCsBoBgb,CAAehb,SAAQkY,UAAUK,UAAYA,UAAuC,GAAP,MAAnBL,UAAU3lD,OAI9H,OAAOkF,qBAAOygD,YGxBT,SAAS+C,UAAUvY,OACxB,IAAIh0B,OAASg0B,MAAMh0B,OAmDnB,OAjDAg0B,MAAMpC,MAAQ,SAASD,OACrB,IAAItwC,EAAI2e,SACR,OAAO4xB,UAAMvwC,EAAE,GAAIA,EAAEA,EAAEqJ,OAAS,GAAa,MAATinC,MAAgB,GAAKA,QAG3DqC,MAAMwY,WAAa,SAAS7a,MAAO6X,WACjC,OAAOgD,eAAWxsC,SAAU2xB,MAAO6X,YAGrCxV,MAAMyY,KAAO,SAAS9a,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKIL,KALAjwC,EAAI2e,SACJsyB,GAAK,EACL6X,GAAK9oD,EAAEqJ,OAAS,EAChBjE,MAAQpF,EAAEixC,IACVjB,KAAOhwC,EAAE8oD,IA8Bb,OA3BI9Y,KAAO5qC,QACT6qC,KAAO7qC,MAAOA,MAAQ4qC,KAAMA,KAAOC,KACnCA,KAAOgB,GAAIA,GAAK6X,GAAIA,GAAK7Y,OAG3BA,KAAOO,cAAcprC,MAAO4qC,KAAMM,QAEvB,EAGTL,KAAOO,cAFPprC,MAAQoG,KAAK8N,MAAMlU,MAAQ6qC,MAAQA,KACnCD,KAAOxkC,KAAKupB,KAAKib,KAAOC,MAAQA,KACEK,OACzBL,KAAO,IAGhBA,KAAOO,cAFPprC,MAAQoG,KAAKupB,KAAK3vB,MAAQ6qC,MAAQA,KAClCD,KAAOxkC,KAAK8N,MAAM02B,KAAOC,MAAQA,KACCK,QAGhCL,KAAO,GACTjwC,EAAEixC,IAAMzlC,KAAK8N,MAAMlU,MAAQ6qC,MAAQA,KACnCjwC,EAAE8oD,IAAMt9C,KAAKupB,KAAKib,KAAOC,MAAQA,KACjCtxB,OAAO3e,IACEiwC,KAAO,IAChBjwC,EAAEixC,IAAMzlC,KAAKupB,KAAK3vB,MAAQ6qC,MAAQA,KAClCjwC,EAAE8oD,IAAMt9C,KAAK8N,MAAM02B,KAAOC,MAAQA,KAClCtxB,OAAO3e,IAGF2yC,OAGFA,MAGM,SAASsP,gBACtB,IAAItP,MAAQ5yB,WAAWinC,oBAAeC,YAMtC,OAJAtU,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOsP,kBAGdiJ,UAAUvY,OC/DJ,SAASzF,oBACtB,IAAIvuB,QAAU,EAAG,GAEjB,SAASg0B,MAAMvU,GACb,OAAQA,EAaV,OAVAuU,MAAMgB,OAAShB,MAEfA,MAAMh0B,OAASg0B,MAAMzpC,MAAQ,SAASggB,GACpC,OAAOnc,UAAU1D,QAAUsV,OAAS/O,cAAI/P,KAAKqpB,EAAG2mB,qBAAS8C,OAASh0B,OAAOqE,SAG3E2vB,MAAMC,KAAO,WACX,OAAO1F,oBAAWvuB,OAAOA,SAGpBusC,UAAUvY,OCrBJ,IAAAyY,KAAA,SAASzsC,OAAQ0sC,UAG9B,IAIIzqD,EAJAqwC,GAAK,EACL6X,IAHJnqC,OAASA,OAAOqE,SAGA3Z,OAAS,EACrBiiD,GAAK3sC,OAAOsyB,IACZsa,GAAK5sC,OAAOmqC,IAUhB,OAPIyC,GAAKD,KACP1qD,EAAIqwC,GAAIA,GAAK6X,GAAIA,GAAKloD,EACtBA,EAAI0qD,GAAIA,GAAKC,GAAIA,GAAK3qD,GAGxB+d,OAAOsyB,IAAMoa,SAAS/xC,MAAMgyC,IAC5B3sC,OAAOmqC,IAAMuC,SAASt2B,KAAKw2B,IACpB5sC,QCVT,SAASqoC,kBAAcllD,EAAGiJ,GACxB,OAAQA,EAAIS,KAAKklC,IAAI3lC,EAAIjJ,IACnB,SAASs8B,GAAK,OAAO5yB,KAAKklC,IAAItS,EAAIt8B,GAAKiJ,GACvCo3C,sBAASp3C,GAGjB,SAASk8C,kBAAcnlD,EAAGiJ,GACxB,OAAOjJ,EAAI,EACL,SAASlB,GAAK,OAAQ4K,KAAKiR,KAAK1R,EAAGnK,GAAK4K,KAAKiR,KAAK3a,EAAG,EAAIlB,IACzD,SAASA,GAAK,OAAO4K,KAAKiR,IAAI1R,EAAGnK,GAAK4K,KAAKiR,IAAI3a,EAAG,EAAIlB,IAG9D,SAAS4qD,MAAMptB,GACb,OAAOr1B,SAASq1B,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAASqtB,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAASlgD,KAAKy1C,EAAIz1C,KAAKmgD,IACvB,SAASvtB,GAAK,OAAO5yB,KAAKiR,IAAIivC,KAAMttB,IAG5C,SAASwtB,KAAKF,MACZ,OAAOA,OAASlgD,KAAKy1C,EAAIz1C,KAAKklC,IACf,KAATgb,MAAelgD,KAAKqgD,OACV,IAATH,MAAclgD,KAAKsgD,OAClBJ,KAAOlgD,KAAKklC,IAAIgb,MAAO,SAASttB,GAAK,OAAO5yB,KAAKklC,IAAItS,GAAKstB,OAGpE,SAASK,QAAQrpC,GACf,OAAO,SAAS0b,GACd,OAAQ1b,GAAG0b,IAIA,SAASsS,MACtB,IAAIiC,MAAQ5yB,WAAWinC,kBAAeC,mBAAetoC,QAAQ,EAAG,KAC5DA,OAASg0B,MAAMh0B,OACf+sC,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAAStY,UAGP,OAFA6Y,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3B/sC,SAAS,GAAK,IAAGqtC,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnDtZ,MA2ET,OAxEAA,MAAM+Y,KAAO,SAASxiC,GACpB,OAAOnc,UAAU1D,QAAUqiD,MAAQxiC,EAAGiqB,WAAauY,MAGrD/Y,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUsV,OAAOuK,GAAIiqB,WAAax0B,UAGrDg0B,MAAMpC,MAAQ,SAASD,OACrB,IAGI9vC,EAHAR,EAAI2e,SACJtJ,EAAIrV,EAAE,GACNqQ,EAAIrQ,EAAEA,EAAEqJ,OAAS,IAGjB7I,EAAI6P,EAAIgF,KAAG3V,EAAI2V,EAAGA,EAAIhF,EAAGA,EAAI3Q,GAEjC,IAEIgC,EACA4wC,EACA1xC,EAJAlB,EAAIssD,KAAK32C,GACT0N,EAAIipC,KAAK37C,GAITlP,EAAa,MAATmvC,MAAgB,IAAMA,MAC1BiQ,KAEJ,KAAMmL,KAAO,IAAM3oC,EAAIrjB,EAAIyB,GAEzB,GADAzB,EAAI8L,KAAK2G,MAAMzS,GAAK,EAAGqjB,EAAIvX,KAAK2G,MAAM4Q,GAAK,EACvC1N,EAAI,GAAG,KAAO3V,EAAIqjB,IAAKrjB,EACzB,IAAK4yC,EAAI,EAAG5wC,EAAIuqD,KAAKvsD,GAAI4yC,EAAIoZ,OAAQpZ,EAEnC,MADA1xC,EAAIc,EAAI4wC,GACAj9B,GAAR,CACA,GAAIzU,EAAIyP,EAAG,MACXkwC,EAAE1yC,KAAKjN,SAEJ,KAAOlB,EAAIqjB,IAAKrjB,EACrB,IAAK4yC,EAAIoZ,KAAO,EAAGhqD,EAAIuqD,KAAKvsD,GAAI4yC,GAAK,IAAKA,EAExC,MADA1xC,EAAIc,EAAI4wC,GACAj9B,GAAR,CACA,GAAIzU,EAAIyP,EAAG,MACXkwC,EAAE1yC,KAAKjN,SAIX2/C,EAAIhQ,UAAM7wC,EAAGqjB,EAAGvX,KAAK6Q,IAAI0G,EAAIrjB,EAAGyB,IAAIyO,IAAIq8C,MAG1C,OAAOzrD,EAAI+/C,EAAEn0B,UAAYm0B,GAG3B5N,MAAMwY,WAAa,SAAS7a,MAAO6X,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAATuD,KAAc,MAAQ,KAChC,mBAAdvD,YAA0BA,UAAYzgD,qBAAOygD,YACpD7X,QAAUqa,IAAU,OAAOxC,UAClB,MAAT7X,QAAeA,MAAQ,IAC3B,IAAIgC,EAAI9mC,KAAK8Q,IAAI,EAAGovC,KAAOpb,MAAQqC,MAAMpC,QAAQlnC,QACjD,OAAO,SAASrJ,GACd,IAAIN,EAAIM,EAAIisD,KAAKzgD,KAAK2G,MAAM65C,KAAKhsD,KAEjC,OADIN,EAAIgsD,KAAOA,KAAO,KAAKhsD,GAAKgsD,MACzBhsD,GAAK4yC,EAAI6V,UAAUnoD,GAAK,KAInC2yC,MAAMyY,KAAO,WACX,OAAOzsC,OAAOysC,KAAKzsC,UACjBrF,MAAO,SAAAA,MAAS8kB,GAAK,OAAO6tB,KAAKzgD,KAAK8N,MAAM0yC,KAAK5tB,MACjDrJ,KAAM,SAAAA,KAASqJ,GAAK,OAAO6tB,KAAKzgD,KAAKupB,KAAKi3B,KAAK5tB,UAInDuU,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOjC,MAAMgb,KAAKA,QAGzB/Y,MC1HT,SAASuZ,MAAM9tB,EAAG4qB,UAChB,OAAO5qB,EAAI,GAAK5yB,KAAKiR,KAAK2hB,EAAG4qB,UAAYx9C,KAAKiR,IAAI2hB,EAAG4qB,UAGxC,SAASvsC,MACtB,IAAIusC,SAAW,EACXrW,MAAQ5yB,WAGZ,SAASinC,cAAcllD,EAAGiJ,GACxB,OAAQA,EAAImhD,MAAMnhD,EAAGi+C,WAAalnD,EAAIoqD,MAAMpqD,EAAGknD,YACzC,SAAS5qB,GAAK,OAAQ8tB,MAAM9tB,EAAG4qB,UAAYlnD,GAAKiJ,GAChDo3C,sBAASp3C,IAGjB,SAASk8C,cAAcnlD,EAAGiJ,GAExB,OADAA,EAAImhD,MAAMnhD,EAAGi+C,WAAalnD,EAAIoqD,MAAMpqD,EAAGknD,WAChC,SAASpoD,GAAK,OAAOsrD,MAAMpqD,EAAIiJ,EAAInK,EAAG,EAAIooD,aAV/CrqC,OAASg0B,MAAMh0B,OAqBnB,OARAg0B,MAAMqW,SAAW,SAAS9/B,GACxB,OAAOnc,UAAU1D,QAAU2/C,UAAY9/B,EAAGvK,OAAOA,WAAaqqC,UAGhErW,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOl2B,MAAMusC,SAASA,YAG7BkC,UAAUvY,OC7BJ,SAAS5B,oBACtB,IAAIpyB,UACAzV,SACAijD,cAEJ,SAAShZ,UACP,IAAIzzC,EAAI,EAAGyB,EAAIqK,KAAK8Q,IAAI,EAAGpT,MAAMG,QAEjC,IADA8iD,WAAa,IAAI37C,MAAMrP,EAAI,KAClBzB,EAAIyB,GAAGgrD,WAAWzsD,EAAI,GAAK0sD,SAAUztC,OAAQjf,EAAIyB,GAC1D,OAAOwxC,MAGT,SAASA,MAAMvU,GACb,IAAKliB,MAAMkiB,GAAKA,GAAI,OAAOl1B,MAAMk+C,OAAO+E,WAAY/tB,IAiCtD,OA9BAuU,MAAMW,aAAe,SAASnoC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAOzL,EAAI,GAAK2vC,IAAKA,MACnB3vC,EAAI,EAAIysD,WAAWzsD,EAAI,GAAKif,OAAO,GACnCjf,EAAIysD,WAAW9iD,OAAS8iD,WAAWzsD,GAAKif,OAAOA,OAAOtV,OAAS,KAInEspC,MAAMh0B,OAAS,SAASuK,GACtB,IAAKnc,UAAU1D,OAAQ,OAAOsV,OAAOqE,QACrCrE,UACA,IAAK,IAAyB3e,EAArBN,EAAI,EAAGyB,EAAI+nB,EAAE7f,OAAW3J,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAIkpB,EAAExpB,KAAkBwc,MAAMlc,GAAKA,IAAI2e,OAAO9Q,KAAK7N,GAEpG,OADA2e,OAAOxD,KAAKi0B,WACL+D,WAGTR,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKqpB,GAAIiqB,WAAajqC,MAAM8Z,SAGvE2vB,MAAM0Z,UAAY,WAChB,OAAOF,WAAWnpC,SAGpB2vB,MAAMC,KAAO,WACX,OAAO7B,oBACFpyB,OAAOA,QACPzV,MAAMA,QAGNypC,MC7CM,SAAS2Z,oBACtB,IAAIhB,GAAK,EACLC,GAAK,EACLpqD,EAAI,EACJwd,QAAU,IACVzV,OAAS,EAAG,GAEhB,SAASypC,MAAMvU,GACb,GAAIA,GAAKA,EAAG,OAAOl1B,MAAMk+C,OAAOzoC,OAAQyf,EAAG,EAAGj9B,IAGhD,SAASgyC,UACP,IAAIzzC,GAAK,EAET,IADAif,OAAS,IAAInO,MAAMrP,KACVzB,EAAIyB,GAAGwd,OAAOjf,KAAOA,EAAI,GAAK6rD,IAAM7rD,EAAIyB,GAAKmqD,KAAOnqD,EAAI,GACjE,OAAOwxC,MAyBT,OAtBAA,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUiiD,IAAMpiC,EAAE,GAAIqiC,IAAMriC,EAAE,GAAIiqB,YAAcmY,GAAIC,KAGvE5Y,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUlI,GAAK+H,MAAQ8Z,YAAMnjB,KAAKqpB,IAAI7f,OAAS,EAAG8pC,WAAajqC,MAAM8Z,SAGxF2vB,MAAMW,aAAe,SAASnoC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAOzL,EAAI,GAAK2vC,IAAKA,KACf3vC,EAAI,GAAK4rD,GAAI3sC,OAAO,IACpBjf,GAAKyB,GAAKwd,OAAOxd,EAAI,GAAIoqD,KACxB5sC,OAAOjf,EAAI,GAAIif,OAAOjf,KAG/BizC,MAAMC,KAAO,WACX,OAAO0Z,oBACF3tC,QAAQ2sC,GAAIC,KACZriD,MAAMA,QAGNgiD,UAAUvY,OCzCJ,SAASyZ,sBACtB,IAAIztC,QAAU,IACVzV,OAAS,EAAG,GACZ/H,EAAI,EAER,SAASwxC,MAAMvU,GACb,GAAIA,GAAKA,EAAG,OAAOl1B,MAAMk+C,OAAOzoC,OAAQyf,EAAG,EAAGj9B,IAsBhD,OAnBAwxC,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUsV,OAASqE,YAAMnjB,KAAKqpB,GAAI/nB,EAAIqK,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,OAAS,GAAIspC,OAASh0B,OAAOqE,SAGpH2vB,MAAMzpC,MAAQ,SAASggB,GACrB,OAAOnc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKqpB,GAAI/nB,EAAIqK,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,OAAS,GAAIspC,OAASzpC,MAAM8Z,SAGlH2vB,MAAMW,aAAe,SAASnoC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAQwT,OAAOjf,EAAI,GAAIif,OAAOjf,KAGhCizC,MAAMC,KAAO,WACX,OAAOwZ,sBACFztC,OAAOA,QACPzV,MAAMA,QAGNypC,MC/BT,IAAImN,YAAK,IAAIv4C,KACTw4C,YAAK,IAAIx4C,KAEE,SAASglD,YAAYC,OAAQC,QAASnc,MAAOr9B,OAE1D,SAASo4C,SAAS/jD,MAChB,OAAOklD,OAAOllD,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDA+jD,SAAS/xC,MAAQ+xC,SAEjBA,SAASt2B,KAAO,SAASztB,MACvB,OAAOklD,OAAOllD,KAAO,IAAIC,KAAKD,KAAO,IAAKmlD,QAAQnlD,KAAM,GAAIklD,OAAOllD,MAAOA,MAG5E+jD,SAASl5C,MAAQ,SAAS7K,MACxB,IAAI4/C,GAAKmE,SAAS/jD,MACdwsC,GAAKuX,SAASt2B,KAAKztB,MACvB,OAAOA,KAAO4/C,GAAKpT,GAAKxsC,KAAO4/C,GAAKpT,IAGtCuX,SAASqB,OAAS,SAASplD,KAAM2oC,MAC/B,OAAOwc,QAAQnlD,KAAO,IAAIC,MAAMD,MAAe,MAAR2oC,KAAe,EAAIzkC,KAAK8N,MAAM22B,OAAQ3oC,MAG/E+jD,SAASniD,MAAQ,SAAS9D,MAAO4qC,KAAMC,MACrC,IAAgB0c,SAAZzjD,SAGJ,GAFA9D,MAAQimD,SAASt2B,KAAK3vB,OACtB6qC,KAAe,MAARA,KAAe,EAAIzkC,KAAK8N,MAAM22B,QAC/B7qC,MAAQ4qC,MAAWC,KAAO,GAAI,OAAO/mC,MAC3C,GAAGA,MAAM2E,KAAK8+C,SAAW,IAAIplD,MAAMnC,QAASqnD,QAAQrnD,MAAO6qC,MAAOuc,OAAOpnD,aAClEunD,SAAWvnD,OAASA,MAAQ4qC,MACnC,OAAO9mC,OAGTmiD,SAAS1vC,OAAS,SAAS3W,MACzB,OAAOunD,YAAY,SAASjlD,MAC1B,GAAIA,MAAQA,KAAM,KAAOklD,OAAOllD,OAAQtC,KAAKsC,OAAOA,KAAK08C,QAAQ18C,KAAO,IACvE,SAASA,KAAM2oC,MAChB,GAAI3oC,MAAQA,KACV,GAAI2oC,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAOwc,QAAQnlD,MAAO,IAAKtC,KAAKsC,aAC3B,OAAS2oC,MAAQ,GACtB,KAAOwc,QAAQnlD,KAAM,IAAMtC,KAAKsC,YAMpCgpC,QACF+a,SAAS/a,MAAQ,SAASlrC,MAAOgP,KAG/B,OAFA0rC,YAAGkE,SAAS5+C,OAAQ26C,YAAGiE,SAAS5vC,KAChCo4C,OAAO1M,aAAK0M,OAAOzM,aACZv0C,KAAK8N,MAAMg3B,MAAMwP,YAAIC,eAG9BsL,SAASlkC,MAAQ,SAAS8oB,MAExB,OADAA,KAAOzkC,KAAK8N,MAAM22B,MACVlnC,SAASknC,OAAWA,KAAO,EAC3BA,KAAO,EACTob,SAAS1vC,OAAO1I,MACZ,SAASjT,GAAK,OAAOiT,MAAMjT,GAAKiwC,MAAS,GACzC,SAASjwC,GAAK,OAAOqrD,SAAS/a,MAAM,EAAGtwC,GAAKiwC,MAAS,IAH3Cob,SADoB,OAQrCA,SChET,IAAIuB,wBAAcvB,YAAS,aAExB,SAAS/jD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KAAO2oC,OACpB,SAAS7qC,MAAOgP,KACjB,OAAOA,IAAMhP,QAIfwnD,wBAAYzlC,MAAQ,SAASmrB,GAE3B,OADAA,EAAI9mC,KAAK8N,MAAMg5B,GACVvpC,SAASupC,IAAQA,EAAI,EACpBA,EAAI,EACH+Y,YAAS,SAAS/jD,MACvBA,KAAK08C,QAAQx4C,KAAK8N,MAAMhS,KAAOgrC,GAAKA,IACnC,SAAShrC,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KAAO2oC,KAAOqC,IAC3B,SAASltC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASktC,IANJsa,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAY1jD,MCxBV,KAGjB4jD,aAAe,OCDtBC,cAAS1B,YAAS,SAAS/jD,MAC7BA,KAAK08C,QAAQ18C,KAAOA,KAAKmD,oBACxB,SAASnD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KDNY,ICML2oC,OACpB,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,ODRY,KCSzB,SAASkC,MACV,OAAOA,KAAK0lD,kBAGCD,yBCVXE,eDWiBF,cAAO7jD,MCXfmiD,YAAS,SAAS/jD,MAC7BA,KAAK08C,QAAQ18C,KAAOA,KAAKmD,kBFJC,IEImBnD,KAAKiD,eACjD,SAASjD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KAAO2oC,KAAO4c,iBAC3B,SAASznD,MAAOgP,KACjB,OAAQA,IAAMhP,OAASynD,gBACtB,SAASvlD,MACV,OAAOA,KAAK+C,gBAGC4iD,yBCVXC,WDWiBD,cAAO/jD,MCXjBmiD,YAAS,SAAS/jD,MAC3BA,KAAK08C,QAAQ18C,KAAOA,KAAKmD,kBHJC,IGImBnD,KAAKiD,aAAgCjD,KAAK+C,aAAewiD,iBACrG,SAASvlD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KHJU,KGIH2oC,OACpB,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OHNU,MGOvB,SAASkC,MACV,OAAOA,KAAK0C,cAGCkjD,mBCVXviD,SDWeuiD,UAAKhkD,MCXdmiD,YAAS,SAAS/jD,MAC1BA,KAAK6lD,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS7lD,KAAM2oC,MAChB3oC,KAAK8lD,QAAQ9lD,KAAKwD,UAAYmlC,OAC7B,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAIi5C,oBAAsBjoD,MAAMioD,qBAAuBR,gBJLvD,OIMtB,SAASvlD,MACV,OAAOA,KAAKwD,UAAY,KAGXH,gBACGA,QAAIzB,MCXtB,SAASokD,QAAQ5tD,GACf,OAAO2rD,YAAS,SAAS/jD,MACvBA,KAAK8lD,QAAQ9lD,KAAKwD,WAAaxD,KAAKsD,SAAW,EAAIlL,GAAK,GACxD4H,KAAK6lD,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS7lD,KAAM2oC,MAChB3oC,KAAK8lD,QAAQ9lD,KAAKwD,UAAmB,EAAPmlC,OAC7B,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAIi5C,oBAAsBjoD,MAAMioD,qBAAuBR,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1BtiD,aDoBiBuiD,OAAOrkD,MACPskD,OAAOtkD,MACNukD,QAAQvkD,MACNwkD,UAAUxkD,MACXykD,SAASzkD,MACX0kD,OAAO1kD,MACL2kD,SAAS3kD,MC1BpBmiD,YAAS,SAAS/jD,MAC5BA,KAAK8lD,QAAQ,GACb9lD,KAAK6lD,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS7lD,KAAM2oC,MAChB3oC,KAAKwmD,SAASxmD,KAAK2D,WAAaglC,OAC/B,SAAS7qC,MAAOgP,KACjB,OAAOA,IAAInJ,WAAa7F,MAAM6F,WAAyD,IAA3CmJ,IAAI1I,cAAgBtG,MAAMsG,gBACrE,SAASpE,MACV,OAAOA,KAAK2D,cAGCD,sBCXXW,WDYgBX,YAAM9B,MCZfmiD,YAAS,SAAS/jD,MAC3BA,KAAKwmD,SAAS,EAAG,GACjBxmD,KAAK6lD,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS7lD,KAAM2oC,MAChB3oC,KAAKymD,YAAYzmD,KAAKoE,cAAgBukC,OACrC,SAAS7qC,MAAOgP,KACjB,OAAOA,IAAI1I,cAAgBtG,MAAMsG,eAChC,SAASpE,MACV,OAAOA,KAAKoE,iBAIdC,UAAKwb,MAAQ,SAASmrB,GACpB,OAAQvpC,SAASupC,EAAI9mC,KAAK8N,MAAMg5B,KAASA,EAAI,EAAY+Y,YAAS,SAAS/jD,MACzEA,KAAKymD,YAAYviD,KAAK8N,MAAMhS,KAAKoE,cAAgB4mC,GAAKA,GACtDhrC,KAAKwmD,SAAS,EAAG,GACjBxmD,KAAK6lD,SAAS,EAAG,EAAG,EAAG,IACtB,SAAS7lD,KAAM2oC,MAChB3oC,KAAKymD,YAAYzmD,KAAKoE,cAAgBukC,KAAOqC,KALG,MASrC3mC,uBCrBXqiD,WDsBeriD,UAAKzC,MCtBRmiD,YAAS,SAAS/jD,MAChCA,KAAK2mD,cAAc,EAAG,IACrB,SAAS3mD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KAAO2oC,KAAO4c,iBAC3B,SAASznD,MAAOgP,KACjB,OAAQA,IAAMhP,OAASynD,gBACtB,SAASvlD,MACV,OAAOA,KAAK4mD,mBCPVC,SDWoBH,UAAU9kD,MCXpBmiD,YAAS,SAAS/jD,MAC9BA,KAAK8mD,cAAc,EAAG,EAAG,IACxB,SAAS9mD,KAAM2oC,MAChB3oC,KAAK08C,SAAS18C,KTJU,KSIH2oC,OACpB,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OTNU,MSOvB,SAASkC,MACV,OAAOA,KAAK+mD,iBCPVC,QDWkBH,QAAQjlD,MCXjBmiD,YAAS,SAAS/jD,MAC7BA,KAAKinD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASjnD,KAAM2oC,MAChB3oC,KAAKknD,WAAWlnD,KAAKmnD,aAAexe,OACnC,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OVLS,OUMtB,SAASkC,MACV,OAAOA,KAAKmnD,aAAe,KAGdH,kBACMA,OAAOplD,MCX5B,SAASwlD,WAAWhvD,GAClB,OAAO2rD,YAAS,SAAS/jD,MACvBA,KAAKknD,WAAWlnD,KAAKmnD,cAAgBnnD,KAAKqnD,YAAc,EAAIjvD,GAAK,GACjE4H,KAAKinD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASjnD,KAAM2oC,MAChB3oC,KAAKknD,WAAWlnD,KAAKmnD,aAAsB,EAAPxe,OACnC,SAAS7qC,MAAOgP,KACjB,OAAQA,IAAMhP,OAAS0nD,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAU1lD,MACV2lD,UAAU3lD,MACT4lD,WAAW5lD,MACT6lD,aAAa7lD,MACd8lD,YAAY9lD,MACd+lD,UAAU/lD,MACRgmD,YAAYhmD,MC1BvBmiD,YAAS,SAAS/jD,MAC/BA,KAAKknD,WAAW,GAChBlnD,KAAKinD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASjnD,KAAM2oC,MAChB3oC,KAAK8nD,YAAY9nD,KAAK+nD,cAAgBpf,OACrC,SAAS7qC,MAAOgP,KACjB,OAAOA,IAAIi7C,cAAgBjqD,MAAMiqD,cAAkE,IAAjDj7C,IAAIk7C,iBAAmBlqD,MAAMkqD,mBAC9E,SAAShoD,MACV,OAAOA,KAAK+nD,iBCRVE,SDYmBJ,SAASjmD,MCZlBmiD,YAAS,SAAS/jD,MAC9BA,KAAK8nD,YAAY,EAAG,GACpB9nD,KAAKinD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASjnD,KAAM2oC,MAChB3oC,KAAKkoD,eAAeloD,KAAKgoD,iBAAmBrf,OAC3C,SAAS7qC,MAAOgP,KACjB,OAAOA,IAAIk7C,iBAAmBlqD,MAAMkqD,kBACnC,SAAShoD,MACV,OAAOA,KAAKgoD,oBAIdC,QAAQpoC,MAAQ,SAASmrB,GACvB,OAAQvpC,SAASupC,EAAI9mC,KAAK8N,MAAMg5B,KAASA,EAAI,EAAY+Y,YAAS,SAAS/jD,MACzEA,KAAKkoD,eAAehkD,KAAK8N,MAAMhS,KAAKgoD,iBAAmBhd,GAAKA,GAC5DhrC,KAAK8nD,YAAY,EAAG,GACpB9nD,KAAKinD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASjnD,KAAM2oC,MAChB3oC,KAAKkoD,eAAeloD,KAAKgoD,iBAAmBrf,KAAOqC,KALH,MASrCid,wBACOA,QAAQrmD,MCZ9B,SAASumD,UAAUzvD,GACjB,GAAI,GAAKA,EAAEmL,GAAKnL,EAAEmL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,MAAM,EAAGvH,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE0vD,GAEnD,OADApoD,KAAKymD,YAAY/tD,EAAEmL,GACZ7D,KAET,OAAO,IAAIC,KAAKvH,EAAEmL,EAAGnL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE0vD,GAGlD,SAASC,QAAQ3vD,GACf,GAAI,GAAKA,EAAEmL,GAAKnL,EAAEmL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,KAAKA,KAAKqoD,KAAK,EAAG5vD,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE0vD,IAE5D,OADApoD,KAAKkoD,eAAexvD,EAAEmL,GACf7D,KAET,OAAO,IAAIC,KAAKA,KAAKqoD,IAAI5vD,EAAEmL,EAAGnL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE0vD,IAG3D,SAASG,QAAQ1kD,GACf,OAAQA,EAAGA,EAAGrL,EAAG,EAAGE,EAAG,EAAG2J,EAAG,EAAGS,EAAG,EAAGE,EAAG,EAAGolD,EAAG,GA2UjD,ICzWIhH,yBACOoH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAIhnC,EAAK,IAAKinC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAAS9oD,WAAI7G,MAAO2wB,KAAMuK,OACxB,IAAIwsB,KAAO1nD,MAAQ,EAAI,IAAM,GACzBojD,QAAUsE,MAAQ1nD,MAAQA,OAAS,GACnC0I,OAAS06C,OAAO16C,OACpB,OAAOg/C,MAAQh/C,OAASwyB,MAAQ,IAAIrrB,MAAMqrB,MAAQxyB,OAAS,GAAGqB,KAAK4mB,MAAQyyB,OAASA,QAGtF,SAASwM,QAAQ5uD,GACf,OAAOA,EAAEsG,QAAQqoD,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAI3oD,OAAO,OAAS2oD,MAAM7gD,IAAI2gD,SAAS7lD,KAAK,KAAO,IAAK,KAGjE,SAASgmD,aAAaD,OAEpB,IADA,IAAI7gD,OAAUlQ,GAAK,EAAGyB,EAAIsvD,MAAMpnD,SACvB3J,EAAIyB,GAAGyO,IAAI6gD,MAAM/wD,GAAG0J,eAAiB1J,EAC9C,OAAOkQ,IAGT,SAAS+gD,yBAAyB3wD,EAAG+jD,OAAQrkD,GAC3C,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE4wD,GAAKzvD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASwnD,yBAAyB7wD,EAAG+jD,OAAQrkD,GAC3C,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEqV,GAAKlU,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASynD,sBAAsB9wD,EAAG+jD,OAAQrkD,GACxC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE+wD,GAAK5vD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS2nD,mBAAmBhxD,EAAG+jD,OAAQrkD,GACrC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEixD,GAAK9vD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS6nD,sBAAsBlxD,EAAG+jD,OAAQrkD,GACxC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmxD,GAAKhwD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS+nD,cAAcpxD,EAAG+jD,OAAQrkD,GAChC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmL,GAAKhK,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASgoD,UAAUrxD,EAAG+jD,OAAQrkD,GAC5B,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmL,GAAKhK,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG5E,SAASioD,UAAUtxD,EAAG+jD,OAAQrkD,GAC5B,IAAIyB,EAAI,+BAA+Bk9C,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAEuxD,EAAIpwD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG7E,SAASmoD,iBAAiBxxD,EAAG+jD,OAAQrkD,GACnC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGlD,SAASooD,gBAAgBzxD,EAAG+jD,OAAQrkD,GAClC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASqoD,eAAe1xD,EAAG+jD,OAAQrkD,GACjC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGxD,SAASsoD,YAAY3xD,EAAG+jD,OAAQrkD,GAC9B,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2J,GAAKxI,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASuoD,aAAa5xD,EAAG+jD,OAAQrkD,GAC/B,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoK,GAAKjJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASwoD,aAAa7xD,EAAG+jD,OAAQrkD,GAC/B,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEsK,GAAKnJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASyoD,kBAAkB9xD,EAAG+jD,OAAQrkD,GACpC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE0vD,GAAKvuD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS0oD,kBAAkB/xD,EAAG+jD,OAAQrkD,GACpC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE0vD,EAAIlkD,KAAK8N,MAAMnY,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGjE,SAAS2oD,oBAAoBhyD,EAAG+jD,OAAQrkD,GACtC,IAAIyB,EAAIkvD,UAAUhS,KAAK0F,OAAO/gC,MAAMtjB,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAGkI,QAAU,EAGhC,SAAS4oD,mBAAmBjyD,EAAG+jD,OAAQrkD,GACrC,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAEkyD,GAAK/wD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS8oD,0BAA0BnyD,EAAG+jD,OAAQrkD,GAC5C,IAAIyB,EAAIivD,SAAS/R,KAAK0F,OAAO/gC,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAEkyD,EAAc,KAAR/wD,EAAE,GAAYzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGxD,SAAS+oD,iBAAiBpyD,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAE8K,UAAWpJ,EAAG,GAG7B,SAAS2wD,aAAaryD,EAAG0B,GACvB,OAAO8F,WAAIxH,EAAEgK,WAAYtI,EAAG,GAG9B,SAAS4wD,aAAatyD,EAAG0B,GACvB,OAAO8F,WAAIxH,EAAEgK,WAAa,IAAM,GAAItI,EAAG,GAGzC,SAAS6wD,gBAAgBvyD,EAAG0B,GAC1B,OAAO8F,WAAI,EAAIgrD,QAAQliB,MAAMmiB,SAASzyD,GAAIA,GAAI0B,EAAG,GAGnD,SAASgxD,mBAAmB1yD,EAAG0B,GAC7B,OAAO8F,WAAIxH,EAAEyK,kBAAmB/I,EAAG,GAGrC,SAASixD,mBAAmB3yD,EAAG0B,GAC7B,OAAOgxD,mBAAmB1yD,EAAG0B,GAAK,MAGpC,SAASkxD,kBAAkB5yD,EAAG0B,GAC5B,OAAO8F,WAAIxH,EAAEiL,WAAa,EAAGvJ,EAAG,GAGlC,SAASmxD,cAAc7yD,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAEqK,aAAc3I,EAAG,GAGhC,SAASoxD,cAAc9yD,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAEuK,aAAc7I,EAAG,GAGhC,SAASqxD,0BAA0B/yD,GACjC,IAAI2K,IAAM3K,EAAE4K,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAASqoD,uBAAuBhzD,EAAG0B,GACjC,OAAO8F,WAAIyrD,OAAW3iB,MAAMmiB,SAASzyD,GAAIA,GAAI0B,EAAG,GAGlD,SAASwxD,oBAAoBlzD,EAAG0B,GAC9B,IAAIiJ,IAAM3K,EAAE4K,SAEZ,OADA5K,EAAK2K,KAAO,GAAa,IAARA,IAAawoD,SAAanzD,GAAKmzD,SAAap+B,KAAK/0B,GAC3DwH,WAAI2rD,SAAa7iB,MAAMmiB,SAASzyD,GAAIA,IAA+B,IAAzByyD,SAASzyD,GAAG4K,UAAiBlJ,EAAG,GAGnF,SAAS0xD,0BAA0BpzD,GACjC,OAAOA,EAAE4K,SAGX,SAASyoD,uBAAuBrzD,EAAG0B,GACjC,OAAO8F,WAAI8rD,OAAWhjB,MAAMmiB,SAASzyD,GAAIA,GAAI0B,EAAG,GAGlD,SAAS6xD,kBAAWvzD,EAAG0B,GACrB,OAAO8F,WAAIxH,EAAE0L,cAAgB,IAAKhK,EAAG,GAGvC,SAAS8xD,eAAexzD,EAAG0B,GACzB,OAAO8F,WAAIxH,EAAE0L,cAAgB,IAAOhK,EAAG,GAGzC,SAAS+xD,WAAWzzD,GAClB,IAAIugD,EAAIvgD,EAAEqtD,oBACV,OAAQ9M,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1B/4C,WAAI+4C,EAAI,GAAK,EAAG,IAAK,GACrB/4C,WAAI+4C,EAAI,GAAI,IAAK,GAGzB,SAASmT,oBAAoB1zD,EAAG0B,GAC9B,OAAO8F,WAAIxH,EAAEyuD,aAAc/sD,EAAG,GAGhC,SAASiyD,gBAAgB3zD,EAAG0B,GAC1B,OAAO8F,WAAIxH,EAAEquD,cAAe3sD,EAAG,GAGjC,SAASkyD,gBAAgB5zD,EAAG0B,GAC1B,OAAO8F,WAAIxH,EAAEquD,cAAgB,IAAM,GAAI3sD,EAAG,GAG5C,SAASmyD,mBAAmB7zD,EAAG0B,GAC7B,OAAO8F,WAAI,EAAI8mD,WAAOhe,MAAMif,YAAQvvD,GAAIA,GAAI0B,EAAG,GAGjD,SAASoyD,sBAAsB9zD,EAAG0B,GAChC,OAAO8F,WAAIxH,EAAE+zD,qBAAsBryD,EAAG,GAGxC,SAASsyD,sBAAsBh0D,EAAG0B,GAChC,OAAOoyD,sBAAsB9zD,EAAG0B,GAAK,MAGvC,SAASuyD,qBAAqBj0D,EAAG0B,GAC/B,OAAO8F,WAAIxH,EAAEqvD,cAAgB,EAAG3tD,EAAG,GAGrC,SAASwyD,iBAAiBl0D,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAEkuD,gBAAiBxsD,EAAG,GAGnC,SAASyyD,iBAAiBn0D,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAEgtD,gBAAiBtrD,EAAG,GAGnC,SAAS0yD,6BAA6Bp0D,GACpC,IAAIq0D,IAAMr0D,EAAE2uD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0Bt0D,EAAG0B,GACpC,OAAO8F,WAAIonD,UAAUte,MAAMif,YAAQvvD,GAAIA,GAAI0B,EAAG,GAGhD,SAAS6yD,uBAAuBv0D,EAAG0B,GACjC,IAAIiJ,IAAM3K,EAAE2uD,YAEZ,OADA3uD,EAAK2K,KAAO,GAAa,IAARA,IAAaqkD,YAAYhvD,GAAKgvD,YAAYj6B,KAAK/0B,GACzDwH,WAAIwnD,YAAY1e,MAAMif,YAAQvvD,GAAIA,IAAiC,IAA3BuvD,YAAQvvD,GAAG2uD,aAAoBjtD,EAAG,GAGnF,SAAS8yD,6BAA6Bx0D,GACpC,OAAOA,EAAE2uD,YAGX,SAAS8F,0BAA0Bz0D,EAAG0B,GACpC,OAAO8F,WAAIqnD,UAAUve,MAAMif,YAAQvvD,GAAIA,GAAI0B,EAAG,GAGhD,SAASgzD,cAAc10D,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAEsvD,iBAAmB,IAAK5tD,EAAG,GAG1C,SAASizD,kBAAkB30D,EAAG0B,GAC5B,OAAO8F,WAAIxH,EAAEsvD,iBAAmB,IAAO5tD,EAAG,GAG5C,SAASkzD,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoB90D,GAC3B,OAAQA,EAGV,SAAS+0D,2BAA2B/0D,GAClC,OAAOwL,KAAK8N,OAAOtZ,EAAI,MC3mBV,SAAS4qD,4BAAc1W,YAMpC,OALAwU,yBDea,SAASmC,aAAanC,QACnC,IAAIsM,gBAAkBtM,OAAOuM,SACzBC,YAAcxM,OAAOphD,KACrB6tD,YAAczM,OAAO0M,KACrBC,eAAiB3M,OAAO4M,QACxBC,gBAAkB7M,OAAO8M,KACzBC,qBAAuB/M,OAAOgN,UAC9BC,cAAgBjN,OAAOkN,OACvBC,mBAAqBnN,OAAOoN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACF30D,EAkPF,SAAS40D,mBAAmB12D,GAC1B,OAAOy1D,qBAAqBz1D,EAAE4K,WAlP9BC,EAqPF,SAAS8rD,cAAc32D,GACrB,OAAOu1D,gBAAgBv1D,EAAE4K,WArPzBG,EAwPF,SAAS6rD,iBAAiB52D,GACxB,OAAO61D,mBAAmB71D,EAAEiL,aAxP5BC,EA2PF,SAAS2rD,YAAY72D,GACnB,OAAO21D,cAAc31D,EAAEiL,aA3PvBlL,EAAK,KACLC,EAAKoyD,iBACLxwD,EAAKwwD,iBACL1vC,EAAKiwC,mBACLhpD,EAAK0oD,aACLn9C,EAAKo9C,aACLvvC,EAAKwvC,gBACL7C,EAAKgD,mBACL5yD,EAAK8yD,kBACLxoD,EAAKyoD,cACLnxD,EAoPF,SAASo1D,aAAa92D,GACpB,OAAOq1D,iBAAiBr1D,EAAEgK,YAAc,MApPxCkoD,EAAK4C,oBACLnzD,EAAKozD,2BACLzqD,EAAKwoD,cACLz9C,EAAK09C,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLj1B,EAAK,KACLirB,EAAK,KACLl+C,EAAKooD,kBACL3nD,EAAK4nD,eACLjC,EAAKkC,WACLvK,IAAK2L,sBAGHkC,YACFj1D,EAsOF,SAASk1D,sBAAsBh3D,GAC7B,OAAOy1D,qBAAqBz1D,EAAE2uD,cAtO9B9jD,EAyOF,SAASosD,iBAAiBj3D,GACxB,OAAOu1D,gBAAgBv1D,EAAE2uD,cAzOzB5jD,EA4OF,SAASmsD,oBAAoBl3D,GAC3B,OAAO61D,mBAAmB71D,EAAEqvD,gBA5O5BnkD,EA+OF,SAASisD,eAAen3D,GACtB,OAAO21D,cAAc31D,EAAEqvD,gBA/OvBtvD,EAAK,KACLC,EAAK0zD,oBACL9xD,EAAK8xD,oBACLhxC,EAAKsxC,sBACLrqD,EAAKgqD,gBACLz+C,EAAK0+C,gBACL7wC,EAAK8wC,mBACLnE,EAAKoE,sBACLh0D,EAAKm0D,qBACL7pD,EAAK8pD,iBACLxyD,EAwOF,SAAS01D,gBAAgBp3D,GACvB,OAAOq1D,iBAAiBr1D,EAAEquD,eAAiB,MAxO3C6D,EAAK4C,oBACLnzD,EAAKozD,2BACLzqD,EAAK6pD,iBACL9+C,EAAK++C,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACLr2B,EAAK,KACLirB,EAAK,KACLl+C,EAAKupD,cACL9oD,EAAK+oD,kBACLpD,EAAKqD,cACL1L,IAAK2L,sBAGHwC,QACFv1D,EAkJF,SAASw1D,kBAAkBt3D,EAAG+jD,OAAQrkD,GACpC,IAAIyB,EAAIg1D,eAAe9X,KAAK0F,OAAO/gC,MAAMtjB,IACzC,OAAOyB,GAAKnB,EAAE4wD,EAAIwF,mBAAmBj1D,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAnJ9EwB,EAsJF,SAAS0sD,aAAav3D,EAAG+jD,OAAQrkD,GAC/B,IAAIyB,EAAI80D,UAAU5X,KAAK0F,OAAO/gC,MAAMtjB,IACpC,OAAOyB,GAAKnB,EAAE4wD,EAAIsF,cAAc/0D,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAvJzE0B,EA0JF,SAASysD,gBAAgBx3D,EAAG+jD,OAAQrkD,GAClC,IAAIyB,EAAIo1D,aAAalY,KAAK0F,OAAO/gC,MAAMtjB,IACvC,OAAOyB,GAAKnB,EAAEF,EAAI02D,iBAAiBr1D,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GA3J5E6B,EA8JF,SAASusD,WAAWz3D,EAAG+jD,OAAQrkD,GAC7B,IAAIyB,EAAIk1D,QAAQhY,KAAK0F,OAAO/gC,MAAMtjB,IAClC,OAAOyB,GAAKnB,EAAEF,EAAIw2D,YAAYn1D,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GA/JvEtJ,EAkKF,SAAS23D,oBAAoB13D,EAAG+jD,OAAQrkD,GACtC,OAAOi4D,eAAe33D,EAAGg1D,gBAAiBjR,OAAQrkD,IAlKlDM,EAAKyxD,gBACL7vD,EAAK6vD,gBACL/uC,EAAKqvC,kBACLpoD,EAAKgoD,YACLz8C,EAAKy8C,YACL5uC,EAAK2uC,eACLhC,EAAKoC,kBACLhyD,EAAK0xD,iBACLpnD,EAAKwnD,aACLlwD,EA+HF,SAASk2D,YAAY53D,EAAG+jD,OAAQrkD,GAC9B,IAAIyB,EAAI40D,SAAS1X,KAAK0F,OAAO/gC,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAIs0D,aAAa70D,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAhIxE6oD,EAAKD,mBACLtwD,EAAKwwD,0BACL7nD,EAAKunD,aACLx8C,EAAKw7C,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACL9yB,EAmJF,SAASy5B,gBAAgB73D,EAAG+jD,OAAQrkD,GAClC,OAAOi4D,eAAe33D,EAAGk1D,YAAanR,OAAQrkD,IAnJ9C2pD,EAsJF,SAASyO,gBAAgB93D,EAAG+jD,OAAQrkD,GAClC,OAAOi4D,eAAe33D,EAAGm1D,YAAapR,OAAQrkD,IAtJ9CyL,EAAKkmD,UACLzlD,EAAKwlD,cACLG,EAAKD,UACLpI,IAAK8I,qBAWP,SAAS7H,UAAUhC,UAAWsO,SAC5B,OAAO,SAASnvD,MACd,IAIIvH,EACAyH,IACAE,OANAq8C,UACArkD,GAAK,EACLqjB,EAAI,EACJ5hB,EAAIgnD,UAAU9+C,OAOlB,IAFM/B,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErC5H,EAAIyB,GACqB,KAA5BgnD,UAAU3lC,WAAW9iB,KACvBqkD,OAAOl2C,KAAKs6C,UAAUnlC,MAAMD,EAAGrjB,IACgB,OAA1C8H,IAAMyoD,KAAKlwD,EAAIooD,UAAUtoB,SAASngC,KAAcK,EAAIooD,UAAUtoB,SAASngC,GACvE8H,IAAY,MAANzH,EAAY,IAAM,KACzB2H,OAAS+uD,QAAQ12D,MAAIA,EAAI2H,OAAOJ,KAAME,MAC1Cu8C,OAAOl2C,KAAK9N,GACZgjB,EAAIrjB,EAAI,GAKZ,OADAqkD,OAAOl2C,KAAKs6C,UAAUnlC,MAAMD,EAAGrjB,IACxBqkD,OAAOr5C,KAAK,KAIvB,SAASqtD,SAAS5P,UAAW6P,SAC3B,OAAO,SAASjU,QACd,IAEIkU,KAAMttD,IAFN3K,EAAI6vD,QAAQ,MAGhB,GAFQ8H,eAAe33D,EAAGmoD,UAAWpE,QAAU,GAAI,IAE1CA,OAAO16C,OAAQ,OAAO,KAG/B,GAAI,MAAOrJ,EAAG,OAAO,IAAIuH,KAAKvH,EAAEkyD,GAMhC,GAHI,MAAOlyD,IAAGA,EAAE2J,EAAI3J,EAAE2J,EAAI,GAAW,GAAN3J,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAEixD,EAAI,GAAKjxD,EAAEixD,EAAI,GAAI,OAAO,KAC1B,MAAOjxD,IAAIA,EAAE4wD,EAAI,GACnB,MAAO5wD,GAETi4D,MAD8BttD,KAA9BstD,KAAOtI,QAAQE,QAAQ7vD,EAAEmL,KAAgBwjD,aAC5B,GAAa,IAARhkD,IAAYkkD,UAAU95B,KAAKkjC,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAXj4D,EAAEixD,EAAI,IAClCjxD,EAAEmL,EAAI8sD,KAAK3I,iBACXtvD,EAAEF,EAAIm4D,KAAK5I,cACXrvD,EAAEA,EAAIi4D,KAAKxJ,cAAgBzuD,EAAE4wD,EAAI,GAAK,IAGtCqH,MAD8BttD,KAA9BstD,KAAOD,QAAQnI,QAAQ7vD,EAAEmL,KAAgBP,UAC5B,GAAa,IAARD,IAAY2oD,OAAWv+B,KAAKkjC,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAXj4D,EAAEixD,EAAI,IACnCjxD,EAAEmL,EAAI8sD,KAAKvsD,cACX1L,EAAEF,EAAIm4D,KAAKhtD,WACXjL,EAAEA,EAAIi4D,KAAKntD,WAAa9K,EAAE4wD,EAAI,GAAK,QAE5B,MAAO5wD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAE4wD,EAAI,MAAO5wD,EAAIA,EAAEqV,EAAI,EAAI,MAAOrV,EAAI,EAAI,GAC3D2K,IAAM,MAAO3K,EAAI2vD,QAAQE,QAAQ7vD,EAAEmL,IAAIwjD,YAAcqJ,QAAQnI,QAAQ7vD,EAAEmL,IAAIP,SAC3E5K,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAE4wD,EAAI,GAAK,EAAU,EAAN5wD,EAAEmxD,GAASxmD,IAAM,GAAK,EAAI3K,EAAE4wD,EAAU,EAAN5wD,EAAE+wD,GAASpmD,IAAM,GAAK,GAKzF,MAAI,MAAO3K,GACTA,EAAE2J,GAAK3J,EAAEuxD,EAAI,IAAM,EACnBvxD,EAAEoK,GAAKpK,EAAEuxD,EAAI,IACN5B,QAAQ3vD,IAIVg4D,QAAQh4D,IAInB,SAAS23D,eAAe33D,EAAGmoD,UAAWpE,OAAQhhC,GAO5C,IANA,IAGIhjB,EACAqO,MAJA1O,EAAI,EACJyB,EAAIgnD,UAAU9+C,OACdvJ,EAAIikD,OAAO16C,OAIR3J,EAAIyB,GAAG,CACZ,GAAI4hB,GAAKjjB,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAIooD,UAAU3lC,WAAW9iB,OAIvB,GAFAK,EAAIooD,UAAUtoB,OAAOngC,OACrB0O,MAAQipD,OAAOt3D,KAAKkwD,KAAO9H,UAAUtoB,OAAOngC,KAAOK,MACnCgjB,EAAI3U,MAAMpO,EAAG+jD,OAAQhhC,IAAM,EAAI,OAAQ,OAClD,GAAIhjB,GAAKgkD,OAAOvhC,WAAWO,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LA0zC,QAAQr4B,EAAI+rB,UAAU+K,YAAauB,SACnCA,QAAQpN,EAAIc,UAAUgL,YAAasB,SACnCA,QAAQ12D,EAAIoqD,UAAU6K,gBAAiByB,SACvCM,WAAW34B,EAAI+rB,UAAU+K,YAAa6B,YACtCA,WAAW1N,EAAIc,UAAUgL,YAAa4B,YACtCA,WAAWh3D,EAAIoqD,UAAU6K,gBAAiB+B,aAsLxCrvD,OAAQ,SAAAA,OAASygD,WACf,IAAIzlC,EAAIynC,UAAUhC,WAAa,GAAIsO,SAEnC,OADA/zC,EAAEzY,SAAW,WAAa,OAAOk+C,WAC1BzlC,GAETtU,MAAO,SAAAA,MAAS+5C,WACd,IAAIzmD,EAAIq2D,SAAS5P,WAAa,GAAIsH,WAElC,OADA/tD,EAAEuI,SAAW,WAAa,OAAOk+C,WAC1BzmD,GAETquD,UAAW,SAAAA,UAAS5H,WAClB,IAAIzlC,EAAIynC,UAAUhC,WAAa,GAAI4O,YAEnC,OADAr0C,EAAEzY,SAAW,WAAa,OAAOk+C,WAC1BzlC,GAETstC,SAAU,SAAAA,SAAS7H,WACjB,IAAIzmD,EAAIq2D,SAAS5P,UAAWwH,SAE5B,OADAjuD,EAAEuI,SAAW,WAAa,OAAOk+C,WAC1BzmD,IClVFmpD,CAAa3W,YACtB4b,WAAapH,yBAAOhhD,OACRghD,yBAAOt6C,MACnB2hD,UAAYrH,yBAAOqH,UACnBC,SAAWtH,yBAAOsH,SACXtH,yBAjBTkC,EACEqK,SAAU,SACV3tD,KAAM,aACN8tD,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7EvuD,KAAK/F,UAAU02D,aAEzBnI,UARoB,0BCMV,IAAIxoD,KAAK,6BAEnByoD,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAAS/wD,UAAK1G,GACZ,OAAO,IAAI2G,KAAK3G,GAGlB,SAASivC,YAAOjvC,GACd,OAAOA,aAAa2G,MAAQ3G,GAAK,IAAI2G,MAAM3G,GAGtC,SAAS43D,SAAS7sD,KAAMX,MAAOitD,KAAMttD,IAAKuiD,KAAMD,OAAQF,OAAQH,YAAallD,QAClF,IAAIirC,MAAQ5yB,WAAWinC,oBAAeC,YAClCtT,OAAShB,MAAMgB,OACfh1B,OAASg0B,MAAMh0B,OAEf85C,kBAAoB/wD,OAAO,OAC3BgxD,aAAehxD,OAAO,OACtBixD,aAAejxD,OAAO,SACtBkxD,WAAalxD,OAAO,SACpBmxD,UAAYnxD,OAAO,SACnBoxD,WAAapxD,OAAO,SACpBmvD,YAAcnvD,OAAO,MACrB6rD,WAAa7rD,OAAO,MAEpBqxD,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACdztD,IAAM,EAAQ0tD,mBACd1tD,IAAM,EAAI,EAAI0tD,mBACfJ,KAAO,EAAQnL,oBAChB9hD,MAAQ,EAAQstD,gBAChBttD,MAAQ,EAAI,EAAIstD,gBACf3sD,KAAO,EAAQ4sD,eAGpB,SAASpN,WAAW7jD,MAClB,OAAQylD,OAAOzlD,MAAQA,KAAOmxD,kBACxBxL,OAAO3lD,MAAQA,KAAOoxD,aACtBxL,KAAK5lD,MAAQA,KAAOqxD,aACpBhuD,IAAIrD,MAAQA,KAAOsxD,WACnB5tD,MAAM1D,MAAQA,KAAQ2wD,KAAK3wD,MAAQA,KAAOuxD,UAAYC,WACtDntD,KAAKrE,MAAQA,KAAOuvD,YACpBtD,YAAYjsD,MAGpB,SAAS0xD,aAAa3N,SAAUjmD,MAAO4qC,KAAMC,MAM3C,GALgB,MAAZob,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIhE,OAAS77C,KAAKwpB,IAAIgb,KAAO5qC,OAASimD,SAClC3rD,EAAI4vC,SAAS,SAAS5vC,GAAK,OAAOA,EAAE,KAAOgwC,MAAMqpB,cAAe1R,QAChE3nD,IAAMq5D,cAAc1vD,QACtB4mC,KAAOW,SAASxrC,MAAQmzD,aAAcvoB,KAAOuoB,aAAclN,UAC3DA,SAAW1/C,MACFjM,GAETuwC,MADAvwC,EAAIq5D,cAAc1R,OAAS0R,cAAcr5D,EAAI,GAAG,GAAKq5D,cAAcr5D,GAAG,GAAK2nD,OAAS3nD,EAAI,EAAIA,IACnF,GACT2rD,SAAW3rD,EAAE,KAEbuwC,KAAOzkC,KAAK8Q,IAAIs0B,SAASxrC,MAAO4qC,KAAMqb,UAAW,GACjDA,SAAWuB,aAIf,OAAe,MAAR3c,KAAeob,SAAWA,SAASlkC,MAAM8oB,MAsClD,OAnCA0C,MAAMgB,OAAS,SAASxoC,GACtB,OAAO,IAAI5D,KAAKosC,OAAOxoC,KAGzBwnC,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,OAASsV,OAAO/O,cAAI/P,KAAKqpB,EAAG2mB,cAAWlxB,SAAS/O,IAAItI,YAGvEqrC,MAAMpC,MAAQ,SAAS8a,SAAUpb,MAC/B,IAIIrvC,EAJAZ,EAAI2e,SACJmhC,GAAK9/C,EAAE,GACP+/C,GAAK//C,EAAEA,EAAEqJ,OAAS,GAClB7I,EAAIu/C,GAAKD,GAKb,OAHIt/C,IAAGI,EAAIk/C,GAAIA,GAAKC,GAAIA,GAAKn/C,GAE7BA,GADAA,EAAIo4D,aAAa3N,SAAUvL,GAAIC,GAAI9P,OAC3BrvC,EAAEsI,MAAM42C,GAAIC,GAAK,MAClBv/C,EAAII,EAAEwrB,UAAYxrB,GAG3B+xC,MAAMwY,WAAa,SAAS7a,MAAO6X,WACjC,OAAoB,MAAbA,UAAoBgD,WAAazjD,OAAOygD,YAGjDxV,MAAMyY,KAAO,SAASC,SAAUpb,MAC9B,IAAIjwC,EAAI2e,SACR,OAAQ0sC,SAAW2N,aAAa3N,SAAUrrD,EAAE,GAAIA,EAAEA,EAAEqJ,OAAS,GAAI4mC,OAC3DtxB,OAAOysC,KAAKprD,EAAGqrD,WACf1Y,OAGRA,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAO6lB,SAAS7sD,KAAMX,MAAOitD,KAAMttD,IAAKuiD,KAAMD,OAAQF,OAAQH,YAAallD,UAGlFirC,MAGM,IAAAsmB,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAYnxC,QAAQ,IAAIpX,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1JiyD,WAAA,SAAS73D,GACtB,OAAOA,EAAEqO,MAAM,SAASJ,IAAI,SAASwuB,GACnC,MAAO,IAAMA,KCAFwkB,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECP6W,cAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArEoY,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1EoY,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAASqY,KAAKxwD,OACZ,IAAI/H,EAAI+H,MAAMG,OACd,OAAO,SAASzI,GACd,OAAOsI,MAAMsC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAIlb,EAAI,EAAGqK,KAAK8N,MAAM1Y,EAAIO,OAI7Cu4D,KAAK9W,WAAO,qgDAER8W,KAAK9W,WAAO,qgDAEV8W,KAAK9W,WAAO,qgDAEb8W,KAAK9W,WAAO,qgDCbjB,SAAS+W,WAAWC,cACjC,IAAItO,GAAK,EACLC,GAAK,EACLjE,OAAQ,EAEZ,SAAS3U,MAAMvU,GACb,IAAIx9B,GAAKw9B,EAAIktB,KAAOC,GAAKD,IACzB,OAAOsO,aAAatS,MAAQ97C,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAGzb,IAAMA,GAmB5D,OAhBA+xC,MAAMh0B,OAAS,SAASuK,GACtB,OAAOnc,UAAU1D,QAAUiiD,IAAMpiC,EAAE,GAAIqiC,IAAMriC,EAAE,GAAIypB,QAAU2Y,GAAIC,KAGnE5Y,MAAM2U,MAAQ,SAASp+B,GACrB,OAAOnc,UAAU1D,QAAUi+C,QAAUp+B,EAAGypB,OAAS2U,OAGnD3U,MAAMinB,aAAe,SAAS1wC,GAC5B,OAAOnc,UAAU1D,QAAUuwD,aAAe1wC,EAAGypB,OAASinB,cAGxDjnB,MAAMC,KAAO,WACX,OAAO+mB,WAAWC,cAAcj7C,QAAQ2sC,GAAIC,KAAKjE,MAAMA,QAGlD4D,UAAUvY,OC5BJ,IAAAknB,8BAAA,SAAS1R,WAEtB,IADA,IAAIhnD,EAAIgnD,UAAU9+C,OAAS,EAAI,EAAGu5C,OAAS,IAAIpyC,MAAMrP,GAAIzB,EAAI,EACtDA,EAAIyB,GAAGyhD,OAAOljD,GAAK,IAAMyoD,UAAUnlC,MAAU,EAAJtjB,EAAa,IAAJA,GACzD,OAAOkjD,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPkX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAO1wD,OAAS,KCAzC0wD,YAAS,IAAIvpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,+BAES8W,cAAKK,aCZTA,YAAS,IAAIvpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,+BAES8W,cAAKK,aCZTA,YAAS,IAAIvpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,+BAES8W,cAAKK,aCALL,cAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCES8W,cAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCES8W,cAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCES8W,gBAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCES8W,gBAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCES8W,kBAZK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIgzC,gCCAS8W,cAVK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIgzC,gCCES8W,cAVK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIgzC,gCCES8W,cAVK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIgzC,gCCES8W,cAVK,IAAIlpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIgzC,gCCES8W,gBA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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    let newRowDiffSet = [];\n    const rejRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let lastInsertedValueRej = -1;\n    let { mode } = config;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        fields[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    const checker = mode === FilteringMode.INVERSE ? index => !selectorHelperFn(index) :\n        index => selectorHelperFn(index);\n\n    const passFn = (i) => {\n        if (checker(i)) {\n            generateRowDiffset(newRowDiffSet, i, lastInsertedValue);\n            lastInsertedValue = i;\n            return true;\n        }\n        return false;\n    };\n\n    if (mode === FilteringMode.ALL) {\n        rowDiffsetIterator(rowDiffset, (i) => {\n            if (!passFn(i)) {\n                generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n                lastInsertedValueRej = i;\n            }\n        });\n        return [newRowDiffSet.join(','), rejRowDiffSet.join(',')];\n    }\n\n    rowDiffsetIterator(rowDiffset, passFn);\n    return [newRowDiffSet.join(',')];\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const [rowDiffset, rejRowDiffSet] = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace()._cachedValueObjects,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    let oDm = cloned;\n    if (selectConfig.mode === FilteringMode.ALL) {\n        const rejCloned = sourceDm.clone(cloneConfig.saveChild);\n        rejCloned._rowDiffset = rejRowDiffSet;\n        rejCloned.__calculateFieldspace().calculateFieldsConfig();\n        persistDerivations(\n            sourceDm,\n            rejCloned,\n            DM_DERIVATIVES.SELECT,\n             { config: selectConfig },\n              selectFn\n        );\n        oDm = [cloned, rejCloned];\n    }\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n\n    return oDm;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._dataObjects = this._parent._dataObjects;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__fn = fn.__callBack;\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","const sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updatedata;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updatedata = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    if (namespace) {\n        !context._listeners.get(namespace) && (context._listeners.set(namespace, new Map()));\n        const listeners = context._listeners.get(namespace);\n\n        if (!key) {\n            key = listeners.size;\n        }\n        listeners.set(key, fn);\n    } else {\n        key = key || context._listeners.size;\n        context._listeners.set(key, fn);\n    }\n};\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\nconst initObject = (obj, props) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = {};\n        }\n        obj = obj[prop];\n    });\n};\n\nconst registerListener = (context, type, config) => {\n    const registeredListeners = context._registeredListeners;\n    const { callBack, instantCall, namespaceInf, props } = config;\n    const { namespace: ns, subNamespace } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => {\n        const retCallBack = (...params) => {\n            let values = params;\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const commits = context._savedCommits;\n                const contextMap = context._contextMap[namespaceVal];\n                const propListenerMap = context._propListenerMap;\n                const contextsObj = {};\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop];\n                    for (const nm in commitsObj) {\n                        const fnInf = propListenerMap[prop][type][nm];\n                        if (fnInf.fns > 0) {\n                            const propObj = listeners[nm];\n                            for (const key of propObj.keys()) {\n                                const contextInst = contextMap[key];\n                                contextsObj[key] = {\n                                    context: contextInst,\n                                    deps: propObj.get(key).depProps\n                                };\n                                fnInf.fns--;\n                            }\n                        }\n\n                        if (fnInf.fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                    }\n                });\n                for (const key in contextsObj) {\n                    const { deps, context: contextInst } = contextsObj[key];\n                    values = params.map((param, i) => {\n                        const prop = propNames[i];\n                        return [param[0] !== null ? param[0][deps[prop]] : param[0], param[1] !== null ?\n                            param[1][deps[prop]] : param[1]];\n                    });\n                    callBack(contextInst, ...values);\n                }\n            } else {\n                callBack(...values);\n            }\n        };\n        retCallBack.__callBack = callBack;\n        return retCallBack;\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n    const propListenerMap = context._propListenerMap;\n    if (ns) {\n        initObject(registeredListeners, [ns]);\n        props.forEach((prop) => {\n            const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n            subNamespace && subNamespaces.push(subNamespace);\n            registeredListeners[ns][prop] = {\n                subNamespace: subNamespaces,\n                allProps: props\n            };\n\n            let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n            fns++;\n            initObject(propListenerMap, [prop, type]);\n            propListenerMap[prop][type] = {\n                fns,\n                oriFns: fns\n            };\n        });\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst types = ['next', 'on'];\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._lockCommit = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._modelLocked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._modelLocked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._lockCommit[prop] = true;\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        this.model.lock();\n        this._modelLocked = true;\n        const commitsObj = this._commits;\n        props.forEach((prop) => {\n            this._lockCommit[prop] = false;\n            const queuedProps = {};\n            const commits = commitsObj[prop];\n            commits.forEach((params) => {\n                const [propName, value, namespace] = params;\n                if (namespace) {\n                    !queuedProps[propName] && (queuedProps[propName] = {});\n                    !queuedProps[propName][namespace] && (queuedProps[propName][namespace] = {});\n                    Object.assign(queuedProps[propName][namespace], value);\n                }\n            });\n            commits.forEach((params) => {\n                const [propName, value, namespace] = params;\n                if (propName in queuedProps) {\n                    this.commit(propName, queuedProps[propName][namespace], namespace);\n                } else {\n                    this.commit(propName, value, namespace);\n                }\n            });\n            delete commitsObj[prop];\n        });\n        this._modelLocked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    registerComponent (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n        initObject(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = types.reduce((acc, type) => {\n                acc[type] = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                return acc;\n            }, {});\n            let { subNamespace } = obj;\n            const { allProps } = obj;\n            if (subNamespace instanceof Array) {\n                subNamespace = subNamespace.length ? subNamespace : [sns];\n                subNamespace.forEach((ns) => {\n                    let names = [ns];\n                    let depProps = allProps.reduce((acc, prop) => {\n                        acc[prop] = ns;\n                        return acc;\n                    }, {});\n                    if (ns instanceof Function) {\n                        const nsObj = ns(context);\n                        names = retrieveNamespaces(nsObj, key);\n                        depProps = allProps.reduce((acc, prop) => {\n                            acc[prop] = nsObj[prop];\n                            return acc;\n                        }, {});\n                    }\n\n                    names.forEach((nm) => {\n                        if (!obj[nm]) {\n                            obj[nm] = new Map();\n                        }\n                        obj[nm].set(sns, {\n                            depProps\n                        });\n                        const size = obj[nm].size;\n                        types.forEach((type) => {\n                            if (propFns[type] > 0) {\n                                initObject(propObj, [type, nm]);\n                                const fns = size > 1 ? propObj[type][nm].fns + 1 : (propObj[type][nm].fns !== undefined ?\n                                    propObj[type][nm].fns : propFns[type]);\n                                propObj[type][nm] = {\n                                    fns,\n                                    oriFns: fns\n                                };\n                            }\n                        });\n                    });\n                });\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace) {\n        if (this._lockCommit[propName]) {\n            !this._commits[propName] && (this._commits[propName] = []);\n            this._commits[propName].push([propName, value, namespace]);\n            return this;\n        }\n        let sanitizedVal = value;\n        const propListenerMap = this._propListenerMap[propName];\n        if (namespace) {\n            if (this._modelLocked) {\n                !this._queuedProps[propName] && (this._queuedProps[propName] = {});\n                this._queuedProps[propName][namespace] = value;\n                sanitizedVal = this._queuedProps[propName];\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n            if (propListenerMap) {\n                types.forEach((type) => {\n                    if (propListenerMap[type]) {\n                        propListenerMap[type][namespace].fns = propListenerMap[type][namespace].oriFns;\n                    }\n                });\n            }\n        }\n        initObject(this._savedCommits, [propName, 'next']);\n        initObject(this._savedCommits, [propName, 'on']);\n        this._savedCommits[propName].next[namespace] = true;\n        this._savedCommits[propName].on[namespace] = true;\n        // check if appropriate enum has been used\n        this.model.prop(propName, sanitizedVal);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        registerListener(this, 'next', {\n            namespaceInf,\n            callBack,\n            instantCall,\n            props\n        });\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        registerListener(this, 'on', {\n            namespaceInf,\n            props,\n            callBack,\n            instantCall\n        });\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listeners = this._listeners.get(id);\n        if (key) {\n            const fn = this._listeners.get(key);\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            this._listeners.set(id, []);\n        }\n        return this;\n    }\n\n    removeFromNamespace (subNamespace, namespace, props) {\n        const { _propListenerMap: propsMap, _registeredListeners: listenerMap, _contextMap: contextMap } = this;\n        const listenersObj = listenerMap[namespace];\n        // for (const prop in propsMap) {\n        //     const propsObj = propsMap[prop];\n        //     types.forEach((type) => {\n        //         const obj = propsObj[type];\n        //         for (const ns in obj) {\n        //             if (ns === subNamespace) {\n        //                 delete obj[ns];\n        //             }\n        //         }\n        //     });\n        // }\n        for (const prop in listenersObj) {\n            const nsObj = listenersObj[prop];\n            for (const ns in nsObj) {\n                const snsMap = nsObj[ns];\n                for (const sns of snsMap.keys()) {\n                    if (sns === subNamespace) {\n                        snsMap.delete(sns);\n                        types.forEach((type) => {\n                            const fnInf = getObjProp(propsMap, prop, type, ns);\n                            if (fnInf) {\n                                fnInf.oriFns--;\n                                fnInf.fns = fnInf.oriFns;\n                                if (fnInf.oriFns <= 0) {\n                                    delete propsMap[prop][type][ns];\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = context.get(nsProp, subNamespace);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n``\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === DATA_TYPE.STRING) {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.get(nsProp, subNamespace);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                        } else {\n                            context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                        }\n                        return holder;\n                    }\n                    // No parameters are passed hence its a getter\n                    return context.get(nsProp, subNamespace);\n                })(store, conf.meta, nameSpaceProp, subNamespace);\n            }\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const { sanitization, preset, onset } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === DATA_TYPE.STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Returns the sort function based on the type of field\n * @param {number|string} a first value\n * @param {number|string} b second value\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {string} subType Field subtype\n * @return {Function} Sort function\n */\nconst getAppropriateSortingFn = (a, b, sortOrder, subType) => {\n    if (typeof sortOrder === DATA_TYPE.FUNCTION) {\n        return sortOrder(a, b);\n    }\n    if (subType === DimensionSubtype.TEMPORAL) {\n        return sortOrder === SORT_ORDER_ASCENDING ? a - b : b - a;\n    }\n    return sortOrder === SORT_ORDER_ASCENDING ? a.localeCompare(b) : b.localeCompare(a);\n};\n\n/**\n * Sort field based on it's subtype and sorting order\n * @param {string} subType Field subtype\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {Array} firstVal First sort parameter\n * @param {number} secondVal Second sort parameter\n * @return {Function|null} Sorting function\n*/\nconst sortFieldByType = (subType, sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType !== DATA_TYPE.STRING && sortOrderType !== DATA_TYPE.FUNCTION) {\n        return null;\n    }\n    if (sortOrderType === DATA_TYPE.STRING &&\n        sortOrder !== SORT_ORDER_ASCENDING &&\n        sortOrder !== SORT_ORDER_DESCENDING) {\n        return null;\n    }\n    if (subType === DimensionSubtype.TEMPORAL || subType === DimensionSubtype.CATEGORICAL) {\n        return getAppropriateSortingFn(firstVal, secondVal, sortOrder, subType);\n    }\n    return null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const layers = this.firebolt.context.layers().filter(layer => layer.config().groupId === formalName);\n            layers.forEach((layer) => {\n                const linkedLayer = this.firebolt.context.getLayerByName(layer.config().owner);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                console.log(transformedDataModel.getData().data);\n                layer.data(transformedDataModel);\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (data && encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                        context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        // this.data(data);\n        this.axes(axes);\n        // this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return [...listenerMap, {\n            type: 'registerChangeListener',\n            props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`,\n                ...['x', 'y'].map(type => `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`)],\n            listener: (context, [, data]) => {\n                if (data) {\n                    renderLayer(context);\n                }\n            },\n            subNamespace: (context) => {\n                const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                return {\n                    [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`]: namespace,\n                    [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`]: `${unitColIndex}0`,\n                    [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`]: `${unitRowIndex}0`\n                };\n            }\n        }];\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.registerComponent(namespace, 'layer', this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return (() => ({\n            transform: {\n                type: 'identity'\n            }\n        }))();\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace } = this.metaInf();\n        this.store().removeFromNamespace(namespace, 'layer');\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const uid = d.rowId;\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                enter: {},\n                update: {\n                    angle0: resolvedEncodings.angle0,\n                    angle: resolvedEncodings.angle,\n                    radius0: resolvedEncodings.radius0,\n                    radius: resolvedEncodings.radius\n                },\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n});\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n});\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = () => ({\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n});\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortFieldByType\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        console.log('unionDomain');\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n                    const subType = fieldsObj[axisType][key].subtype();\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortFieldByType(subType, sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, sortFieldByType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const fieldsSorted = Object.keys(config.sort);\n    const allFacetsFields = facets.map(facet => `${facet}`);\n    const validFacets = fieldsSorted.filter(field => allFacetsFields.includes(field));\n\n    validFacets.forEach((facetName) => {\n        const facetField = facets.find(facet => `${facet}` === facetName);\n        const facetSortOrder = config.sort[facetName];\n        const subType = facetField.subtype();\n        const index = facets.indexOf(facetField);\n\n        facetSortOrder && keys.sort((a, b) => sortFieldByType(subType, facetSortOrder, a[index], b[index]));\n    });\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n    const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    const { data, schema } = propModel.getData();\n    let rejectionModel;\n    const entryRowIds = [];\n    const exitRowIds = [];\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store)\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.measurement(measurement).data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, getObjProp, defaultValue, temporalFields } from 'muze-utils';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\nimport { defaultConfig } from './default-config';\nimport { sanitizeLayerDef, getValuesMap, transformDataModels } from './helper';\nimport { createGridLineLayer } from './helper/grid-lines';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    // [CONFIG]: {\n    //     value: null,\n    //     sanitization: (context, config, oldConfig) => (\n    //         mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n    //     ),\n    //     onset: (context, config) => {\n    //         if (config) {\n    //             config && context.firebolt().config(config.interaction);\n    //             createGridLineLayer(context);\n    //         }\n    //     }\n    // },\n    // [LAYERDEFS]: {\n    //     value: null,\n    //     preset: (context, layerDef) => sanitizeLayerDef(layerDef),\n    //     onset: (context, layerDefs) => {\n    //         const fieldsVal = context.fields();\n    //         if (layerDefs && fieldsVal) {\n    //             removeExitLayers(layerDefs, context);\n    //             context.addLayer(layerDefs);\n    //             const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n    //             ['x', 'y'].forEach((type) => {\n    //                 const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n    //                 axisArr.forEach((axis) => {\n    //                     axis.config({\n    //                         adjustRange\n    //                     });\n    //                 });\n    //             });\n    //             context._lifeCycleManager.notify({\n    //                 client: context.layers(),\n    //                 action: 'initialized',\n    //                 formalName: 'layer'\n    //             });\n    //         }\n    //     }\n    // },\n    // [TRANSFORM]: {\n    //     value: null\n    // },\n    // [LAYERS]: {\n    //     value: null\n    // },\n    // [DATA]: {\n    //     value: null,\n    //     preset: (context, data) => {\n    //         context._cachedValuesMap = ((model) => {\n    //             let valuesMap = null;\n    //             return () => {\n    //                 if (valuesMap) {\n    //                     return valuesMap;\n    //                 }\n    //                 valuesMap = getValuesMap(model, context);\n    //                 return valuesMap;\n    //             };\n    //         })(data);\n\n    //         if (context._cache) {\n    //             const cachedData = context.cachedData();\n    //             context.cachedData([...cachedData, data]);\n    //         } else {\n    //             const oldData = context.cachedData()[0];\n    //             oldData && oldData.unsubscribe('propagation');\n    //             context.cachedData([data]);\n    //         }\n\n    //         const axesObj = context.axes();\n    //         const timeDiffs = {};\n    //         const timeDiffsByField = {};\n\n    //         Object.entries(temporalFields(data)).forEach(([fieldName, fieldObj]) => {\n    //             timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n    //         });\n\n    //         Object.entries(context.fields()).forEach(([type, [field]]) => {\n    //             if (field) {\n    //                 const timeDiff = timeDiffsByField[`${field}`];\n    //                 if (timeDiff) {\n    //                     timeDiffs[type] = timeDiff;\n    //                     axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n    //                 }\n    //             }\n    //         });\n\n    //         context._timeDiffsByField = timeDiffsByField;\n    //         context._timeDiffs = timeDiffs;\n    //         const dataModel = context.data();\n    //         context.transformedData(transformDataModels(context.transform(), dataModel));\n    //     },\n    //     onset: (context, data) => {\n    //         const firebolt = context.firebolt();\n    //         firebolt.createSelectionSet(data.getUids());\n    //         firebolt.initializeSideEffects();\n    //         const originalData = context.cachedData()[0];\n    //         firebolt.attachPropagationListener(originalData);\n    //         if (!context._locked) {\n    //             context.unlockModel();\n    //         }\n    //     }\n    // },\n    // [TRANSFORMEDDATA]: {\n    //     value: null\n    // },\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n\n    // store.registerChangeListener([`local.units.${DATA}`], () => {\n    //     if (!firebolt.context.mount()) {\n    //         const originalData = firebolt.context.cachedData()[0];\n    //         originalData.unsubscribe('propagation');\n    //     }\n    // }, false, context.metaInf());\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return [...listenerMap.map((d) => {\n            d.props = d.props.map(d => `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${d}`);\n            return d;\n        }), {\n            type: 'registerImmediateListener',\n            props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n            listener: calculateDomainListener\n        }, {\n            type: 'registerChangeListener',\n            props: ['x', 'y'].map(type => `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`),\n            listener: (context) => {\n                attachDataToGridLineLayers(context);\n            },\n            subNamespace: (context) => {\n                const { rowIndex, colIndex } = context.metaInf();\n                return {\n                    [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`]: `${colIndex}0`,\n                    [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`]: `${rowIndex}0`\n                };\n            }\n        }];\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const metaInf = this.metaInf();\n            store.registerComponent(metaInf.namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: metaInf.namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[namespace] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().removeFromNamespace(this.metaInf().namespace, this.constructor.formalName());\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        [...this.layers(), ...this._gridLines, ...this._gridBands].forEach((layer) => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        sortFacetFields(rowFacets, rowKeys, globalConfig);\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        sortFacetFields(colFacets, columnKeys, globalConfig);\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    const formattedColKeys = formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n                    formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    let listeners = VisualUnit.getListeners();\n    listeners.forEach((listenerInf) => {\n        store[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n            namespace: VisualUnit.formalName(),\n            subNamespace: listenerInf.subNamespace\n        });\n    });\n\n    listeners = BaseLayer.getListeners();\n    listeners.forEach((listenerInf) => {\n        store[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n            namespace: 'layer',\n            subNamespace: listenerInf.subNamespace\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}