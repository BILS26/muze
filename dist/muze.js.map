{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/autoType.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/dataConverterStore.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/autoCoverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/dsvArrayConverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/dsvStringConverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/jsonConverter.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/converter/model/dataConverter.js","webpack://muze/webpack://DataModel/src/converter/utils/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/utils/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/utils/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/utils/flat-json.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field-registry.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-mixin.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-mixin.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text-mixin.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/helper.js","webpack://muze/./packages/visual-layer/src/layers/point/point-mixin.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-mixin.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick-mixin.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/visual-layer/src/index.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/muze-firebolt/src/registry.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/firebolt/behaviours/brush.js","webpack://muze/./packages/visual-unit/src/enums/behaviours.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/visual-group/src/encoder/props.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","autoType","number","trim","NaN","isNaN","test","Date","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","dsv","parse","parseRows","format","formatBody","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","inferColumns","rows","columnSet","row","column","pad","width","length","Array","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","formatYear","year","delimiter","reFormat","RegExp","DELIMITER","text","f","N","I","eof","eol","token","j","preformatBody","formatValue","formatRow","convert","customConverter","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","_autoType__WEBPACK_IMPORTED_MODULE_3__","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","DataConverterStore","_classCallCheck","this","store","Map","converters","_getDefaultConverters","DSVStringConverter","DSVArrayConverter","JSONConverter","AutoDataConverter","_this","arguments","converter","set","type","DataConverter","has","converterStore","getStore","_possibleConstructorReturn","__proto__","getPrototypeOf","DataFormat","AUTO","data","schema","options","DSV_ARR","DSVArr","DSV_STR","DSVStr","FLAT_JSON","FlatJSON","_dataConverterStore__WEBPACK_IMPORTED_MODULE_0__","_model_dataConverter__WEBPACK_IMPORTED_MODULE_1__","_type","Error","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","dataFormat","detectDataFormat","arr","schemaFields","unitSchema","firstRowHeader","push","columnMajor","headers","headerMap","reduce","acc","h","fields","field","schemaField","headIndex","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","d3Dsv","_utils__WEBPACK_IMPORTED_MODULE_0__","header","insertionIndex","schemaFieldsName","item","DataModel","_ref","_len","args","_key","_onPropagation","Relation","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","uids","fieldNames","e","fmtFieldIdx","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","groupBy","persistDerivations","defaultReducer","reducerStore","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","Value","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","sanitizeUnitSchema","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","createFields","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","getRootDataModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","getRootGroupByModel","model","addToPropNamespace","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","createBinnedFieldData","binnedData","bins","binField","_field_creator__WEBPACK_IMPORTED_MODULE_7__","FieldType","DIMENSION","subtype","DimensionSubtype","BINNED","serialize","getSchema","dimensionArr","reducerFn","defConfig","FilteringMode","NORMAL","splitWithSelect","uniqueFields","commonFields","fieldConfig","allFields","normalizedProjFieldSets","fieldSet","getNormalizedProFields","splitWithProject","InvalidAwareTypes","fieldRegistry","CATEGORICAL","TEMPORAL","MEASURE","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","MeasureSubtype","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_converter__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_constants__WEBPACK_IMPORTED_MODULE_6__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_7__","_package_json__WEBPACK_IMPORTED_MODULE_8__","_fields__WEBPACK_IMPORTED_MODULE_9__","Operators","compose","bin","select","project","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","pkg","Stats","DateTimeFormatter","FieldsUtility","createUnitFieldFromPartial","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","build","dataColumn","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","getUniqueId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","Dimension","binsArr","BinnedParser","Categorical","hash","Set","domain","CategoricalParser","Continuous","Measure","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","ContinuousParser","Field","_cachedDomain","calculateDataDomain","FieldTypeRegistry","_fieldType","dimension","registerDefaultFields","Temporal","description","displayName","_params","_context","_schema","_data","_partialField","PartialField","_dimension__WEBPACK_IMPORTED_MODULE_0__","_measure__WEBPACK_IMPORTED_MODULE_1__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_2__","_field_registry__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","unit","defAggFn","defaultReducerName","numberFormat","formatNumber","FieldParser","val","String","result","matched","parsedVal","parseFloat","TemporalParser","_dtf","nativeDate","getNativeDate","parser","_sanitize","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","parsedDatum","prepareSelectionData","resp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","iterator","done","_ref2","err","prepareJoinData","formattedValue","rawValue","updateFields","_ref3","fieldStoreName","_ref4","colIdentifier","collID","partialFieldMap","newFields","coll","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","_defineProperty","_selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","rowSplitDiffsetIterator","fieldStoreObj","splitRowDiffset","dimensionMap","dimensionSet","keys","selectHelper","clonedDm","selectFn","formattedFieldsData","rawFieldsData","selectorHelperFn","cloneWithAllFields","getKey","len","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","modelFieldsConfig","dataModel","keyFn","dataObj","dimensions","dLen","indices","measures","fieldsSpace","v","valuesMap","internalValue","present","every","some","_selectHelper","clonedDMs","cloned","derivation","derivationFormula","addDiffsetToClonedDm","selectConfig","cloneWithSelect","cloneConfig","extraCloneDm","setOfRowDiffsets","cloneWithProject","projField","projectionSet","actualProjField","projFieldSet","projFields","extend2","validateUnitSchema","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","defaultConfig","_converter$convert","_converter$convert2","nameSpace","valueObjects","fieldInSchema","getDerivationArguments","applyExistingOperationOnModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","find","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref5","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","sourceNamespace","normalizedProjField","from","getNumberFormattedVal","require","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","getCommonSchema","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","isArrEqual","prepareDataHelper","addData","hashData","schemaName","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","isArray","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","getFieldArr","getReducerObj","defReducer","measureName","existingDataModel","sFieldArr","reducerObj","dbName","measureArr","hashMap","rowCount","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","a1","b1","mergeSort","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","getSortFn","dataType","sortType","retFunc","groupData","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","applyStandardSort","sortMeta","isCallable","sortingFn","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","nMap","sDetial","groupSortingIdx","standardSortingDetails","groupSortingDetails","applyGroupSort","detail","sortedGroupMap","nextMap","shift","pop","_export__WEBPACK_IMPORTED_MODULE_0__","source","_dataFormat","_fieldStoreName","_fieldspace","joinWith","unionWith","differenceWith","_helper__WEBPACK_IMPORTED_MODULE_2__","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","convertToNativeDate","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isObject","isString","uniqueValues","getTime","arr1","arr2","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","reducer","__unregister","configurable","writable","_formattedValue","_internalValue","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","resolve","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","sin","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","POLAR","CARTESIAN","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","dataSelect","idFn","STRING","FUNCTION","HTMLElement","common_utils_typeof","random","checkExistence","nonExistentKeys","sanitizeIP","typeObj","htmlElem","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getExtremePoint","points","compareValue","minOrMax","extremePoint","minOrMaxVal","getMinPoint","getMaxPoint","getNearestValue","filterData","getWindow","cancelAnimFrame","cancelAnimationFrame","capitalizeFirst","txt","getMinDiff","uniqueVals","getQualifiedClassName","cls","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","getArraySum","total","isEqual","oldVal","newVal","arraysEqual","is","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","registerImmediateListener","isHTMLElem","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","mergedSelection","exitSelection","getObjects","inst","interpolateArray","fitCount","linearInterpolate","atPoint","springFactor","tmp","angleToRadian","angle","replaceCSSPrefix","numberInterpolator","interpolateNumber","colorInterpolator","interpolateRgb","hslInterpolator","interpolateHslLong","transformColors","piecewiseInterpolator","hue2rgb","hslToRgb","rgbToHsv","hsvToRgb","hexToHsv","detectColor","col","assembleModelFromIdentifiers","fieldMap","_loop2","temp","cIdx","getDataModelFromRange","hasBarLayer","selFields","selFn","fieldValue","isFieldSelected","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","registerListeners","listenerMap","propListenerMap","namespace","mapObj","propType","listenerFn","listener","isValidValue","escapeHTML","htmlEscapes","&","<",">","\"","'","/","transposeArray","extendsClass","extendsFrom","found","concatModels","dataObj1","dataObj2","data1","data2","schema1","schema2","tuples1","tuples2","commonTuples","_loop3","row1","row2","dim1Values","dim2Values","dm1Key","dm2Key","commonSchema","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","formatAs","temporalFields","filteredFields","_ref6","lookupWhat","lookupDetails","resolvable","lookupTarget","depArr","deps","nextAnimFrame","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","sortCategoricalField","sortOrderType","_accessors","fn1","fn2","partition","mix","superclass","with","_with","mixins","mixin","componentRegistry","comps","reg","regObj","register","customKey","formalName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","appendElement","element1","element2","setElementAttrs","attrs","setAttrs","addClass","removeClass","setStyles","styles","createElements","clipElement","measurement","clipPathElement","getMousePos","boundingClientRect","getClientPoint","pos","clientPoint","tag","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","setContexts","contexts","propObj","contextMap","depProps","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","_ref$takesMultiplePar","takesMultipleParams","prevVal","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","CLASSPREFIX","STACK","GROUP","IDENTITY","ANGLE","RADIUS","SIZE","COLOR","SHAPE","TEXT","OUTER_RADIUS_VALUE","TEXT_ANCHOR_MIDDLE","ENCODING","X0","Y0","RADIUS0","ANGLE0","ASCENDING","AGG_FN_SUM","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","SimpleLayer","DATA","CONFIG","MEASUREMENT","DOMAIN","MOUNT","props_defineProperty","_props","axes","metaInf","valueParser","coord","PROPS","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","defClassName","axisNamePadding","classPrefix","fixedBaseline","labels","rotation","smartTicks","orientation","numberOfTicks","show","showAxisName","showInnerTicks","showOuterTicks","xOffset","yOffset","changeTickOrientation","selectContainer","axisInstance","_smartTicks","renderConfig","labelManager","isSmartTicks","tickText","registerAnimationDoneHook","rotateAxis","instance","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","_config","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_mount","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","_getPrototypeOf","InterpolatorCls","_interpolator","getScaleValue","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","_getPrototypeOf2","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","sanitiseConfigIntervals","intervals","getStops","newStops","color_strategy_toConsumableArray","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","rangeStops","newStopsLength","newRange","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","_strategies","pieceWiseRange","size_strategy_toConsumableArray","newIntervals","discreteRange","_userRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","strategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","WIDTH","HEIGHT","MIN_UNIT_WIDTH","MIN_UNIT_HEIGHT","DIMENSIONS","MEASURES","PIVOT","FORMAT","HAS_DATA_UPDATED","ROWS","COLUMNS","COL","ROW","COLUMN","DETAIL","LAYERS","TRANSFORM","RETINAL","CELL","X_AXES","Y_AXES","ENTRY_CELLS","INITIALIZED","EXIT_CELLS","AXIS","UNIT","UPDATED","BEFORE_UPDATE","VALUE_MATRIX","FACET_HEADERS","ARC","BAR","LINE","POINT","PRIMARY","SECONDARY","BOTH","INTERACTION","GRID_LINES","GRID_BANDS","HEADER","FACET","DESCENDING","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","isInvalid","getInvalidType","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","transformColor","colorAxis","styleType","intensity","stateColor","originalColor","colorInfo","applyInteractionStyle","selectionSet","interactionStyles","elements","getPlotElementsFromSet","interactionType","_d$meta","colorTransform","helpers_slicedToArray","retrieveEncodingInf","encoding","encodingNames","encodingInf","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","transformData","transformType","encodingFieldInf","xField","yField","xFieldType","yFieldType","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","transformedData","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getNormalizedData","transformedDataArr","encodingFieldsInf","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","animateGroup","groupTransition","groupAnimateStyle","effect","positionPoints","positioner","encodingTransform","getGroupSpan","getUnitWidth","getPlotMeasurement","dimensionalValues","fieldInfo","bandScale","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","timeDiffs","innerPadding","isAxisBandScale","axisPadding","groupPadding","renderLayer","render","throwback","parentNamespace","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransform","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","getMarkId","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","prevData","dataDidSet","layerNs","groupNs","BaseLayerMixin","_superclass","_class","base_mixin_classCallCheck","base_mixin_possibleConstructorReturn","base_mixin_getPrototypeOf","base_mixin_assertThisInitialized","getterSetters","alias","_points","_cachedData","_measurement","_graphicElems","base_mixin_inherits","base_mixin_createClass","_store","_this$metaInf2","_alias","enableCaching","_cacheEnabled","clearCaching","getTransformedData","calculateDomainFromData","isEmpty","getDataDomain","encodingType","_this$metaInf3","getNearestPoint","interaction","resolveTransformType","_transformType","_this$metaInf4","unitDom","cachePoint","pointMap","_pointMap","getIdentifiersFromData","_this$encodingFieldsI","_map2","base_mixin_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","hasPlotSpan","getPlotSpan","getPlotPadding","getPointsFromIdentifiers","getAllAttrs","filteredPoints","base_mixin_toConsumableArray","sizeVal","getTransformedDataFromIdentifiers","measureIndex","_identifiers$getData","identifierData","identifierSchema","_normalizedData","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","animationDone","encodingValue","retrieveEncodingFields","_transformedData","calculateDomain","getState","getListeners","getRenderProps","_context$metaInf","unitRowIndex","unitColIndex","base_mixin_defineProperty","getQualifiedStateProps","_construct","userConf","shouldDrawAnchors","BaseLayer","drawLine","layer","connectNullData","curveInterpolatorFn","linepath","highlight","fade","focus","nearestPointThreshold","strokeOpacity","LineLayerMixin","line_mixin_classCallCheck","line_mixin_possibleConstructorReturn","line_mixin_getPrototypeOf","line_mixin_inherits","line_mixin_createClass","getDrawFn","translatePoints","xAxis","yAxis","isXDim","isYDim","xPx","yPx","getColor","resolvedEncodings","stroke","seriesClassName","qualifiedClassName","containerSelection","colorField","colorFieldIndex","stroke-opacity","getPathStyle","colorValFn","colorVal","searchRadius","_point$data$data","layerId","line_mixin_get","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayerMixin","area_mixin_classCallCheck","area_mixin_possibleConstructorReturn","area_mixin_getPrototypeOf","area_mixin_inherits","area_mixin_createClass","area_mixin_get","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","AreaLayer","stroke-width","stroke-linejoin","shape","states","fadeout","selected","ArcLayerMixin","arc_mixin_classCallCheck","arc_mixin_possibleConstructorReturn","arc_mixin_getPrototypeOf","_prevPieData","arc_mixin_inherits","arc_mixin_createClass","getDataFromEvent","dataPoint","_this$axes","radiusAxis","pieIndex","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","_this$config","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","ArcLayer","LineLayer","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_mixin_slicedToArray","TextLayerMixin","text_mixin_classCallCheck","text_mixin_possibleConstructorReturn","text_mixin_getPrototypeOf","text_mixin_inherits","text_mixin_createClass","getPointTranslator","text-anchor","TextLayer","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","prepareDrawingInf","shapeAxis","sizeAxis","getShape","getSize","layerEncoding","helper_defineProperty","_config$offset","offsetX","offsetY","helper_slicedToArray","measure","PointLayerMixin","point_mixin_classCallCheck","point_mixin_possibleConstructorReturn","point_mixin_getPrototypeOf","point_mixin_inherits","point_mixin_createClass","maxSize","generateDataPoints","point_mixin_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","point_mixin_slicedToArray","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","point_mixin_get","PointLayer","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","endPos","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayerMixin","bar_mixin_classCallCheck","bar_mixin_possibleConstructorReturn","bar_mixin_getPrototypeOf","_plotPadding","_plotSpan","bar_mixin_inherits","bar_mixin_createClass","bar_mixin_get","getTranslatedPoints","normalizedDataArr","bar_mixin_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","BarLayer","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayerMixin","tick_mixin_classCallCheck","tick_mixin_possibleConstructorReturn","tick_mixin_getPrototypeOf","tick_mixin_inherits","tick_mixin_createClass","drawTicks","TickLayer","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","_layerRegistry","getSerializedConf","mark","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","propValue","layer_factory_toConsumableArray","getLayerInstance","layerRegistry","instances","layerObj","layerConstructor","getLayerClass","composeLayers","layerDefs","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","layer_registry","layers","helpers","commonHelpers","pointLayerHelpers","layerMixins","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","transformDataModels","dataModels","transformVal","getLayerFromDef","existingLayer","rowIndex","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","sanitizeLayerDef","sanitizedDefs","sConf","attachDataToLayers","transformedDataModels","dataSource","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","axisIndex","getLayerAxisIndex","_layer$config","specificField","encodingField","fieldInst","getMembers","unionDomainFromLayers","axisFields","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","getNearestDimensionalValue","entryVal","getLayersBy","searchBy","removeLayersBy","createSideEffectGroup","createRenderPromise","_renderedPromise","_renderedResolve","getRadiusRange","radiusAxes","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","getValuesMap","_model$getData","fieldIndices","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","entryRowIds","exitRowIds","rowIdsObj","AXES","LAYERDEFS","TRANSFORMEDDATA","DATADOMAIN","FIELDS","LAYERAXISINDEX","IDFIELD","GRID_LINE_PARENT_GROUP_CLASS","GRID_BAND_PARENT_GROUP_CLASS","GRID_PARENT_GROUP","TICK","GRID_BAND","GRID_LINE","CONSOLIDATED","FRAGMENTED","FACET_BY_FIELDS","RETINAL_FIELDS","PARENT_ALIAS","CACHED_DATA","STORE","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","muze_firebolt_src_helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","mergeSelectionSets","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","behaviour","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","getUids","propagationSource","applicableSelectionSets","unionSets","firebolt","uidSet","entryExitSet","_entryExitSet$type","existingModel","aggFns","GenericBehaviour","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$getAddSetFromCr","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_this$firebolt","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","dragCriteriaRetriever","drag_action_config_defineProperty","_dragCriteriaRetrieve","sourceInfo","startPos","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","getDragActionConfig","getSourceInfo","coordType","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","beh","dragEnd","hover","tooltip","svgContainer","nearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","SurrogateSideEffect","interactive","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort2","selection_box_helper_slicedToArray","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","direction","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","displayFormat","table","tbody","elemData","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","defConf","contentConfig","reorderContainers","contentConf","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","isSelected","removeKey","keyObj","valueObj","margin-left","getEncodingValues","configField","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","retField","retIndex","retinalFieldValue","measuresArr","icon","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","defFormatter","nf","getTabularData","allMeasures","strategies_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","len2","_fieldInf$name","strategies_strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","totalHeight","totalWidth","tooltips","boundBox","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","bandClass","lineClass","plotWidth","crossline_toConsumableArray","startPx","endPx","parentGroup","fadeFn","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","resetData","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerCls","depLayerEncoding","defaultSizeValue","commonName","groupId","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","convertToObj","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","cachedData","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","jsonData","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","_cachedValuesMap","enabledFn","sourceBehaviours","persistent","createSelectionSet","action_behaviour_map_defineProperty","ACTIONS","UnitBrushBehaviour","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","_dimensionMeasureMap","src_props_defineProperty","_PROPS","trackerClassName","arcLayerClassName","sideEffectClassName","local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","createFireboltInstance","interactions","fireboltDeps","Cls","getFireboltCls","visual_unit_defineProperty","getActionBehaviourMap","getBehaviourEffectMap","_firebolt","createRootContainers","_rootSvg","_sideEffectGroup","initSideEffects","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","instanceValues","visual_unit_toConsumableArray","layerdeps","_this$_dependencies","parentModel","REACTIVE_PROPS","dimValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","localNs","dataDomain","visual_unit_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","initStore","group_utils_defineProperty","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","getAxisKey","getCellKey","columnId","extractUnitConfig","unitConfig","getHeaderText","rowLength","headerCreator","fieldHeaders","TextCell","findInGroup","variable","channel","group_utils_this","facetType","projType","getAxisType","retriveDomainFromData","mutateAxesFromMap","cacheMaps","xAxes","yAxes","xAxisSet","yAxisSet","axisId","getEncoder","encoder","CartesianEncoder","layerConf","hasPolarEncodings","PolarEncoder","getHeaderAxisFrom","userAxisFromConfig","axisFrom","headerFrom","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","facets","projections","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","getFieldsFromSuppliedLayers","suppliedLayerConfig","encodingArr","group_utils_typeof","extractFields","facetsAndProjections","layerFields","flattenArray","sortFacetFields","facetNames","sortInfo","sortConfig","facet","facetSortConfig","getSchemaDef","removeExitCells","exitCells","qualifiedStateProps","placeholder","globalConfig","VisualEncoder","visual_encoder_classCallCheck","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","scaleMaps","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","rIdx","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","columnIndex","matrix_model_objectSpread","getMatrixModel","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","rowFields","columnFields","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","sortedFields","layerConfigArr","getLayerConfig","retinalConfig","axesCreators","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","facetFields","geomCellKey","geomCell","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","counter","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","groupedModel","resolvedData","newFieldsConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","autoGroupBy","layerConfig","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","_mutateAxesFromMap","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","_map4","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","units","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","_placeholderInfo","maps","matrix_resolver_toConsumableArray","getProjectionFields","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","_this$dependencies","_this$getAllFields","retContext","getRetinalFieldsDomain","getRetinalAxes","retinalEncoder","setCommonDomain","retinalAxes","updateVisualUnit","placeholders","bottomLeft","bottomRight","_this$dependencies2","showHeaders","_this$registry$cells","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","updateModel","dataTypeScaleMap","src_data_type_scale_map_defineProperty","data_type_scale_map_dataTypeScaleMap","getAdjustedDomain","y1ratio","y2ratio","allSameSign","generateAxisFromMap","axisKey","groupAxes","currentAxes","commonAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","sanitizeIndividualLayerConfig","encodingConfigs","getDefaultMark","colFieldType","rowFieldType","createRetinalAxis","fieldProps","getIndex","arrIndex","getLayerConfFromFields","colFields","userLayerConfig","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","resolverAxes","axesArr","userConfig","geomCellAxes","1","unitsArr","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","adjustedDomain","typeOfAxis","alignZeroLine","currentFieldName","sortingOrder","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","encodingObj","layerArray","serializedLayers","colField","colFieldName","rowField","configs","rowFieldName","defConfigs","layerConfigs","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","pieAxes","varInstances","encType","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","visual_group_local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","createEncoderInstance","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setRetinalAxisDomain","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createMatrixResolver","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","_context$registry","comp","storeInst","listenerInf","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","DEFAULTICONSIZE","SCALE_FUNCTIONS","VALUE","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","canvasAlias","rawVal","check","src_firebolt_helper_toConsumableArray","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","tempConfig","STEP_DEFAULT_CONFIG","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","lowerLimit","upperLimit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","IS_POINT_MAP","true","false","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","local_options_slicedToArray","arg1","arg2","local_options_typeof","titleConfig","subtitle","subtitleConfig","sub","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","options_slicedToArray","_ref2$","_auxConfig$reset","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","LAYER_DEF","DETAIL_FIELDS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","interactionRegistry","dataInfo","legendMeasures","titleText","legendIconShapeMapper","layerMarks","includes","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","_i","_headerValues","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","default_registry_defineProperty","_COMPONENTS","SUBREGISTRIES","utils","Smartlabel","globalCache","defaultRegistry","globalRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","Components","VisualLayer","enums","unitHelpers","unitEnums","Encoders","encoderHelpers","groupUtils","groupEnums","SideEffects","standards","Behaviours","operators"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows} from \"./tsv\";\nexport {default as autoType} from \"./autoType\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataConverter from './model/dataConverter';\nimport DSVStringConverter from './defaultConverters/dsvStringConverter';\nimport JSONConverter from './defaultConverters/jsonConverter';\nimport DSVArrayConverter from './defaultConverters/dsvArrayConverter';\nimport AutoDataConverter from './defaultConverters/autoCoverter';\n\nclass DataConverterStore {\n    constructor() {\n        this.store = new Map();\n        this.converters(this._getDefaultConverters());\n    }\n\n    _getDefaultConverters() {\n        return [\n            new DSVStringConverter(),\n            new DSVArrayConverter(),\n            new JSONConverter(),\n            new AutoDataConverter()\n        ];\n    }\n\n    /**\n     *\n     * @param  {Array<DataConverter>} converters : contains array of converter instance\n     * @return { Map<String,DataConverter> }\n     */\n    converters(converters = []) {\n        converters.forEach(converter => this.store.set(converter.type, converter));\n        return this.store;\n    }\n\n    /**\n     *\n     * @param {DataConverter} converter : converter Instance\n     * @returns self\n     */\n    register(converter) {\n        if (converter instanceof DataConverter) {\n            this.store.set(converter.type, converter);\n            return this;\n        }\n        return null;\n    }\n\n    /**\n     *\n     * @param {DataConverter} converter : converter Instance\n     * @returns self\n     */\n\n    unregister(converter) {\n        this.store.delete(converter.type);\n        return this;\n    }\n\n    get(name) {\n        if (this.store.has(name)) {\n            return this.store.get(name);\n        }\n        return null;\n    }\n\n}\n\nconst converterStore = (function () {\n    let store = null;\n\n    function getStore () {\n        store = new DataConverterStore();\n        return store;\n    }\n    return store || getStore();\n}());\n\nexport default converterStore;\n","import DataConverter from '../model/dataConverter';\nimport AUTO from '../utils/auto-resolver';\nimport DataFormat from '../../enums/data-format';\n\nexport default class AutoDataConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.AUTO);\n    }\n\n    convert(data, schema, options) {\n        return AUTO(data, schema, options);\n    }\n}\n","import DataConverter from '../model/dataConverter';\nimport DSVArr from '../utils/dsv-arr';\nimport DataFormat from '../../enums/data-format';\n\nexport default class DSVArrayConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.DSV_ARR);\n    }\n\n    convert(data, schema, options) {\n        return DSVArr(data, schema, options);\n    }\n}\n","import DataConverter from '../model/dataConverter';\nimport DSVStr from '../utils/dsv-str';\nimport DataFormat from '../../enums/data-format';\n\nexport default class DSVStringConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.DSV_STR);\n    }\n\n    convert(data, schema, options) {\n        return DSVStr(data, schema, options);\n    }\n}\n","import DataConverter from '../model/dataConverter';\nimport FlatJSON from '../utils/flat-json';\nimport DataFormat from '../../enums/data-format';\n\nexport default class JSONConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.FLAT_JSON);\n    }\n\n    convert(data, schema, options) {\n        return FlatJSON(data, schema, options);\n    }\n}\n","import converterStore from './dataConverterStore';\nimport DataConverter from './model/dataConverter';\n\nexport { DataConverter, converterStore };\n","/**\n * Interface for all data converters\n */\nexport default class DataConverter {\n    constructor(type) {\n        this._type = type;\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    convert() {\n        throw new Error('Convert method not implemented.');\n    }\n\n}\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr(arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    let headers = schemaFields;\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        headers = arr.splice(0, 1)[0];\n    }\n    // create a map of the headers\n    const headerMap = headers.reduce((acc, h, i) => (\n        Object.assign(acc, { [h]: i })\n    ), {});\n\n    arr.forEach((fields) => {\n        const field = [];\n        schemaFields.forEach((schemaField) => {\n            const headIndex = headerMap[schemaField];\n            field.push(fields[headIndex]);\n        });\n        return push(...field);\n    });\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\nimport { converterStore } from './converter';\nimport { fieldRegistry } from './fields';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Converters are functions that transforms data in various format tpo datamodel consumabe format.\n     */\n    static get Converters() {\n        return converterStore;\n    }\n\n    /**\n     * Register new type of fields\n     */\n    static get FieldTypes() {\n        return fieldRegistry;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union,\n  rowDiffsetIterator\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DataConverter } from './converter';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\nimport * as FieldsUtility from './fields';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union,\n    rowDiffsetIterator\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version,\n    DataConverter,\n    FieldsUtility\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport { fieldRegistry } from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n\n    if (fieldRegistry.has(schema.subtype)) {\n        return fieldRegistry.get(schema.subtype)\n                        .BUILDER\n                        .fieldName(schema.name)\n                        .schema(schema)\n                        .data(data)\n                        .rowDiffset(`0-${data.length - 1}`)\n                        .build();\n    }\n    return fieldRegistry\n                    .get(schema.type === FieldType.MEASURE ? MeasureSubtype.CONTINUOUS : DimensionSubtype.CATEGORICAL)\n                    .BUILDER\n                    .fieldName(schema.name)\n                    .schema(schema)\n                    .data(data)\n                    .rowDiffset(`0-${data.length - 1}`)\n                    .build();\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    if (fieldRegistry.has(schema.subtype)) {\n        return fieldRegistry.get(schema.subtype)\n                        .BUILDER\n                        .partialField(partialField)\n                        .rowDiffset(rowDiffset)\n                        .build();\n    }\n    return fieldRegistry\n                    .get(schema.type === FieldType.MEASURE ? MeasureSubtype.CONTINUOUS : DimensionSubtype.CATEGORICAL)\n                    .BUILDER\n                    .partialField(partialField)\n                    .rowDiffset(rowDiffset)\n                    .build();\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\nimport BinnedParser from '../parsers/binned-parser';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n\n    static parser() {\n        return new BinnedParser();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\nimport CategoricalParser from '../parsers/categorical-parser';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n\n    static parser() {\n        return new CategoricalParser();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\nimport ContinuousParser from '../parsers/continuous-parser';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n\n    static parser() {\n        return new ContinuousParser();\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import Categorical from './categorical';\nimport Temporal from './temporal';\nimport Binned from './binned';\nimport Continuous from './continuous';\nimport { DimensionSubtype, MeasureSubtype } from '../enums';\n\n\nclass FieldTypeRegistry {\n    constructor() {\n        this._fieldType = new Map();\n    }\n\n    registerFieldType(subtype, dimension) {\n        this._fieldType.set(subtype, dimension);\n        return this;\n    }\n\n    has(type) {\n        return this._fieldType.has(type);\n    }\n\n    get(type) {\n        return this._fieldType.get(type);\n    }\n}\n\nconst registerDefaultFields = (store) => {\n    store\n                    .registerFieldType(DimensionSubtype.CATEGORICAL, Categorical)\n                    .registerFieldType(DimensionSubtype.TEMPORAL, Temporal)\n                    .registerFieldType(DimensionSubtype.BINNED, Binned)\n                    .registerFieldType(MeasureSubtype.CONTINUOUS, Continuous);\n};\n\nconst fieldRegistry = (function () {\n    let store = null;\n    function getStore () {\n        store = new FieldTypeRegistry();\n        registerDefaultFields(store);\n        return store;\n    }\n    return store || getStore();\n}());\n\nexport default fieldRegistry;\n\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport PartialField from '../partial-field';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    static parser() {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n\n    static get BUILDER() {\n        const builder = {\n            _params: {},\n            _context: this,\n            fieldName(name) {\n                this._params.name = name;\n                return this;\n            },\n            schema(schema) {\n                this._params.schema = schema;\n                return this;\n            },\n            data(data) {\n                this._params.data = data;\n                return this;\n            },\n            partialField(partialField) {\n                this._params.partialField = partialField;\n                return this;\n            },\n            rowDiffset(rowDiffset) {\n                this._params.rowDiffset = rowDiffset;\n                return this;\n            },\n            build() {\n                let partialField = null;\n                if (this._params.partialField instanceof PartialField) {\n                    partialField = this._params.partialField;\n                } else if (this._params.schema && this._params.data) {\n                    partialField = new PartialField(this._params.name,\n                                        this._params.data,\n                                        this._params.schema,\n                                        this._context.parser());\n                }\n                else {\n                    throw new Error('Invalid Field parameters');\n                }\n                return new this._context(partialField, this._params.rowDiffset);\n            }\n        };\n        return builder;\n    }\n}\n","export { default as Dimension } from './dimension';\nexport { default as Measure } from './measure';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as fieldRegistry } from './field-registry';\nexport { columnMajor } from '../utils';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    // constructor (schema) {\n    //     super();\n    //     this.schema = schema;\n    //     this._dtf = new DateTimeFormatter(format);\n    // }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val, { format }) {\n        let result;\n        // check if invalid date value\n        if (!this._dtf) {\n            this._dtf = new DateTimeFormatter(format);\n        }\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum, { format: this.schema.format }));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\nimport TemporalParser from '../parsers/temporal-parser';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n\n    static parser() {\n        return new TemporalParser();\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport { converterStore } from './converter';\nimport { fieldRegistry } from './fields';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    const rawFieldsData = fields.map(field => field.data());\n\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, formattedFieldsData, rawFieldsData, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].internalValue;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const { type, subtype, name } = unitSchema;\n    if (type === FieldType.DIMENSION || type === FieldType.MEASURE) {\n        if (!fieldRegistry.has(subtype)) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n    } else {\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converter = converterStore.get(options.dataFormat);\n\n\n    if (!converter) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converter.convert(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.SORT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode, hasBarLayer) => {\n    if (criteria === null) return null;\n\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        let fieldValue = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === fieldValue) !== undefined;\n        }\n\n        if (range) {\n            // Check if the selected bar value lies inside the selection box\n            let isFieldSelected = fieldValue >= range[0] && fieldValue <= range[1];\n            if (hasBarLayer && !isFieldSelected) {\n                // Check if the selection box overlaps the bar, if overlap bar is selected\n                fieldValue = [0, fieldValue];\n                isFieldSelected = fieldValue[0] <= range[1] && range[0] <= fieldValue[1];\n            }\n            return isFieldSelected;\n        }\n        return true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode, hasBarLayer) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode, hasBarLayer);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position|null if sort order is invalid\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        if (!sortOrderMap[sortOrder]) return null;\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nconst partition = (array, filterFn) => array.reduce((acc, v, i) => {\n    const pass = filterFn(v, i, array);\n\n    pass ? acc[0].push(v) : acc[1].push(v);\n    return acc;\n}, [[], []]);\n\nconst mix = superclass => ({\n    with: (...mixins) => mixins.reduce((cls, mixin) => mixin(cls), superclass)\n});\n\nconst componentRegistry = (comps) => {\n    const reg = Object.assign({}, comps);\n    const regObj = {\n        register: (def, customKey) => {\n            const key = customKey || def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n\n    return regObj;\n};\n\nexport {\n    componentRegistry,\n    mix,\n    partition,\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp, toArray } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitization: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                const paramsLen = params.length;\n                if (paramsLen) {\n                    const { takesMultipleParams = false } = meta || {};\n                    // If parameters are passed then it's a setter\n                    let val = takesMultipleParams ? params : params[0];\n\n                    if (meta) {\n                        let values;\n                        const prevVal = context.get(nsProp, subNamespace);\n                        const { sanitization, typeCheck, typeExpected } = meta;\n                        if (typeof sanitization === 'function') {\n                            // Sanitize if required\n                            val = sanitization(val, prevVal, holder);\n                        }\n\n                        // Checking if a setter is valid\n                        if (typeof typeCheck === 'function') {\n                            const typeCheckResult = typeCheck(val);\n\n                            if (typeCheckResult) {\n                                values = val;\n                            }\n                        } else if (typeof typeCheck === 'string' && typeCheck === 'constructor') {\n                            if (val && val.constructor.name === typeExpected) {\n                                values = val;\n                            }\n                        } else {\n                            values = val;\n                        }\n\n                        const preset = meta.preset;\n                        const oldValues = toArray(context.get(nsProp, subNamespace));\n                        preset && preset(values, holder);\n                        if (takesMultipleParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values && context.commit(nsProp, values, subNamespace);\n                    } else {\n                        context.commit(nsProp, val, subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, Array.isArray(conf.value));\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect,\n    partition,\n    mix,\n    componentRegistry\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0',\n    COLOR: 'color',\n    SHAPE: 'shape',\n    SIZE: 'size',\n    TEXT: 'text'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    },\n    encodingTransform: {},\n    encodingFieldsInf: {},\n    dependencies: {},\n    dataProps: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n\nexport const sanitiseConfigIntervals = (intervals) => {\n    if (intervals) {\n        return intervals;\n    }\n    return 5;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => {\n            context._userRange = value.range;\n            return mergeRecursive(context._config || {}, value);\n        }\n    },\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\nimport { sanitiseConfigIntervals } from '../helper';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this.config(this.constructor.defaultConfig());\n        this.config(config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n\n        this._config.range = this._userRange ? this._userRange : this._config.range;\n\n        this._config.intervals = sanitiseConfigIntervals(this._config.intervals);\n        this._rangeType = this._config.type === 'linear' && !!this._config.intervals ? DISCRETE : CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transformColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                    // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a})`;\n            }));\n        });\n    });\n};\n\nexport const retrieveEncodingInf = (encoding, fieldsConfig, encodingNames) => {\n    const encodingInf = {};\n\n    encodingNames\n        .forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n    return encodingInf;\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nexport const dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [prevData, data]) => {\n            context.dataDidSet([prevData, data]);\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer,\n    encodingFieldInfRetriever\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\nimport { BASE_LAYER } from '../enums/constants';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\nexport const BaseLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a\n     * layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor () {\n        super();\n\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.axes({});\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(this.localOptions()).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: this.getRenderProps(),\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = this.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BASE_LAYER, this);\n\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    static getterSetters () {\n        return props;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among\n     * multiple layers of same type if one layer has to be referred, alias is used. If no alias is given then\n     * `formalName` is set as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the\n     *          data // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BASE_LAYER);\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers.\n     * Identifiers are a set of field names and their corresponding values in an array.\n     * It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids,\n     * it returns all the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    /**\n     * Called when the layer datamodel is set.\n     *\n     * @param {Array} arr Old and new datamodel instance.\n     * @param {DataModel} arr[0] Previous datamodel instance.\n     * @param {DataModel} arr[1] Current datamodel instance.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    dataDidSet ([, data]) {\n        const config = this.config();\n\n        if (data && config) {\n            if (this._cacheEnabled) {\n                this._cachedData.push(data);\n            } else {\n                this._cachedData = [data];\n            }\n            const encodingValue = config.encoding;\n            if (encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = this.retrieveEncodingFields(encodingValue, this.coord(), data);\n                this.encodingFieldsInf(encodingFieldsInf);\n                this.resolveTransformType();\n                this._transformedData = this.getTransformedData(data, config,\n                    this.transformType(), encodingFieldsInf);\n                this._normalizedData = this.getNormalizedData(this._transformedData, fieldsConfig);\n                if (config.calculateDomain !== false) {\n                    const domain = this.calculateDomainFromData(this._normalizedData,\n                        this.encodingFieldsInf(), this.data().getFieldsConfig());\n                    this.domain(domain);\n                }\n            }\n        }\n        return this;\n    }\n\n    retrieveEncodingFields (encoding, coord, data) {\n        const fieldsConfig = data.getFieldsConfig();\n\n        return encodingFieldInfRetriever[coord](encoding, fieldsConfig);\n    }\n\n    static getRenderProps () {\n        return [`${layerNs[1]}.${PROPS.DATA}`, ...['x', 'y', 'radius'].map(type =>\n            `${groupNs}.domain.${type}`)];\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport { BaseLayerMixin } from './base-mixin';\nimport { BASE_LAYER } from '../enums/constants';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends mix(SimpleLayer).with(BaseLayerMixin) {\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return BASE_LAYER;\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport const LineLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of LineLayer.\n     *\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf({\n                    stroke: resolvedEncodings.color\n                }, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n};\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport const AreaLayerMixin = superclass => class extends superclass {\n\n    /** Default configuration of area layer\n     *\n     * @return {Object} Default configuration of layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const { x: xAxis, y: yAxis } = axes;\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { AREA_LAYER } from '../../enums/constants';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from '../line/line-mixin';\nimport { AreaLayerMixin } from './area-mixin';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin, AreaLayerMixin) {\n    static formalName () {\n        return AREA_LAYER;\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\nexport const ArcLayerMixin = superclass => class extends superclass {\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n    * returns the default configuration of the layer\n    *\n    * @static\n    * @return {Object} Default configuration for arc layer\n    * @memberof ArcLayer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    getNearestPoint (x, y, config = {}) {\n        return this.getDataFromEvent(config.event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n        } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n};\n\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { ArcLayerMixin } from './arc-mixin';\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends mix(BaseLayer).with(BaseLayerMixin, ArcLayerMixin) {\n    static formalName () {\n        return 'arc';\n    }\n}\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from './line-mixin';\nimport { LINE_LAYER } from '../../enums/constants';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin) {\n    static formalName () {\n        return LINE_LAYER;\n    }\n}\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport const TextLayerMixin = superclass => class extends superclass {\n    /**\n    * Returns the default configuration of the text layer\n    * @return {Object} Default configuration of the text layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n    * Renders the plot in the given container\n    * @param  {SVGElement} container SVGElement which will hold the plot\n    * @return {textLayer} Instance of text layer\n    */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { TextLayerMixin } from './text-mixin';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends mix(BaseLayer).with(BaseLayerMixin, TextLayerMixin) {\n    static formalName () {\n        return 'text';\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, +1]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    FieldType,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    getIndividualClassName,\n    resolveEncodingValues,\n    getColorMetaInf,\n    positionPoints\n} from '../../helpers';\n\nexport const prepareDrawingInf = ({ data, datum, i, layerInst, xPx, yPx }) => {\n    const axes = layerInst.axes();\n    const { shape: shapeAxis, color: colorAxis, size: sizeAxis } = axes;\n    let shape = shapeAxis.getShape(datum.shape);\n    let size = sizeAxis.getSize(datum.size);\n    let color = colorAxis.getColor(datum.color);\n    const resolvedEncodings = resolveEncodingValues({\n        values: {\n            x: xPx,\n            y: yPx,\n            color,\n            size,\n            shape,\n            data: datum\n        },\n        data: datum\n    }, i, data, layerInst);\n    const layerEncoding = layerInst.config().encoding;\n    const { rowId, source } = datum;\n    ({ shape, size, color } = resolvedEncodings);\n    const style = {\n        fill: color,\n        stroke: layerEncoding.stroke.value\n    };\n    const { x, y } = resolvedEncodings;\n    const pos = { x, y };\n    return {\n        enter: pos,\n        update: pos,\n        shape,\n        source,\n        rowId,\n        style,\n        meta: getColorMetaInf(style, colorAxis),\n        size\n    };\n};\n\nexport const pointTranslators = {\n    [COORD_TYPES.CARTESIAN]: (data, config, layerInst) => {\n        let points = [];\n        const encoding = layerInst.config().encoding;\n        const axes = layerInst.axes();\n        const { x, y } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = prepareDrawingInf({\n                    data,\n                    datum: d,\n                    i,\n                    layerInst,\n                    xPx,\n                    yPx\n                });\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n","import {\n    Voronoi,\n    Scales,\n    makeElement,\n    getQualifiedClassName,\n    selectElement\n} from 'muze-utils';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport {\n    attachDataToVoronoi,\n    getPlotMeasurement,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\nimport { pointTranslators } from './helper';\n\nexport const PointLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                    heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    };\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { POINT_LAYER } from '../../enums/constants';\nimport { PointLayerMixin } from './point-mixin';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends mix(BaseLayer).with(PointLayerMixin) {\n    static formalName () {\n        return POINT_LAYER;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    FieldType,\n    Scales,\n    getObjProp,\n    isSimpleObject\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst { MEASURE } = FieldType;\n\nexport const BarLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = Scales.band();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y, { event }) {\n        if (!this.data()) {\n            return null;\n        }\n        return this.getDataFromEvent(event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const values = dataPoint && dataPoint.source;\n            let identifiers = null;\n            if (values) {\n                identifiers = this.getIdentifiersFromData(values, dataPoint.rowId);\n            }\n            return {\n                dimensions: [dataPoint.update],\n                id: identifiers,\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { BAR_LAYER } from '../../enums/constants';\nimport { BarLayerMixin } from './bar-mixin';\nimport { BaseLayerMixin } from '../../base-layer/base-mixin';\n\nimport './styles.scss';\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends mix(BaseLayer).with(BaseLayerMixin, BarLayerMixin) {\n    static formalName () {\n        return BAR_LAYER;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { x: xAxis, y: yAxis } = axes;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport const TickLayerMixin = superclass => class extends superclass {\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'tick';\n    }\n\n    static drawFn () {\n        return drawTicks;\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n};\n","import { mix } from 'muze-utils';\nimport { PointLayerMixin } from '../point';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { TickLayerMixin } from './tick-mixin';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends mix(BaseLayer).with(BaseLayerMixin, PointLayerMixin, TickLayerMixin) {\n    static formalName () {\n        return 'tick';\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default (layers = DEFAULT_LAYERS) => {\n    const reg = Object.assign({}, layers);\n    const regObj = {\n        register: (def) => {\n            const key = def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import { AreaLayer, AreaLayerMixin } from './layers/area';\nimport { ArcLayer, ArcLayerMixin } from './layers/arc';\nimport { LineLayer, LineLayerMixin } from './layers/line';\nimport { TextLayer, TextLayerMixin } from './layers/text';\nimport { PointLayer, PointLayerMixin } from './layers/point';\nimport { BarLayer, BarLayerMixin } from './layers/bar';\nimport { TickLayer, TickLayerMixin } from './layers/tick';\nimport { SimpleLayer } from './simple-layer';\nimport { BaseLayer, BaseLayerMixin } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport layerFactory from './layer-factory';\nimport layerRegistry from './layer-registry';\nimport { ENCODING } from './enums/constants';\nimport * as pointLayerHelpers from './layers/point/helper';\nimport * as commonHelpers from './helpers';\nimport * as enums from './enums';\n\nconst helpers = Object.assign(commonHelpers, {\n    pointLayerHelpers\n});\n\nconst layerMixins = {\n    BarLayerMixin,\n    BaseLayerMixin,\n    LineLayerMixin,\n    AreaLayerMixin,\n    PointLayerMixin,\n    TextLayerMixin,\n    TickLayerMixin,\n    ArcLayerMixin\n};\n\nexport {\n    BaseLayer,\n    BarLayer,\n    LineLayer,\n    AreaLayer,\n    PointLayer,\n    ArcLayer,\n    TextLayer,\n    TickLayer,\n    layerFactory,\n    SimpleLayer,\n    layerRegistry,\n    LAYER_TYPES,\n    ENCODING,\n    helpers,\n    enums,\n    layerMixins\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = layers.sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]).filter(d => d !== undefined);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (firebolt, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    const uidSet = {\n        mergedEnter: [],\n        mergedExit: []\n    };\n\n    const { context } = firebolt;\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = firebolt._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const { model, uids } = entryExitSet[type];\n                let existingModel = models[type];\n\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                    uidSet[type] = uids;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    uidSet[type] = [...uidSet[type], ...uids];\n                } else {\n                    existingModel = model;\n                    uidSet[type] = uids;\n                }\n                combinedSet[type].uids = [...new Set(uidSet[type])];\n            });\n        }\n    });\n\n    ['mergedEnter', 'mergedExit'].forEach((type) => {\n        if (behaviours.length > 1) {\n            const uids = combinedSet[type].uids.reduce((acc, v) => {\n                acc[v] = true;\n                return acc;\n            }, {});\n            combinedSet[type].model = context.data().select((f, i) => uids[i], { saveChild: false });\n        }\n        combinedSet[type].aggFns = retrieveNearestGroupByReducers(combinedSet[type].model);\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = this.mergeSelectionSets(behaviours);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n\n    mergeSelectionSets (behaviours) {\n        return unionSets(this, behaviours);\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    getAddSetFromCriteria (...params) {\n        return this.firebolt.getAddSetFromCriteria(...params);\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, COORD_TYPES } from 'muze-utils';\n\nconst dragCriteriaRetriever = {\n    [COORD_TYPES.CARTESIAN]: (context, sourceInfo, { startPos, endPos }) => {\n        const fieldsConfig = context.data().getFieldsConfig();\n        const axes = sourceInfo.axes;\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const axisFields = sourceInfo.fields;\n        const xField = axisFields.x[0].getMembers()[0];\n        const yField = axisFields.y[0].getMembers()[0];\n        const xFieldType = fieldsConfig[xField].def.subtype;\n        const yFieldType = fieldsConfig[yField].def.subtype;\n        const dimensions = {};\n\n        const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n        const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n        const xRange = xAxis.invertExtent(startPos.x, endPos.x);\n        const yRange = yAxis.invertExtent(startPos.y, endPos.y);\n        const selectedDomains = {\n            x: isXDimension ? xRange : xRange.sort((a, b) => a - b),\n            y: isYDimension ? yRange : yRange.sort((a, b) => a - b)\n        };\n        const rangeObj = {};\n\n        if (selectedDomains.x) rangeObj[xField] = selectedDomains.x;\n        if (selectedDomains.y) rangeObj[yField] = selectedDomains.y;\n\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n        }\n\n        dimensions.x = [startPos.x, endPos.x];\n        dimensions.y = [startPos.y, endPos.y];\n\n        return {\n            criteria: rangeObj,\n            dimensions\n        };\n    },\n    [COORD_TYPES.POLAR]: () => ({\n        criteria: null\n    })\n};\n\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (context, config) => {\n    const sourceInfo = context.getSourceInfo();\n    const { startPos, endPos } = config;\n    const coordType = context.coord();\n\n    if (startPos.x === endPos.x && startPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    return dragCriteriaRetriever[coordType](context, sourceInfo, config);\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n} from 'muze-utils';\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const { x: xDim, y: yDim } = dimensions;\n\n    if (!criteria) return null;\n\n    if (axes.x && axes.y) {\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const xLinear = xAxis.constructor.type() === 'linear';\n        const yLinear = yAxis.constructor.type() === 'linear';\n        const xField = `${axisFields.x[0]}`;\n        const yField = `${axisFields.y[0]}`;\n        const xCriteria = criteria[xField];\n        const yCriteria = criteria[yField];\n\n        if (xCriteria && xCriteria[0] instanceof Array) {\n            xRange = xCriteria[0];\n            yRange = xCriteria[1];\n        } else {\n            xRange = xCriteria || [];\n            yRange = yCriteria || [];\n        }\n\n        if (xRange && xRange.length) {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val = xRange[0];\n            let x2Val = xRange[xRange.length - 1];\n\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            }\n\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n\n        if (yRange && yRange.length) {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val = yRange[0];\n            let y2Val = yRange[yRange.length - 1];\n\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            }\n\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n\n        if ((yLinear && xLinear) || !payload.dragEnd) {\n            if (xDim) {\n                [x1, x2] = xDim;\n            }\n            if (yDim) {\n                [y1, y2] = yDim;\n            }\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction: 'both'\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x = 0;\n        let y = 0;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        width = unitWidth;\n        height = unitHeight;\n\n        // Hide selection-box on dragEnd or when criteria is empty\n        if (!payload.criteria || payload.dragEnd) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } =\n            getBoxDimensionsFromPayload(payload, sourceInf.axes, sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both') {\n            x = Math.min(dimension.x1, dimension.x2);\n            y = Math.min(dimension.y1, dimension.y2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        }\n\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: [keyObj, valueObj]\n        }\n        );\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst getEncodingValues = ({ field, axes, fn, val }) => {\n    const configField = axes.config().field;\n    const values = configField && configField !== field ? null : axes[fn](val);\n    return values;\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: getEncodingValues({\n                field: retField, axes: colorAxis, fn: 'getColor', val: retinalFieldValue\n            }),\n            shape: getEncodingValues({\n                field: retField, axes: shapeAxis, fn: 'getShape', val: retinalFieldValue\n            }),\n            size: getEncodingValues({\n                field: retField, axes: sizeAxis, fn: 'getSize', val: retinalFieldValue\n            })\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = values.length > 1;\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n};\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","import { componentRegistry } from 'muze-utils';\nimport * as behaviours from './actions/behavioural';\nimport { physicalActions } from './actions/physical';\nimport * as sideEffects from './side-effects';\n\nconst convertToObj = (comps) => {\n    const obj = {};\n\n    for (const key in comps) {\n        const val = comps[key];\n\n        obj[val.formalName()] = val;\n    }\n    return obj;\n};\n\nexport const registry = {\n    behaviours: componentRegistry(convertToObj(behaviours)),\n    physicalActions: componentRegistry(physicalActions),\n    sideEffects: componentRegistry(convertToObj(sideEffects))\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import { VolatileBehaviour } from '@chartshq/muze-firebolt';\nimport { LAYER_TYPES } from '@chartshq/visual-layer';\nimport { BRUSH } from '../../enums/behaviours';\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class UnitBrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BRUSH;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.firebolt.context;\n        const hasBarLayer = !!context.layers().find(layer => layer.config().mark === LAYER_TYPES.BAR_LAYER);\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all', undefined, hasBarLayer);\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\n\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport UnitBrushBehaviour from './firebolt/behaviours/brush';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange,\n    unionDomainFromLayers\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\nimport { REACTIVE_PROPS } from './enums';\n\nconst FORMAL_NAME = 'VisualUnit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((this.localOptions())).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getterSetters () {\n        return PROPS;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: (context) => {\n                    const domain = context.calculateDomainFromData();\n                    context.dataDomain(domain);\n                }\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n            this.createFireboltInstance();\n\n            return this;\n        }\n        return this._store;\n    }\n\n    createFireboltInstance () {\n        const { interactions } = this.registry();\n        const { fireboltDeps } = this._dependencies;\n        const Cls = this.getFireboltCls();\n\n        this.firebolt(new Cls(this, {\n            physical: Object.assign({}, interactions.physicalActions.get(), fireboltDeps.physicalActions),\n            behavioural: Object.assign({}, interactions.behaviours.get(), {\n                [UnitBrushBehaviour.formalName()]: UnitBrushBehaviour\n            }, fireboltDeps.behaviouralActions),\n            physicalBehaviouralMap: this.getActionBehaviourMap()\n        }, Object.assign({}, interactions.sideEffects.get(), fireboltDeps.sideEffects), this.getBehaviourEffectMap()));\n\n        return this;\n    }\n\n    getFireboltCls () {\n        return UnitFireBolt;\n    }\n\n    getBehaviourEffectMap () {\n        return behaviourEffectMap;\n    }\n\n    getActionBehaviourMap () {\n        return actionBehaviourMap;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        this.createRootContainers(container);\n\n        setAxisRange(this);\n        this.renderLayers();\n        const node = this._rootSvg.node();\n        const { sideEffectClassName, classPrefix } = this.config();\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    createRootContainers (container) {\n        const config = this.config();\n        const { className, defClassName } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        return this;\n    }\n\n    renderLayers () {\n        const width = this.width();\n        const height = this.height();\n        const node = this._rootSvg.node();\n\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel, hasBarLayer) {\n        if (!identifiers) return null;\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode, hasBarLayer);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    dataDomain (...params) {\n        const { namespace } = this.metaInf();\n        const store = this.store();\n        const prop = `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${REACTIVE_PROPS.DOMAIN}`;\n        if (params.length) {\n            const domain = params[0];\n            store.commit(prop, domain, namespace);\n        }\n        return store.get(prop, namespace);\n    }\n\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    calculateDomainFromData () {\n        const domain = unionDomainFromLayers(this.layers(), this.fields(), this._layerAxisIndex,\n            this.data().getFieldsConfig());\n        return domain;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { Store, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig) => {\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    const fields = [].concat(...encodingArr.map(enc => Object.values(enc).map(d => (typeof d === 'object' ?\n        d.field : d))));\n    return [...new Set(fields.filter(d => d))];\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        facetNames.push(name);\n\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","export const PROPS = {\n    layers: {},\n    data: {},\n    globalConfig: {}\n};\n","import { ERROR_MSG, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom, getFieldsFromSuppliedLayers } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\nimport { PROPS } from './props';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    constructor () {\n        generateGetterSetters(this, PROPS);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n\n    getProjectionFields (layers) {\n        return getFieldsFromSuppliedLayers(layers);\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const sortedFields = config.sort;\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    // Sort datamodel if user has sorted a field\n    const sortConfig = Object.keys(sortedFields).map(field => [field, sortedFields[field]]);\n    if (sortConfig.length) {\n        datamodel = datamodel.sort(sortConfig, { saveChild: true });\n    }\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const newFieldsConfig = groupedModel.getFieldsConfig();\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers).filter(field =>\n            getObjProp(newFieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    resolver.transformedData(groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig, datamodel.getSchema());\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.cells.GeomCell),\n        AxisCell: resolver.getCellDef(registry.cells.AxisCell),\n        BlankCell: resolver.getCellDef(registry.cells.BlankCell),\n        TextCell: resolver.getCellDef(registry.cells.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n    const { simpleEncoder } = encoders;\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n    simpleEncoder.data(groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {},\n    transformedData: {},\n    store: {}\n};\n","import { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        this._placeholderInfo = {};\n        generateGetterSetters(this, this.constructor.getterSetters());\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    static getterSetters () {\n        return RESOLVER_PROPS;\n    }\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    optionalProjections (config, layerConfig, schema) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        const encoder = this.encoder();\n        optionalProjections.push(...encoder.getProjectionFields(layerConfig, schema));\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry().cells;\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            interactions\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n        const { VisualUnit } = this.registry();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    interactions\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setRetinalAxisDomain (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.getRetinalAxes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n\n        this.axes(retinalAxes);\n\n        this.updateVisualUnit(config);\n\n        return this;\n    }\n\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const { TextCell, BlankCell } = this.registry().cells;\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    updateVisualUnit (retinalConfig) {\n        const retinalAxes = this.getRetinalAxes();\n\n        const { lifeCycleManager } = this.dependencies();\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(retinalConfig);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        this._placeholderInfo = computeMatrices(context, config);\n\n        return this._placeholderInfo;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","import { MeasureSubtype, DimensionSubtype, FieldType } from 'muze-utils';\n\nimport { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [FieldType.DIMENSION]: ScaleType.BAND,\n    [DimensionSubtype.CATEGORICAL]: ScaleType.BAND,\n    [DimensionSubtype.TEMPORAL]: ScaleType.TIME,\n    [FieldType.MEASURE]: ScaleType.LINEAR,\n    [MeasureSubtype.CONTINUOUS]: ScaleType.LINEAR,\n    [DimensionSubtype.BINNED]: ScaleType.BAND\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.dataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.dataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = context.createEncoderInstance();\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setRetinalAxisDomain(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n    const { VisualUnit, layerRegistry } = context.registry();\n    const { base: BaseLayer } = layerRegistry;\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry({\n                    cells: value.cellRegistry,\n                    VisualUnit: value.VisualUnit\n                });\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup,\n    getEncoder\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            components,\n            componentSubRegistry,\n            interactions\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, this.constructor.getterSetters());\n        generateGetterSetters(this, this.constructor.localOptions());\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.createMatrixResolver();\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layers.get(),\n            cellRegistry: componentSubRegistry.cells.get(),\n            VisualUnit: components.VisualUnit,\n            interactions\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    static formalName () {\n        return 'VisualGroup';\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    static getterSetters () {\n        return PROPS;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n\n    createEncoderInstance () {\n        const layers = this.layers();\n\n        return getEncoder(layers);\n    }\n\n    createMatrixResolver () {\n        this.resolver(new MatrixResolver(this._dependencies));\n\n        return this;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const MARGINBUFFER = 10;\nexport const DEFAULTICONSIZE = { // approximately the (size needed) * Math.PI value\n    circle: 64,\n    square: 45.8\n};\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol, mergeRecursive } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(192,192,192,0.6)',\n            type: 'square'\n        }\n    }\n};\n\nconst tempConfig = mergeRecursive({}, DEFAULT_CONFIG);\n\nconst ITEM_FORMATTER = {\n    item: {\n        text: {\n            formatter: val => `${val[0]}-${val[1]}`\n        }\n    }\n};\n\nexport const STEP_DEFAULT_CONFIG = mergeRecursive(tempConfig, ITEM_FORMATTER);\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        // const value = prop ? item[prop] : item;\n        const formattedData = formatter(item.range, index, data, context);\n        const { height, width } = labelManager.getOriSize(formattedData);\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        const { interactions } = dependencies.registry;\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, interactions.behaviours.get(), legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE,\n    MARGINBUFFER\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width + itemSpaces.length * MARGINBUFFER}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width + MARGINBUFFER}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width + MARGINBUFFER}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width + MARGINBUFFER}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT,\n    DEFAULTICONSIZE,\n    MARGINBUFFER,\n    HORIZONTAL\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const shape = d[1] || defaultIcon;\n    const size = d[3] || DEFAULTICONSIZE[shape] * Math.PI;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, icon)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color)\n                        .attr('stroke', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix,\n           shape,\n           align\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px')\n            .style('margin-left', `${align === HORIZONTAL ? 0 : MARGINBUFFER}px`);\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon(shape, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            const data = d[1].split('-');\n            const lowerLimit = +data[0];\n            const upperLimit = +data[1];\n            const formattedData = formatter([lowerLimit, upperLimit], i, dataArr, context);\n            selectElement(this).text(formattedData);\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.source().config({\n        tickFormat: (val, i, data) => context.config().item.text.formatter(val, i, data, context)\n    });\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\nimport { STEP_DEFAULT_CONFIG } from './defaults';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static defaultConfig () {\n        return STEP_DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const ICON_SHAPES = {\n    SQUARE: 'square',\n    CIRCLE: 'circle'\n};\n\nexport const IS_POINT_MAP = {\n    true: ICON_SHAPES.CIRCLE,\n    false: ICON_SHAPES.SQUARE\n};\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const POINT = 'point';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([title, titleConfig]) => {\n                let t = title;\n                if (typeof title === 'string' || !title) {\n                    t = () => title;\n                }\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return [t, mergeRecursive(defConfig, titleConfig)];\n            }\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([subtitle, subtitleConfig]) => {\n                let sub = subtitle;\n                if (typeof subtitle === 'string' || !subtitle) {\n                    sub = () => subtitle;\n                }\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return [sub, mergeRecursive(defConfig, subtitleConfig)];\n            }\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: [null, null],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            takesMultipleParams: true,\n            sanitization: ([config, auxConfig = {}], oldConfig) => {\n                // Stores additional config, if passed\n                const { reset = false } = auxConfig;\n                let oldConf = {};\n\n                if (!reset) {\n                    oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                }\n\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return fixScrollBarConfig(newConf);\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\nimport { SIMPLE_CELL } from './constants';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    static formalName () {\n        return SIMPLE_CELL;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.AXIS_CELL;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.BLANK_CELL;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\nimport * as CONSTANTS from './constants';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    static formalName () {\n        return CONSTANTS.TEXT_CELL;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport * as CONSTANTS from './constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    static formalName () {\n        return CONSTANTS.GEOM_CELL;\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        register: (def) => {\n            const key = def.formalName();\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING,\n    BORDER, MARGIN, SIZE, COLOR, IS_POINT_MAP, POINT\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n * @param {*} mark mark of the layers in the canvas\n * @param {*} scaleType type of the scale to draw the legend ie shape, size or color\n *\n */\nexport const legendIconShapeMapper = (layers, scaleType) => {\n    const layerMarks = layers.map(el => el.mark);\n    const shape = IS_POINT_MAP[(scaleType === COLOR || scaleType === SIZE)\n    && layerMarks.includes(POINT)];\n    return shape;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n    const interactionRegistry = canvas.registry().interactions;\n    const parser = getValueParser(invalidValues);\n\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    },\n                    registry: {\n                        interactions: interactionRegistry\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n\n            const mark = canvas.composition().visualGroup.resolver().matrixLayers()[0][0];\n            config.shape = legendIconShapeMapper(mark, scaleType);\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        const { target, className } = params.config;\n        this.component = params.component;\n        this.params = params;\n        this.target(target);\n        this.className(className);\n        this.position(params.config.position);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    const headerValues = Object.values(renderDetails.components.headers);\n    let sum = 0;\n    let messageWrapper = null;\n\n    for (const val of headerValues) {\n        sum += val.logicalSpace().height;\n    }\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height() - sum, width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG,\n            position: TOP\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent.updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const param = params[0];\n            const components = Object.assign({}, param.components);\n            const componentSubRegistry = Object.assign({}, param.componentSubRegistry);\n            const interactionRegistry = Object.assign({}, param.interactions);\n\n            this._registry = { components, componentSubRegistry, interactions: interactionRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\nimport { registry as interactionRegistry } from '@chartshq/muze-firebolt';\n\nexport const COMPONENTS = {\n    [VisualGroup.formalName()]: VisualGroup,\n    [VisualUnit.formalName()]: VisualUnit\n};\n\nexport const SUBREGISTRIES = {\n    cells: cellRegistry,\n    layers: layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\nconst componentRegistry = (components = COMPONENTS) => {\n    const reg = Object.assign({}, components);\n\n    return {\n        register: (cls) => {\n            const key = cls.formalName();\n            reg[key] = cls;\n            return componentRegistry;\n        },\n        get: () => reg\n    };\n};\n\nexport const registry = {\n    components: componentRegistry(COMPONENTS),\n    cells: cellRegistry(),\n    layers: layerRegistry(),\n    interactions: interactionRegistry\n};\n","import * as utils from 'muze-utils';\n\nimport { VisualUnit, helpers as unitHelpers, enums as unitEnums, UnitFireBolt } from '@chartshq/visual-unit';\nimport { VisualGroup, Encoders, encoderHelpers, groupUtils, enums as groupEnums } from '@chartshq/visual-group';\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect,\n    Firebolt\n} from '@chartshq/muze-firebolt';\nimport {\n    layerFactory,\n    BaseLayer,\n    LineLayer,\n    TextLayer,\n    TickLayer,\n    PointLayer,\n    helpers,\n    enums,\n    SimpleLayer,\n    AreaLayer,\n    ArcLayer,\n    layerMixins\n} from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { registry as globalRegistry, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\nconst {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    Store\n} = utils;\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = globalRegistry.components;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    overrideRegistry.forEach((def) => {\n        registry.register(def);\n    });\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, globalRegistry.components.get());\n    const componentSubRegistryDef = Object.assign({}, SUBREGISTRIES);\n\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop](globalRegistry[prop].get());\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry,\n            interactions: globalRegistry.interactions\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            overrideRegistry.forEach((def) => {\n                const prop = def.formalName();\n                if (prop in defaultRegistry) {\n                    components[prop] = def;\n                }\n            });\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nmuze.registry = globalRegistry;\n\nmuze.Components = {\n    VisualLayer: {\n        layers: {\n            BaseLayer,\n            LineLayer,\n            TextLayer,\n            TickLayer,\n            PointLayer,\n            SimpleLayer,\n            AreaLayer,\n            ArcLayer\n        },\n        helpers,\n        enums,\n        layerMixins\n    },\n    VisualUnit: {\n        constructor: VisualUnit,\n        helpers: unitHelpers,\n        enums: unitEnums,\n        UnitFireBolt\n    },\n    VisualGroup: {\n        constructor: VisualGroup,\n        Encoders,\n        encoderHelpers,\n        groupUtils,\n        enums: groupEnums\n    },\n    Canvas: {\n        constructor: Canvas\n    },\n    Firebolt: {\n        constructor: Firebolt\n    }\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = utils;\nmuze.Model = new Store().model.constructor;\n\nexport default muze;\n"],"sourceRoot":""}