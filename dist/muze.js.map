{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","keywords","author","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","build:dev","build:prod","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","group_by_functions","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","C","I","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","reducer_store_ReducerStore","entries","_this","ve","reducer","_this2","__unregister","delete","Function","reducer_store","ge","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","Se","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ve","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","$e","dataFormat","Qe","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","it","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","lt","ct","fieldSeparator","dsv","dsv_arr","ft","insertionIndex","st","converters","FlatJSON","DSVStr","DSVArr","prepareSelectionData","resp","_iteratorNormalCompletion","persistDerivations","sourceDm","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","helper_selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","selectHelper","clonedDm","selectFn","cachedStore","cloneProvider","getPartialFieldspace","getKey","fn","helper_filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","clone","partialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","dataModel","keyFn","dataObj","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","propModel","select","saveChild","some","helper_addDiffsetToClonedDm","selectConfig","helper_cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","dt","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_cachedValueObjects","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","getNormalizedProFields","fieldConfig","normalizedProjField","constructor","search","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","cloneConfig","extraCloneDm","setOfRowDiffsets","setParent","_fieldConfig","fieldObj","def","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","Lt","fill","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","reducerObj","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","helper_splitWithSelect","splitRowDiffset","dimensionMap","dimensionSet","rowSplitDiffsetIterator","clonedDMs","uniqueFields","commonFields","normalizedProjFieldSets","fieldSet","projFieldSet","projFields","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","DataFormat","FilteringMode","enums_namespaceObject","Qt","Yt","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","count","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","DimensionSubtype","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","_len","_key","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len3","measureFieldNames","_key3","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","_len2","_key2","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","_len4","_key4","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","_len5","_key5","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","nf","FieldType","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref5","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","UnitFireBolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrder","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","facetNames","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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,OAAS,KCAzCgxD,YAAS,IAAI7pD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,+BAES8W,cAAKK,aCZTA,YAAS,IAAI7pD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,+BAES8W,cAAKK,aCZTA,YAAS,IAAI7pD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,+BAES8W,cAAKK,aCALL,cAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCES8W,cAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCES8W,cAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCES8W,gBAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCES8W,gBAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCES8W,kBAZK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIszC,gCCAS8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,gBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,gBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,cAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,gBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,gBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCRKmX,aAAS,IAAI7pD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,+BAES8W,eAAKK,cCALL,gBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,eAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIszC,gCCES8W,iBAVK,IAAIxpD,MAAM,GAAG+S,OAC/B,qBACA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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].value === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n    mode = mode || FilteringMode.NORMAL;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const fieldObj = fieldsConfig[field];\n    const { index, def } = fieldObj;\n    const interval = def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const nf = def.type === FieldType.MEASURE ? fieldspace.fieldsObj()[field].numberFormat() : val => val;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(nf, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const context = this.firebolt.context;\n            const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n            layers.forEach((layer) => {\n                const linkedLayer = context.getLayerByName(layer.config().owner);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n\n                layer.data(transformedDataModel);\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        const facetSortConfig = sortConfig[name];\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).sort(sortInfo, { saveChild: false }).getData().data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html':\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, LAYOUT_ALIGN, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}